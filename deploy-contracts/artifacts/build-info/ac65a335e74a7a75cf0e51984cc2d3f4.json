{"id":"ac65a335e74a7a75cf0e51984cc2d3f4","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/DexaCreator.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\n\ncontract DexaCreator is AccessControl, Initializable {\n    bytes32 public constant CREATOR_ROLE = keccak256(\"CREATOR_ROLE\");\n    bytes32 public constant DEXA_CREATOR_ROLE = keccak256(\"DEXA_CREATOR_ROLE\");\n    bytes32 public constant DEXA_FEEDS_ROLE = keccak256(\"DEXA_FEEDS_ROLE\");\n    bytes32 public constant DEXA_MESSENGER_ROLE = keccak256(\"DEXA_MESSENGER_ROLE\");\n    bytes32 public constant DEXA_STORAGE_ROLE = keccak256(\"DEXA_STORAGE_ROLE\");\n\n    string public constant ERROR_DUPLICATE_RESOURCE = \"Resource already exists\";\n    string public constant ERROR_INVALID_PRICE = \"Invalid price\";\n    string public constant ERROR_INVALID_STRING = \"Invalid string\";\n    string public constant ERROR_NOT_FOUND = \"Resource not found\";\n    string public constant ERROR_PROCESS_FAILED = \"Process failed\";\n    string public constant ERROR_UNAUTHORISED_ACCESS = \"Unauthorised access\";\n\n    uint256 public feeRate;\n    uint256 public creatorCount;\n    uint256 public transactionCount;\n    address public owner;\n\n    mapping(address => bool) public _allowedTokens;\n\n    enum TransactionType { DEPOSIT, WITHDRAWAL, TRANSFER, TIP }\n\n    struct Creator {\n        string name;\n        string username;\n        address payable wallet;\n        string pfp;\n        string banner;\n        string bio;\n        string website;\n        string dexaURI;\n        uint256 createdAt;\n        uint256 updatedAt;\n        address[] friends;\n        bool isVerified;\n    }\n\n    struct TokenBalance {\n        address tokenAddress;\n        uint256 balance;\n    }\n\n    struct Transaction {\n        uint256 txId;\n        TransactionType txType;\n        address payable txFrom;\n        address payable txTo;\n        uint256 txAmount;\n        uint256 txFee;\n        uint256 txDate;\n        address tokenAddress;\n    }\n\n    event NewCreator(address indexed creator, string displayName, string username);\n    event BalanceCredited(address indexed userAddress, uint256 amount);\n    event BalanceDebited(address indexed userAddress, uint256 amount);\n    event Transferred(address indexed from, address indexed to, uint256 amount);\n    event TokenAdded(address indexed tokenAddress);\n    event TokenAddressAdded(address indexed userAddress, address indexed tokenAddress);\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        owner = msg.sender;\n    }\n\n    function init_dexa_base(address _admin) public initializer {\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\n    }\n\n    function init_dexa_creator(address _admin) public initializer {\n        _grantRole(DEXA_CREATOR_ROLE, _admin);\n    }\n\n    function init_roles(address _dexaFeed, address _dexaMessenger) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        _grantRole(DEXA_FEEDS_ROLE, _dexaFeed);\n        _grantRole(DEXA_MESSENGER_ROLE, _dexaMessenger);\n    }\n\n    function registerCreator(string memory displayName, string memory username, string memory dexaProfile) public {\n        require(bytes(displayName).length > 0, ERROR_INVALID_STRING);\n        require(bytes(username).length > 0, ERROR_INVALID_STRING);\n        require(isNameFree(username), ERROR_DUPLICATE_RESOURCE);\n\n        _grantRole(CREATOR_ROLE, msg.sender);\n\n        emit NewCreator(msg.sender, displayName, username);\n    }\n\n    function isNameFree(string memory username) public view returns (bool) {\n        return true; // Simplified for this implementation\n    }\n\n    function addTokenToWhitelist(address[] memory tokenAddress) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint i = 0; i < tokenAddress.length; i++) {\n            _allowedTokens[tokenAddress[i]] = true;\n            emit TokenAdded(tokenAddress[i]);\n        }\n    }\n\n    function setAdminFee(uint256 _feeRate) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        feeRate = _feeRate;\n    }\n\n    receive() external payable {}\n    fallback() external payable {}\n}\n"},"contracts/DexaFeeds.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"./DexaCreator.sol\";\nimport \"./FeedsToken.sol\";\n\ncontract DexaFeeds is AccessControl, Initializable {\n    bytes32 public constant CREATOR_ROLE = keccak256(\"CREATOR_ROLE\");\n    bytes32 public constant DEXA_CREATOR_ROLE = keccak256(\"DEXA_CREATOR_ROLE\");\n    bytes32 public constant DEXA_FEEDS_ROLE = keccak256(\"DEXA_FEEDS_ROLE\");\n    bytes32 public constant DEXA_MESSENGER_ROLE = keccak256(\"DEXA_MESSENGER_ROLE\");\n    bytes32 public constant DEXA_STORAGE_ROLE = keccak256(\"DEXA_STORAGE_ROLE\");\n\n    string public constant ERROR_DUPLICATE_RESOURCE = \"Resource already exists\";\n    string public constant ERROR_INVALID_PRICE = \"Invalid price\";\n    string public constant ERROR_INVALID_STRING = \"Invalid string\";\n    string public constant ERROR_NOT_FOUND = \"Resource not found\";\n    string public constant ERROR_PROCESS_FAILED = \"Process failed\";\n    string public constant ERROR_UNAUTHORISED_ACCESS = \"Unauthorised access\";\n\n    uint256 public feeRate;\n    DexaCreator public dexaCreator;\n    FeedsToken public feedsToken;\n\n    mapping(address => bool) public _allowedTokens;\n\n    event PostMinted(address indexed creator, uint256 indexed postId, string gnfdId, address remintToken, uint256 remintPrice);\n    event Tipped(address indexed from, address indexed to, uint256 amount, uint256 indexed postId, string offChainId, string message, address tippedToken, uint256 tipId);\n    event TokenAdded(address indexed tokenAddress);\n\n    constructor(address payable _dexaCreator, address _feedsToken) {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        dexaCreator = DexaCreator(_dexaCreator);\n        feedsToken = FeedsToken(_feedsToken);\n    }\n\n    function addTokenToWhitelist(address[] memory tokenAddress) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint i = 0; i < tokenAddress.length; i++) {\n            _allowedTokens[tokenAddress[i]] = true;\n            emit TokenAdded(tokenAddress[i]);\n        }\n    }\n\n    function commentOnPost(uint256 postId, string memory commentId, string memory content) public {\n        require(bytes(commentId).length > 0, ERROR_INVALID_STRING);\n        require(bytes(content).length > 0, ERROR_INVALID_STRING);\n        // Implementation simplified\n    }\n}\n"},"contracts/DexaMessenger.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"./DexaCreator.sol\";\n\ncontract DexaMessenger is AccessControl, Initializable {\n    bytes32 public constant CREATOR_ROLE = keccak256(\"CREATOR_ROLE\");\n    bytes32 public constant DEXA_CREATOR_ROLE = keccak256(\"DEXA_CREATOR_ROLE\");\n    bytes32 public constant DEXA_FEEDS_ROLE = keccak256(\"DEXA_FEEDS_ROLE\");\n    bytes32 public constant DEXA_MESSENGER_ROLE = keccak256(\"DEXA_MESSENGER_ROLE\");\n    bytes32 public constant DEXA_STORAGE_ROLE = keccak256(\"DEXA_STORAGE_ROLE\");\n\n    string public constant ERROR_DUPLICATE_RESOURCE = \"Resource already exists\";\n    string public constant ERROR_INVALID_PRICE = \"Invalid price\";\n    string public constant ERROR_INVALID_STRING = \"Invalid string\";\n    string public constant ERROR_NOT_FOUND = \"Resource not found\";\n    string public constant ERROR_PROCESS_FAILED = \"Process failed\";\n    string public constant ERROR_UNAUTHORISED_ACCESS = \"Unauthorised access\";\n\n    DexaCreator public dexaCreator;\n\n    constructor(address payable _dexaCreator) {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        dexaCreator = DexaCreator(_dexaCreator);\n    }\n}\n"},"contracts/FeedsToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\n\ncontract FeedsToken is ERC20, ERC20Burnable, AccessControl, ERC20Permit {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor() ERC20(\"Feeds Token\", \"FEEDS\") ERC20Permit(\"Feeds Token\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n    }\n\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DexaCreator.sol:86:81:\n   |\n86 |     function registerCreator(string memory displayName, string memory username, string memory dexaProfile) public {\n   |                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3082,"file":"contracts/DexaCreator.sol","start":3057},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DexaCreator.sol:96:25:\n   |\n96 |     function isNameFree(string memory username) public view returns (bool) {\n   |                         ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":3456,"file":"contracts/DexaCreator.sol","start":3434},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/DexaFeeds.sol:46:28:\n   |\n46 |     function commentOnPost(uint256 postId, string memory commentId, string memory content) public {\n   |                            ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2152,"file":"contracts/DexaFeeds.sol","start":2138},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/DexaCreator.sol:96:5:\n   |\n96 |     function isNameFree(string memory username) public view returns (bool) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":3551,"file":"contracts/DexaCreator.sol","start":3414},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/DexaFeeds.sol:46:5:\n   |\n46 |     function commentOnPost(uint256 postId, string memory commentId, string memory content) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":2387,"file":"contracts/DexaFeeds.sol","start":2115},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[295],"Context":[1693],"ERC165":[4241],"IAccessControl":[378]},"id":296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":379,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":1694,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":296,"sourceUnit":4242,"src":"233:57:0","symbolAliases":[{"foreign":{"id":6,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"241:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"Context","nameLocations":["1988:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1693,"src":"1988:7:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1988:7:0"},{"baseName":{"id":11,"name":"IAccessControl","nameLocations":["1997:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":378,"src":"1997:14:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1997:14:0"},{"baseName":{"id":13,"name":"ERC165","nameLocations":["2013:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4241,"src":"2013:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"2013:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"292:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":295,"linearizedBaseContracts":[295,4241,4253,378,1693],"name":"AccessControl","nameLocation":"1971:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":21,"members":[{"constant":false,"id":18,"mutability":"mutable","name":"hasRole","nameLocation":"2085:7:0","nodeType":"VariableDeclaration","scope":21,"src":"2052:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":17,"keyName":"account","keyNameLocation":"2068:7:0","keyType":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"2060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2052:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":16,"name":"bool","nodeType":"ElementaryTypeName","src":"2079:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"adminRole","nameLocation":"2110:9:0","nodeType":"VariableDeclaration","scope":21,"src":"2102:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2102:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2033:8:0","nodeType":"StructDefinition","scope":295,"src":"2026:100:0","visibility":"public"},{"constant":false,"id":26,"mutability":"mutable","name":"_roles","nameLocation":"2174:6:0","nodeType":"VariableDeclaration","scope":295,"src":"2132:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":25,"keyName":"role","keyNameLocation":"2148:4:0","keyType":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2132:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":24,"nodeType":"UserDefinedTypeName","pathNode":{"id":23,"name":"RoleData","nameLocations":["2156:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":21,"src":"2156:8:0"},"referencedDeclaration":21,"src":"2156:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":29,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2211:18:0","nodeType":"VariableDeclaration","scope":295,"src":"2187:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":27,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2187:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2232:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":39,"nodeType":"Block","src":"2454:44:0","statements":[{"expression":{"arguments":[{"id":35,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2475:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":34,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":93,"src":"2464:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2464:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":37,"nodeType":"ExpressionStatement","src":"2464:16:0"},{"id":38,"nodeType":"PlaceholderStatement","src":"2490:1:0"}]},"documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"2243:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":40,"name":"onlyRole","nameLocation":"2431:8:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"role","nameLocation":"2448:4:0","nodeType":"VariableDeclaration","scope":40,"src":"2440:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2440:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2439:14:0"},"src":"2422:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4240],"body":{"id":61,"nodeType":"Block","src":"2656:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":49,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2673:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":51,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"2693:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$378_$","typeString":"type(contract IAccessControl)"}],"id":50,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2688:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$378","typeString":"type(contract IAccessControl)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2709:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2688:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2673:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":57,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2748:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":55,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2724:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$295_$","typeString":"type(contract super AccessControl)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2730:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4240,"src":"2724:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2724:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2673:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":48,"id":60,"nodeType":"Return","src":"2666:94:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"2504:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":62,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2574:17:0","nodeType":"FunctionDefinition","overrides":{"id":45,"nodeType":"OverrideSpecifier","overrides":[],"src":"2632:8:0"},"parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"interfaceId","nameLocation":"2599:11:0","nodeType":"VariableDeclaration","scope":62,"src":"2592:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":42,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2592:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2591:20:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62,"src":"2650:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":46,"name":"bool","nodeType":"ElementaryTypeName","src":"2650:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2649:6:0"},"scope":295,"src":"2565:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[345],"body":{"id":79,"nodeType":"Block","src":"2937:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":72,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"2954:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":74,"indexExpression":{"id":73,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"2961:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":75,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2967:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"2954:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":77,"indexExpression":{"id":76,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"2975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2954:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":71,"id":78,"nodeType":"Return","src":"2947:36:0"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"2773:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":80,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2863:7:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65,"mutability":"mutable","name":"role","nameLocation":"2879:4:0","nodeType":"VariableDeclaration","scope":80,"src":"2871:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":64,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2871:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"account","nameLocation":"2893:7:0","nodeType":"VariableDeclaration","scope":80,"src":"2885:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"2885:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2870:31:0"},"returnParameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":80,"src":"2931:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":69,"name":"bool","nodeType":"ElementaryTypeName","src":"2931:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2930:6:0"},"scope":295,"src":"2854:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":92,"nodeType":"Block","src":"3255:47:0","statements":[{"expression":{"arguments":[{"id":87,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"3276:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":88,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3282:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[93,114],"referencedDeclaration":114,"src":"3265:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3265:30:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2996:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":93,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3208:10:0","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"role","nameLocation":"3227:4:0","nodeType":"VariableDeclaration","scope":93,"src":"3219:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":82,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3219:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3218:14:0"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[],"src":"3255:0:0"},"scope":295,"src":"3199:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":113,"nodeType":"Block","src":"3505:124:0","statements":[{"condition":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3519:23:0","subExpression":{"arguments":[{"id":102,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3528:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3534:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":101,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3520:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3520:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":112,"nodeType":"IfStatement","src":"3515:108:0","trueBody":{"id":111,"nodeType":"Block","src":"3544:79:0","statements":[{"errorCall":{"arguments":[{"id":107,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3598:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3607:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":106,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"3565:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"RevertStatement","src":"3558:54:0"}]}}]},"documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"3308:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3441:10:0","nodeType":"FunctionDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"mutability":"mutable","name":"role","nameLocation":"3460:4:0","nodeType":"VariableDeclaration","scope":114,"src":"3452:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"account","nameLocation":"3474:7:0","nodeType":"VariableDeclaration","scope":114,"src":"3466:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"3466:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3451:31:0"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[],"src":"3505:0:0"},"scope":295,"src":"3432:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[353],"body":{"id":127,"nodeType":"Block","src":"3884:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":122,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"3901:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":124,"indexExpression":{"id":123,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3908:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3901:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":125,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3914:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"3901:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":121,"id":126,"nodeType":"Return","src":"3894:29:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3635:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":128,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3819:12:0","nodeType":"FunctionDefinition","parameters":{"id":118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"role","nameLocation":"3840:4:0","nodeType":"VariableDeclaration","scope":128,"src":"3832:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3832:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3831:14:0"},"returnParameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":128,"src":"3875:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3875:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3874:9:0"},"scope":295,"src":"3810:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[361],"body":{"id":146,"nodeType":"Block","src":"4320:42:0","statements":[{"expression":{"arguments":[{"id":142,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4341:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":143,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"4347:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":141,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4330:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":145,"nodeType":"ExpressionStatement","src":"4330:25:0"}]},"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"3936:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":147,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":137,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"4313:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":136,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4300:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4300:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":139,"kind":"modifierInvocation","modifierName":{"id":135,"name":"onlyRole","nameLocations":["4291:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4291:8:0"},"nodeType":"ModifierInvocation","src":"4291:28:0"}],"name":"grantRole","nameLocation":"4235:9:0","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"role","nameLocation":"4253:4:0","nodeType":"VariableDeclaration","scope":147,"src":"4245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"account","nameLocation":"4267:7:0","nodeType":"VariableDeclaration","scope":147,"src":"4259:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"4259:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4244:31:0"},"returnParameters":{"id":140,"nodeType":"ParameterList","parameters":[],"src":"4320:0:0"},"scope":295,"src":"4226:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[369],"body":{"id":165,"nodeType":"Block","src":"4737:43:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4759:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"4765:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4747:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":164,"nodeType":"ExpressionStatement","src":"4747:26:0"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"4368:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4730:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"4717:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4717:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nameLocations":["4708:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"4708:8:0"},"nodeType":"ModifierInvocation","src":"4708:28:0"}],"name":"revokeRole","nameLocation":"4651:10:0","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"role","nameLocation":"4670:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4662:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4662:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"account","nameLocation":"4684:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4676:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"4676:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4661:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4737:0:0"},"scope":295,"src":"4642:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[377],"body":{"id":188,"nodeType":"Block","src":"5407:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5421:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":175,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5421:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"IfStatement","src":"5417:102:0","trueBody":{"id":181,"nodeType":"Block","src":"5457:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":178,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"5478:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5478:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":180,"nodeType":"RevertStatement","src":"5471:37:0"}]}},{"expression":{"arguments":[{"id":184,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5541:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":185,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5547:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":183,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"5529:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":187,"nodeType":"ExpressionStatement","src":"5529:37:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4786:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":189,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5337:12:0","nodeType":"FunctionDefinition","parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5358:4:0","nodeType":"VariableDeclaration","scope":189,"src":"5350:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5350:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5372:18:0","nodeType":"VariableDeclaration","scope":189,"src":"5364:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5349:42:0"},"returnParameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"5407:0:0"},"scope":295,"src":"5328:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":216,"nodeType":"Block","src":"5771:174:0","statements":[{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5789:17:0","nodeType":"VariableDeclaration","scope":216,"src":"5781:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5781:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":202,"initialValue":{"arguments":[{"id":200,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5822:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":199,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"5809:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5809:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5781:46:0"},{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":203,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"5837:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":205,"indexExpression":{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5844:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5837:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5850:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5837:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":207,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5862:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5837:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":209,"nodeType":"ExpressionStatement","src":"5837:34:0"},{"eventCall":{"arguments":[{"id":211,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5903:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":212,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"5909:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5928:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":210,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"5886:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5886:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":215,"nodeType":"EmitStatement","src":"5881:57:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"5579:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5707:13:0","nodeType":"FunctionDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"role","nameLocation":"5729:4:0","nodeType":"VariableDeclaration","scope":217,"src":"5721:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"adminRole","nameLocation":"5743:9:0","nodeType":"VariableDeclaration","scope":217,"src":"5735:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5735:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5720:33:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"5771:0:0"},"scope":295,"src":"5698:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":255,"nodeType":"Block","src":"6262:233:0","statements":[{"condition":{"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6276:23:0","subExpression":{"arguments":[{"id":228,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6285:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6291:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6277:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6277:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":253,"nodeType":"Block","src":"6452:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6473:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":226,"id":252,"nodeType":"Return","src":"6466:12:0"}]},"id":254,"nodeType":"IfStatement","src":"6272:217:0","trueBody":{"id":250,"nodeType":"Block","src":"6301:145:0","statements":[{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":232,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6315:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":234,"indexExpression":{"id":233,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6322:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6315:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6328:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6315:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":237,"indexExpression":{"id":236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6336:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6315:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6347:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6315:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"6315:36:0"},{"eventCall":{"arguments":[{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"6382:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":243,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"6388:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":244,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6397:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":241,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6370:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6370:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":247,"nodeType":"EmitStatement","src":"6365:45:0"},{"expression":{"hexValue":"74727565","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6431:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":226,"id":249,"nodeType":"Return","src":"6424:11:0"}]}}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"5951:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":256,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6188:10:0","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"role","nameLocation":"6207:4:0","nodeType":"VariableDeclaration","scope":256,"src":"6199:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6199:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"6221:7:0","nodeType":"VariableDeclaration","scope":256,"src":"6213:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"6213:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6198:31:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":256,"src":"6256:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":224,"name":"bool","nodeType":"ElementaryTypeName","src":"6256:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6255:6:0"},"scope":295,"src":"6179:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":293,"nodeType":"Block","src":"6816:233:0","statements":[{"condition":{"arguments":[{"id":267,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6838:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"6830:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":291,"nodeType":"Block","src":"7006:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7027:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":265,"id":290,"nodeType":"Return","src":"7020:12:0"}]},"id":292,"nodeType":"IfStatement","src":"6826:217:0","trueBody":{"id":288,"nodeType":"Block","src":"6854:146:0","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":270,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"6868:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":272,"indexExpression":{"id":271,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6875:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6868:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$21_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6881:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"6868:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":275,"indexExpression":{"id":274,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6889:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6868:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6900:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6868:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":278,"nodeType":"ExpressionStatement","src":"6868:37:0"},{"eventCall":{"arguments":[{"id":280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"6936:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"6942:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":282,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"6951:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6951:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"6924:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6924:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"EmitStatement","src":"6919:45:0"},{"expression":{"hexValue":"74727565","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6985:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":265,"id":287,"nodeType":"Return","src":"6978:11:0"}]}}]},"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"6501:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":294,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6741:11:0","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"role","nameLocation":"6761:4:0","nodeType":"VariableDeclaration","scope":294,"src":"6753:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"account","nameLocation":"6775:7:0","nodeType":"VariableDeclaration","scope":294,"src":"6767:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"6767:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6752:31:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"6810:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":263,"name":"bool","nodeType":"ElementaryTypeName","src":"6810:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6809:6:0"},"scope":295,"src":"6732:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":296,"src":"1953:5098:0","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"108:6944:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[378]},"id":379,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":297,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":378,"linearizedBaseContracts":[378],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":305,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":305,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":300,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":303,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":305,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":308,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":309,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":317,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":317,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":310,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":313,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":317,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":315,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":317,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":326,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":326,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":322,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":326,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":326,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":327,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":335,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":329,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":335,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":328,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":331,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":335,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":335,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":345,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":378,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":353,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":353,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":378,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":361,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":358,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":361,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":378,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":369,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":363,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":369,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":378,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":377,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":377,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":377,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":378,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":379,"src":"226:3116:1","usedErrors":[305,308],"usedEvents":[317,326,335]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[403]},"id":404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":380,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":403,"linearizedBaseContracts":[403],"name":"IERC5267","nameLocation":"143:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"158:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":383,"name":"EIP712DomainChanged","nameLocation":"253:19:2","nodeType":"EventDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"272:2:2"},"src":"247:28:2"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"281:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:2","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"447:2:2"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"fields","nameLocation":"517:6:2","nodeType":"VariableDeclaration","scope":402,"src":"510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":386,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"name","nameLocation":"551:4:2","nodeType":"VariableDeclaration","scope":402,"src":"537:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":388,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":391,"mutability":"mutable","name":"version","nameLocation":"583:7:2","nodeType":"VariableDeclaration","scope":402,"src":"569:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":390,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"chainId","nameLocation":"612:7:2","nodeType":"VariableDeclaration","scope":402,"src":"604:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:2","nodeType":"VariableDeclaration","scope":402,"src":"633:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"salt","nameLocation":"680:4:2","nodeType":"VariableDeclaration","scope":402,"src":"672:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"extensions","nameLocation":"715:10:2","nodeType":"VariableDeclaration","scope":402,"src":"698:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":399,"nodeType":"ArrayTypeName","src":"698:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:2"},"scope":403,"src":"426:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":404,"src":"133:605:2","usedErrors":[],"usedEvents":[383]}],"src":"107:632:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[540],"IERC20Errors":[445],"IERC721Errors":[493]},"id":541,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":445,"linearizedBaseContracts":[445],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":415,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":415,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":415,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":415,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":420,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":420,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":425,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":425,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":434,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":434,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":430,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":434,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":434,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":439,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":439,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":444,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":444,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":541,"src":"280:1764:3","usedErrors":[415,420,425,434,439,444],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":493,"linearizedBaseContracts":[493],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":451,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":451,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":456,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":456,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":465,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":465,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":461,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":465,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":465,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":470,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":470,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":475,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":475,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":482,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":482,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":482,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":487,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":487,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":492,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":492,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":541,"src":"2190:2092:3","usedErrors":[451,456,465,470,475,482,487,492],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":540,"linearizedBaseContracts":[540],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":505,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":497,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":505,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":505,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":505,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":505,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":510,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":510,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":515,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":515,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":522,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":522,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":517,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":522,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":527,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":527,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":532,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":532,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":539,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":539,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":539,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":541,"src":"4430:2107:3","usedErrors":[505,510,515,522,527,532,539],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[808]},"id":809,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":542,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"139:2209:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":808,"linearizedBaseContracts":[808],"name":"Initializable","nameLocation":"2367:13:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"2387:293:4","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":551,"members":[{"constant":false,"id":547,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:4","nodeType":"VariableDeclaration","scope":551,"src":"2813:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":546,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":550,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:4","nodeType":"VariableDeclaration","scope":551,"src":"2950:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:4","nodeType":"StructDefinition","scope":808,"src":"2685:290:4","visibility":"public"},{"constant":true,"id":554,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:4","nodeType":"VariableDeclaration","scope":808,"src":"3098:115:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:4","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"3220:60:4","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":557,"name":"InvalidInitialization","nameLocation":"3291:21:4","nodeType":"ErrorDefinition","parameters":{"id":556,"nodeType":"ParameterList","parameters":[],"src":"3312:2:4"},"src":"3285:30:4"},{"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"3321:57:4","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":560,"name":"NotInitializing","nameLocation":"3389:15:4","nodeType":"ErrorDefinition","parameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"3404:2:4"},"src":"3383:24:4"},{"anonymous":false,"documentation":{"id":561,"nodeType":"StructuredDocumentation","src":"3413:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":565,"name":"Initialized","nameLocation":"3514:11:4","nodeType":"EventDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":563,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:4","nodeType":"VariableDeclaration","scope":565,"src":"3526:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":562,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:4"},"src":"3508:34:4"},{"body":{"id":647,"nodeType":"Block","src":"4092:1079:4","statements":[{"assignments":[570],"declarations":[{"constant":false,"id":570,"mutability":"mutable","name":"$","nameLocation":"4187:1:4","nodeType":"VariableDeclaration","scope":647,"src":"4158:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":569,"nodeType":"UserDefinedTypeName","pathNode":{"id":568,"name":"InitializableStorage","nameLocations":["4158:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"4158:20:4"},"referencedDeclaration":551,"src":"4158:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":573,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":571,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"4191:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$551_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:4"},{"assignments":[575],"declarations":[{"constant":false,"id":575,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:4","nodeType":"VariableDeclaration","scope":647,"src":"4279:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":574,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":579,"initialValue":{"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:4","subExpression":{"expression":{"id":576,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4302:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":577,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"4302:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:4"},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:4","nodeType":"VariableDeclaration","scope":647,"src":"4327:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":580,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":584,"initialValue":{"expression":{"id":582,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4348:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"4348:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:4"},{"assignments":[586],"declarations":[{"constant":false,"id":586,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:4","nodeType":"VariableDeclaration","scope":647,"src":"4704:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":585,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":592,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4724:11:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":590,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"4744:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:4"},{"assignments":[594],"declarations":[{"constant":false,"id":594,"mutability":"mutable","name":"construction","nameLocation":"4773:12:4","nodeType":"VariableDeclaration","scope":647,"src":"4768:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":593,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":607,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4788:11:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":600,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$808","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$808","typeString":"contract Initializable"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:4","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:4","memberName":"code","nodeType":"MemberAccess","src":"4808:18:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:4","memberName":"length","nodeType":"MemberAccess","src":"4808:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:4","subExpression":{"id":608,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"4854:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:4","subExpression":{"id":610,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4871:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":617,"nodeType":"IfStatement","src":"4849:91:4","trueBody":{"id":616,"nodeType":"Block","src":"4885:55:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":613,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"4906:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"RevertStatement","src":"4899:30:4"}]}},{"expression":{"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":618,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4949:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"4949:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":623,"nodeType":"ExpressionStatement","src":"4949:18:4"},{"condition":{"id":624,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"4981:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":632,"nodeType":"IfStatement","src":"4977:67:4","trueBody":{"id":631,"nodeType":"Block","src":"4997:47:4","statements":[{"expression":{"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":625,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5011:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"5011:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":630,"nodeType":"ExpressionStatement","src":"5011:22:4"}]}},{"id":633,"nodeType":"PlaceholderStatement","src":"5053:1:4"},{"condition":{"id":634,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5068:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":646,"nodeType":"IfStatement","src":"5064:101:4","trueBody":{"id":645,"nodeType":"Block","src":"5084:81:4","statements":[{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":635,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"5098:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"5098:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":640,"nodeType":"ExpressionStatement","src":"5098:23:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":641,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"5140:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":644,"nodeType":"EmitStatement","src":"5135:19:4"}]}}]},"documentation":{"id":566,"nodeType":"StructuredDocumentation","src":"3548:516:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":648,"name":"initializer","nameLocation":"4078:11:4","nodeType":"ModifierDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"4089:2:4"},"src":"4069:1102:4","virtual":false,"visibility":"internal"},{"body":{"id":694,"nodeType":"Block","src":"6289:392:4","statements":[{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"$","nameLocation":"6384:1:4","nodeType":"VariableDeclaration","scope":694,"src":"6355:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":654,"nodeType":"UserDefinedTypeName","pathNode":{"id":653,"name":"InitializableStorage","nameLocations":["6355:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"6355:20:4"},"referencedDeclaration":551,"src":"6355:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":658,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":656,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"6388:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$551_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":659,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6429:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"6429:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":661,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6448:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"6448:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":663,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6466:7:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":670,"nodeType":"IfStatement","src":"6425:105:4","trueBody":{"id":669,"nodeType":"Block","src":"6475:55:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":666,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6496:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":668,"nodeType":"RevertStatement","src":"6489:30:4"}]}},{"expression":{"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":671,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6539:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"6539:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":674,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6556:7:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":676,"nodeType":"ExpressionStatement","src":"6539:24:4"},{"expression":{"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":677,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6573:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"6573:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":682,"nodeType":"ExpressionStatement","src":"6573:22:4"},{"id":683,"nodeType":"PlaceholderStatement","src":"6605:1:4"},{"expression":{"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":684,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6616:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"6616:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":689,"nodeType":"ExpressionStatement","src":"6616:23:4"},{"eventCall":{"arguments":[{"id":691,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"6666:7:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":690,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"6654:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"EmitStatement","src":"6649:25:4"}]},"documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"5177:1068:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":695,"name":"reinitializer","nameLocation":"6259:13:4","nodeType":"ModifierDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"version","nameLocation":"6280:7:4","nodeType":"VariableDeclaration","scope":695,"src":"6273:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":650,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:4"},"src":"6250:431:4","virtual":false,"visibility":"internal"},{"body":{"id":702,"nodeType":"Block","src":"6919:48:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":698,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"6929:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"6929:20:4"},{"id":701,"nodeType":"PlaceholderStatement","src":"6959:1:4"}]},"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"6687:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":703,"name":"onlyInitializing","nameLocation":"6900:16:4","nodeType":"ModifierDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[],"src":"6916:2:4"},"src":"6891:76:4","virtual":false,"visibility":"internal"},{"body":{"id":715,"nodeType":"Block","src":"7134:89:4","statements":[{"condition":{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:4","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"7149:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":714,"nodeType":"IfStatement","src":"7144:73:4","trueBody":{"id":713,"nodeType":"Block","src":"7168:49:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7189:15:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"RevertStatement","src":"7182:24:4"}]}}]},"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"6973:104:4","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":716,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:4","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"7109:2:4"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"7134:0:4"},"scope":808,"src":"7082:141:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"7758:373:4","statements":[{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"$","nameLocation":"7853:1:4","nodeType":"VariableDeclaration","scope":761,"src":"7824:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":721,"nodeType":"UserDefinedTypeName","pathNode":{"id":720,"name":"InitializableStorage","nameLocations":["7824:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"7824:20:4"},"referencedDeclaration":551,"src":"7824:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":725,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":723,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"7857:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$551_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:4"},{"condition":{"expression":{"id":726,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"7898:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"7898:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":732,"nodeType":"IfStatement","src":"7894:76:4","trueBody":{"id":731,"nodeType":"Block","src":"7915:55:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":728,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"7936:21:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":730,"nodeType":"RevertStatement","src":"7929:30:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":733,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"7983:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"7983:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":736,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:4","memberName":"max","nodeType":"MemberAccess","src":"8001:16:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":760,"nodeType":"IfStatement","src":"7979:146:4","trueBody":{"id":759,"nodeType":"Block","src":"8019:106:4","statements":[{"expression":{"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":741,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"8033:1:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"8033:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":745,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:4","memberName":"max","nodeType":"MemberAccess","src":"8050:16:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":750,"nodeType":"ExpressionStatement","src":"8033:33:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":753,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":752,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:4","memberName":"max","nodeType":"MemberAccess","src":"8097:16:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":751,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"8085:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"EmitStatement","src":"8080:34:4"}]}}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"7229:475:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:4","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"7738:2:4"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"7758:0:4"},"scope":808,"src":"7709:422:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":772,"nodeType":"Block","src":"8306:63:4","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":768,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"8323:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$551_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":770,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:4","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":547,"src":"8323:39:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":767,"id":771,"nodeType":"Return","src":"8316:46:4"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"8137:99:4","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":773,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:4","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"8272:2:4"},"returnParameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":773,"src":"8298:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":765,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:4"},"scope":808,"src":"8241:128:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"8541:64:4","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":779,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"8558:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$551_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:4","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":550,"src":"8558:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":778,"id":782,"nodeType":"Return","src":"8551:47:4"}]},"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"8375:105:4","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:4","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"8509:2:4"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"8535:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":776,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:4"},"scope":808,"src":"8485:120:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":792,"nodeType":"Block","src":"8896:45:4","statements":[{"expression":{"id":790,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"8913:21:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":789,"id":791,"nodeType":"Return","src":"8906:28:4"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"8611:203:4","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":793,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:4","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"8853:2:4"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"8887:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:4"},"scope":808,"src":"8819:122:4","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":806,"nodeType":"Block","src":"9161:115:4","statements":[{"assignments":[801],"declarations":[{"constant":false,"id":801,"mutability":"mutable","name":"slot","nameLocation":"9179:4:4","nodeType":"VariableDeclaration","scope":806,"src":"9171:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":804,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":802,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"9186:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:4"},{"AST":{"nodeType":"YulBlock","src":"9232:38:4","statements":[{"nodeType":"YulAssignment","src":"9246:14:4","value":{"name":"slot","nodeType":"YulIdentifier","src":"9256:4:4"},"variableNames":[{"name":"$.slot","nodeType":"YulIdentifier","src":"9246:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":798,"isOffset":false,"isSlot":true,"src":"9246:6:4","suffix":"slot","valueSize":1},{"declaration":801,"isOffset":false,"isSlot":false,"src":"9256:4:4","valueSize":1}],"id":805,"nodeType":"InlineAssembly","src":"9223:47:4"}]},"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"8947:67:4","text":" @dev Returns a pointer to the storage namespace."},"id":807,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:4","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[],"src":"9104:2:4"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"$","nameLocation":"9158:1:4","nodeType":"VariableDeclaration","scope":807,"src":"9129:30:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":797,"nodeType":"UserDefinedTypeName","pathNode":{"id":796,"name":"InitializableStorage","nameLocations":["9129:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":551,"src":"9129:20:4"},"referencedDeclaration":551,"src":"9129:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$551_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:4"},"scope":808,"src":"9071:205:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":809,"src":"2349:6929:4","usedErrors":[557,560],"usedEvents":[565]}],"src":"113:9166:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1693],"ERC20":[1323],"IERC20":[1401],"IERC20Errors":[445],"IERC20Metadata":[1627]},"id":1324,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":810,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":812,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":1402,"src":"131:36:5","symbolAliases":[{"foreign":{"id":811,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":814,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":1628,"src":"168:63:5","symbolAliases":[{"foreign":{"id":813,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":816,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":1694,"src":"232:48:5","symbolAliases":[{"foreign":{"id":815,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":818,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1324,"sourceUnit":541,"src":"281:65:5","symbolAliases":[{"foreign":{"id":817,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":820,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1693,"src":"1133:7:5"},"id":821,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":822,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1401,"src":"1142:6:5"},"id":823,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":824,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1627,"src":"1150:14:5"},"id":825,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":826,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":445,"src":"1166:12:5"},"id":827,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1323,"linearizedBaseContracts":[1323,445,1627,1401,1693],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":831,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":1323,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":830,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":837,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":1323,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":836,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":835,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":839,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":1323,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":841,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":1323,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":840,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":843,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":1323,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":842,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":859,"nodeType":"Block","src":"1638:57:5","statements":[{"expression":{"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":851,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":852,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"1656:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":854,"nodeType":"ExpressionStatement","src":"1648:13:5"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":855,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":856,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"1681:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":858,"nodeType":"ExpressionStatement","src":"1671:17:5"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"1425:152:5","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":860,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"name_","nameLocation":"1608:5:5","nodeType":"VariableDeclaration","scope":860,"src":"1594:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":845,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:5","nodeType":"VariableDeclaration","scope":860,"src":"1615:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:5"},"returnParameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"1638:0:5"},"scope":1323,"src":"1582:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1614],"body":{"id":868,"nodeType":"Block","src":"1820:29:5","statements":[{"expression":{"id":866,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":865,"id":867,"nodeType":"Return","src":"1830:12:5"}]},"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"1701:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":869,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:5","nodeType":"FunctionDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"1805:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":863,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:5"},"scope":1323,"src":"1760:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1620],"body":{"id":877,"nodeType":"Block","src":"2024:31:5","statements":[{"expression":{"id":875,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"2041:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":874,"id":876,"nodeType":"Return","src":"2034:14:5"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"1855:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":878,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:5","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[],"src":"1977:2:5"},"returnParameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"2009:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":872,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:5"},"scope":1323,"src":"1962:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1626],"body":{"id":886,"nodeType":"Block","src":"2744:26:5","statements":[{"expression":{"hexValue":"3138","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":883,"id":885,"nodeType":"Return","src":"2754:9:5"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"2061:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":887,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:5","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[],"src":"2705:2:5"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"2737:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":881,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:5"},"scope":1323,"src":"2688:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1350],"body":{"id":895,"nodeType":"Block","src":"2891:36:5","statements":[{"expression":{"id":893,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"2908:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":892,"id":894,"nodeType":"Return","src":"2901:19:5"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"2776:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":896,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2839:11:5","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2850:2:5"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"2882:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":890,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2881:9:5"},"scope":1323,"src":"2830:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1358],"body":{"id":908,"nodeType":"Block","src":"3059:42:5","statements":[{"expression":{"baseExpression":{"id":904,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"3076:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":906,"indexExpression":{"id":905,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"3086:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3076:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":903,"id":907,"nodeType":"Return","src":"3069:25:5"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"2933:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":909,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:5","nodeType":"FunctionDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"account","nameLocation":"3012:7:5","nodeType":"VariableDeclaration","scope":909,"src":"3004:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:17:5"},"returnParameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":909,"src":"3050:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3050:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3049:9:5"},"scope":1323,"src":"2985:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1368],"body":{"id":932,"nodeType":"Block","src":"3371:103:5","statements":[{"assignments":[920],"declarations":[{"constant":false,"id":920,"mutability":"mutable","name":"owner","nameLocation":"3389:5:5","nodeType":"VariableDeclaration","scope":932,"src":"3381:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"3381:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":923,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":921,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"3397:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3397:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3381:28:5"},{"expression":{"arguments":[{"id":925,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"3429:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3436:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3440:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":924,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3419:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"3419:27:5"},{"expression":{"hexValue":"74727565","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3463:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":918,"id":931,"nodeType":"Return","src":"3456:11:5"}]},"documentation":{"id":910,"nodeType":"StructuredDocumentation","src":"3107:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":933,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3305:8:5","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"3322:2:5","nodeType":"VariableDeclaration","scope":933,"src":"3314:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"3314:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"3334:5:5","nodeType":"VariableDeclaration","scope":933,"src":"3326:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3313:27:5"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":933,"src":"3365:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":916,"name":"bool","nodeType":"ElementaryTypeName","src":"3365:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3364:6:5"},"scope":1323,"src":"3296:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1378],"body":{"id":949,"nodeType":"Block","src":"3621:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":943,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"3638:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":945,"indexExpression":{"id":944,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"3650:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":947,"indexExpression":{"id":946,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":938,"src":"3657:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3638:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":942,"id":948,"nodeType":"Return","src":"3631:34:5"}]},"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"3480:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":950,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3541:9:5","nodeType":"FunctionDefinition","parameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"owner","nameLocation":"3559:5:5","nodeType":"VariableDeclaration","scope":950,"src":"3551:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"3551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":938,"mutability":"mutable","name":"spender","nameLocation":"3574:7:5","nodeType":"VariableDeclaration","scope":950,"src":"3566:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"3566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3550:32:5"},"returnParameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":950,"src":"3612:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:9:5"},"scope":1323,"src":"3532:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1388],"body":{"id":973,"nodeType":"Block","src":"4058:107:5","statements":[{"assignments":[961],"declarations":[{"constant":false,"id":961,"mutability":"mutable","name":"owner","nameLocation":"4076:5:5","nodeType":"VariableDeclaration","scope":973,"src":"4068:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"4068:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":964,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":962,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"4084:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4084:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4068:28:5"},{"expression":{"arguments":[{"id":966,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"4115:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"4122:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":955,"src":"4131:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1214,1274],"referencedDeclaration":1214,"src":"4106:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4106:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"ExpressionStatement","src":"4106:31:5"},{"expression":{"hexValue":"74727565","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4154:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":959,"id":972,"nodeType":"Return","src":"4147:11:5"}]},"documentation":{"id":951,"nodeType":"StructuredDocumentation","src":"3678:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":974,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3988:7:5","nodeType":"FunctionDefinition","parameters":{"id":956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"spender","nameLocation":"4004:7:5","nodeType":"VariableDeclaration","scope":974,"src":"3996:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":955,"mutability":"mutable","name":"value","nameLocation":"4021:5:5","nodeType":"VariableDeclaration","scope":974,"src":"4013:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3995:32:5"},"returnParameters":{"id":959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"4052:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":957,"name":"bool","nodeType":"ElementaryTypeName","src":"4052:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4051:6:5"},"scope":1323,"src":"3979:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1400],"body":{"id":1005,"nodeType":"Block","src":"4850:151:5","statements":[{"assignments":[987],"declarations":[{"constant":false,"id":987,"mutability":"mutable","name":"spender","nameLocation":"4868:7:5","nodeType":"VariableDeclaration","scope":1005,"src":"4860:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":990,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":988,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"4878:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4878:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4860:30:5"},{"expression":{"arguments":[{"id":992,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4916:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":993,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"4922:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"4931:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":991,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"4900:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4900:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"4900:37:5"},{"expression":{"arguments":[{"id":998,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"4957:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":999,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"4963:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"4967:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"4947:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4947:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"ExpressionStatement","src":"4947:26:5"},{"expression":{"hexValue":"74727565","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4990:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":985,"id":1004,"nodeType":"Return","src":"4983:11:5"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"4171:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4766:12:5","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"from","nameLocation":"4787:4:5","nodeType":"VariableDeclaration","scope":1006,"src":"4779:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"4779:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"to","nameLocation":"4801:2:5","nodeType":"VariableDeclaration","scope":1006,"src":"4793:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":981,"mutability":"mutable","name":"value","nameLocation":"4813:5:5","nodeType":"VariableDeclaration","scope":1006,"src":"4805:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":980,"name":"uint256","nodeType":"ElementaryTypeName","src":"4805:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:41:5"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1006,"src":"4844:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":983,"name":"bool","nodeType":"ElementaryTypeName","src":"4844:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4843:6:5"},"scope":1323,"src":"4757:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1052,"nodeType":"Block","src":"5443:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1016,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5457:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5473:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5465:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"5465:7:5","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5465:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5457:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1030,"nodeType":"IfStatement","src":"5453:86:5","trueBody":{"id":1029,"nodeType":"Block","src":"5477:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5525:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5517:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"5517:7:5","typeDescriptions":{}}},"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1022,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"5498:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1028,"nodeType":"RevertStatement","src":"5491:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5552:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5566:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5558:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1032,"name":"address","nodeType":"ElementaryTypeName","src":"5558:7:5","typeDescriptions":{}}},"id":1035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5558:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5552:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1045,"nodeType":"IfStatement","src":"5548:86:5","trueBody":{"id":1044,"nodeType":"Block","src":"5570:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5620:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:5","typeDescriptions":{}}},"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1037,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5591:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5591:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"RevertStatement","src":"5584:39:5"}]}},{"expression":{"arguments":[{"id":1047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"5651:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5657:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"5661:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1046,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5643:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"ExpressionStatement","src":"5643:24:5"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"5007:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1053,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5383:9:5","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"from","nameLocation":"5401:4:5","nodeType":"VariableDeclaration","scope":1053,"src":"5393:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"5393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"to","nameLocation":"5415:2:5","nodeType":"VariableDeclaration","scope":1053,"src":"5407:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"5407:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"value","nameLocation":"5427:5:5","nodeType":"VariableDeclaration","scope":1053,"src":"5419:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5392:41:5"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[],"src":"5443:0:5"},"scope":1323,"src":"5374:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"6064:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1063,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"6078:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6094:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6086:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"6086:7:5","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6086:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6078:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1100,"nodeType":"Block","src":"6252:362:5","statements":[{"assignments":[1075],"declarations":[{"constant":false,"id":1075,"mutability":"mutable","name":"fromBalance","nameLocation":"6274:11:5","nodeType":"VariableDeclaration","scope":1100,"src":"6266:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"6266:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1079,"initialValue":{"baseExpression":{"id":1076,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6288:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1078,"indexExpression":{"id":1077,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"6298:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6288:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6266:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1080,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6321:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6335:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6321:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1090,"nodeType":"IfStatement","src":"6317:115:5","trueBody":{"id":1089,"nodeType":"Block","src":"6342:90:5","statements":[{"errorCall":{"arguments":[{"id":1084,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"6392:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6398:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6411:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1083,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"6367:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6367:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"RevertStatement","src":"6360:57:5"}]}},{"id":1099,"nodeType":"UncheckedBlock","src":"6445:159:5","statements":[{"expression":{"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1091,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6552:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1093,"indexExpression":{"id":1092,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"6562:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6552:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1094,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"6570:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6584:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6570:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6552:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1098,"nodeType":"ExpressionStatement","src":"6552:37:5"}]}]},"id":1101,"nodeType":"IfStatement","src":"6074:540:5","trueBody":{"id":1073,"nodeType":"Block","src":"6098:148:5","statements":[{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1069,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6214:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6230:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6214:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ExpressionStatement","src":"6214:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"6628:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6642:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6634:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"6634:7:5","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6634:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6628:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1121,"nodeType":"Block","src":"6843:206:5","statements":[{"id":1120,"nodeType":"UncheckedBlock","src":"6857:182:5","statements":[{"expression":{"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1114,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"7002:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1116,"indexExpression":{"id":1115,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"7012:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7002:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"7019:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7002:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ExpressionStatement","src":"7002:22:5"}]}]},"id":1122,"nodeType":"IfStatement","src":"6624:425:5","trueBody":{"id":1113,"nodeType":"Block","src":"6646:191:5","statements":[{"id":1112,"nodeType":"UncheckedBlock","src":"6660:167:5","statements":[{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1108,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6791:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"6807:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6791:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"6791:21:5"}]}]}},{"eventCall":{"arguments":[{"id":1124,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1056,"src":"7073:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"7079:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"7083:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1123,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7064:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7064:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"EmitStatement","src":"7059:30:5"}]},"documentation":{"id":1054,"nodeType":"StructuredDocumentation","src":"5680:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5998:7:5","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"from","nameLocation":"6014:4:5","nodeType":"VariableDeclaration","scope":1130,"src":"6006:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"6006:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"to","nameLocation":"6028:2:5","nodeType":"VariableDeclaration","scope":1130,"src":"6020:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"6020:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"value","nameLocation":"6040:5:5","nodeType":"VariableDeclaration","scope":1130,"src":"6032:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6032:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6005:41:5"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[],"src":"6064:0:5"},"scope":1323,"src":"5989:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1162,"nodeType":"Block","src":"7495:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7509:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7528:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7520:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:5","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7520:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7509:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1152,"nodeType":"IfStatement","src":"7505:91:5","trueBody":{"id":1151,"nodeType":"Block","src":"7532:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7582:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7574:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"7574:7:5","typeDescriptions":{}}},"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7574:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"7553:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7553:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"RevertStatement","src":"7546:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7621:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7613:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"7613:7:5","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7613:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1158,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7625:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7634:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1153,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7605:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7605:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1161,"nodeType":"ExpressionStatement","src":"7605:35:5"}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"7102:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1163,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7448:5:5","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"account","nameLocation":"7462:7:5","nodeType":"VariableDeclaration","scope":1163,"src":"7454:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"7454:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"value","nameLocation":"7479:5:5","nodeType":"VariableDeclaration","scope":1163,"src":"7471:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7453:32:5"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"7495:0:5"},"scope":1323,"src":"7439:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1195,"nodeType":"Block","src":"8021:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"8035:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8046:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1172,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:5","typeDescriptions":{}}},"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8046:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8035:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1185,"nodeType":"IfStatement","src":"8031:89:5","trueBody":{"id":1184,"nodeType":"Block","src":"8058:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8106:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8098:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"8098:7:5","typeDescriptions":{}}},"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1177,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"8079:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8079:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1183,"nodeType":"RevertStatement","src":"8072:37:5"}]}},{"expression":{"arguments":[{"id":1187,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"8137:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8154:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"8146:7:5","typeDescriptions":{}}},"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8146:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"8158:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1186,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"8129:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8129:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"ExpressionStatement","src":"8129:35:5"}]},"documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"7653:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1196,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7974:5:5","nodeType":"FunctionDefinition","parameters":{"id":1169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"account","nameLocation":"7988:7:5","nodeType":"VariableDeclaration","scope":1196,"src":"7980:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"7980:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"value","nameLocation":"8005:5:5","nodeType":"VariableDeclaration","scope":1196,"src":"7997:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7979:32:5"},"returnParameters":{"id":1170,"nodeType":"ParameterList","parameters":[],"src":"8021:0:5"},"scope":1323,"src":"7965:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1213,"nodeType":"Block","src":"8781:54:5","statements":[{"expression":{"arguments":[{"id":1207,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"8800:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1208,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"8807:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"8816:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8823:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1206,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1214,1274],"referencedDeclaration":1274,"src":"8791:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8791:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1212,"nodeType":"ExpressionStatement","src":"8791:37:5"}]},"documentation":{"id":1197,"nodeType":"StructuredDocumentation","src":"8177:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8716:8:5","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"mutability":"mutable","name":"owner","nameLocation":"8733:5:5","nodeType":"VariableDeclaration","scope":1214,"src":"8725:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"8725:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"spender","nameLocation":"8748:7:5","nodeType":"VariableDeclaration","scope":1214,"src":"8740:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"8740:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"value","nameLocation":"8765:5:5","nodeType":"VariableDeclaration","scope":1214,"src":"8757:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"8757:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8724:47:5"},"returnParameters":{"id":1205,"nodeType":"ParameterList","parameters":[],"src":"8781:0:5"},"scope":1323,"src":"8707:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"9780:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1226,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9794:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9811:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"9803:7:5","typeDescriptions":{}}},"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9794:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1240,"nodeType":"IfStatement","src":"9790:89:5","trueBody":{"id":1239,"nodeType":"Block","src":"9815:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9865:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9857:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"9857:7:5","typeDescriptions":{}}},"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9857:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1232,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"9836:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9836:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"RevertStatement","src":"9829:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1241,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"9892:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9911:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9903:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"9903:7:5","typeDescriptions":{}}},"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9892:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1255,"nodeType":"IfStatement","src":"9888:90:5","trueBody":{"id":1254,"nodeType":"Block","src":"9915:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9964:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9956:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"9956:7:5","typeDescriptions":{}}},"id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9956:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1247,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"9936:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9936:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1253,"nodeType":"RevertStatement","src":"9929:38:5"}]}},{"expression":{"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1256,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"9987:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1259,"indexExpression":{"id":1257,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"9999:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9987:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1260,"indexExpression":{"id":1258,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"10006:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9987:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"10017:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9987:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1263,"nodeType":"ExpressionStatement","src":"9987:35:5"},{"condition":{"id":1264,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"10036:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1272,"nodeType":"IfStatement","src":"10032:76:5","trueBody":{"id":1271,"nodeType":"Block","src":"10047:61:5","statements":[{"eventCall":{"arguments":[{"id":1266,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"10075:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1267,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"10082:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"10091:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1265,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"10066:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10066:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1270,"nodeType":"EmitStatement","src":"10061:36:5"}]}}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"8841:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9691:8:5","nodeType":"FunctionDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"owner","nameLocation":"9708:5:5","nodeType":"VariableDeclaration","scope":1274,"src":"9700:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"9700:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"spender","nameLocation":"9723:7:5","nodeType":"VariableDeclaration","scope":1274,"src":"9715:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"9715:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"value","nameLocation":"9740:5:5","nodeType":"VariableDeclaration","scope":1274,"src":"9732:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"9732:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1223,"mutability":"mutable","name":"emitEvent","nameLocation":"9752:9:5","nodeType":"VariableDeclaration","scope":1274,"src":"9747:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1222,"name":"bool","nodeType":"ElementaryTypeName","src":"9747:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9699:63:5"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"9780:0:5"},"scope":1323,"src":"9682:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"10485:387:5","statements":[{"assignments":[1285],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"currentAllowance","nameLocation":"10503:16:5","nodeType":"VariableDeclaration","scope":1321,"src":"10495:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"10495:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1290,"initialValue":{"arguments":[{"id":1287,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"10532:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1288,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"10539:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1286,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10522:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10522:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10495:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10561:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10585:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"10585:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10580:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10580:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10594:3:5","memberName":"max","nodeType":"MemberAccess","src":"10580:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10561:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"10557:309:5","trueBody":{"id":1319,"nodeType":"Block","src":"10599:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10617:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10636:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10617:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1308,"nodeType":"IfStatement","src":"10613:130:5","trueBody":{"id":1307,"nodeType":"Block","src":"10643:100:5","statements":[{"errorCall":{"arguments":[{"id":1302,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"10695:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1303,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10704:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10722:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1301,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"10668:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10668:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1306,"nodeType":"RevertStatement","src":"10661:67:5"}]}},{"id":1318,"nodeType":"UncheckedBlock","src":"10756:100:5","statements":[{"expression":{"arguments":[{"id":1310,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"10793:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"10800:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1312,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"10809:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"10828:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10809:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10835:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1309,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1214,1274],"referencedDeclaration":1274,"src":"10784:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10784:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1317,"nodeType":"ExpressionStatement","src":"10784:57:5"}]}]}}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"10120:271:5","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10405:15:5","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"owner","nameLocation":"10429:5:5","nodeType":"VariableDeclaration","scope":1322,"src":"10421:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"spender","nameLocation":"10444:7:5","nodeType":"VariableDeclaration","scope":1322,"src":"10436:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"10436:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"value","nameLocation":"10461:5:5","nodeType":"VariableDeclaration","scope":1322,"src":"10453:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"10453:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10420:47:5"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"10485:0:5"},"scope":1323,"src":"10396:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1324,"src":"1106:9768:5","usedErrors":[415,420,425,434,439,444],"usedEvents":[1335,1344]}],"src":"105:10770:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1401]},"id":1402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1325,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"132:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1401,"linearizedBaseContracts":[1401],"name":"IERC20","nameLocation":"214:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"227:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1335,"name":"Transfer","nameLocation":"396:8:6","nodeType":"EventDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1329,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:6","nodeType":"VariableDeclaration","scope":1335,"src":"405:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:6","nodeType":"VariableDeclaration","scope":1335,"src":"427:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1330,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1333,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:6","nodeType":"VariableDeclaration","scope":1335,"src":"447:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:6"},"src":"390:72:6"},{"anonymous":false,"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"468:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1344,"name":"Approval","nameLocation":"627:8:6","nodeType":"EventDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:6","nodeType":"VariableDeclaration","scope":1344,"src":"636:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:6","nodeType":"VariableDeclaration","scope":1344,"src":"659:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:6","nodeType":"VariableDeclaration","scope":1344,"src":"684:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:6"},"src":"621:78:6"},{"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"705:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1350,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:6","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"795:2:6"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1350,"src":"821:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:6"},"scope":1401,"src":"775:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"836:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1358,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":1358,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1358,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1355,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":1401,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1359,"nodeType":"StructuredDocumentation","src":"986:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:6","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"to","nameLocation":"1230:2:6","nodeType":"VariableDeclaration","scope":1368,"src":"1222:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"value","nameLocation":"1242:5:6","nodeType":"VariableDeclaration","scope":1368,"src":"1234:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:6"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1368,"src":"1267:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1365,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:6"},"scope":1401,"src":"1204:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"1279:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1378,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:6","nodeType":"FunctionDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"owner","nameLocation":"1575:5:6","nodeType":"VariableDeclaration","scope":1378,"src":"1567:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1373,"mutability":"mutable","name":"spender","nameLocation":"1590:7:6","nodeType":"VariableDeclaration","scope":1378,"src":"1582:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:6"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1378,"src":"1622:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:6"},"scope":1401,"src":"1548:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"1637:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1388,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:6","nodeType":"FunctionDefinition","parameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"spender","nameLocation":"2334:7:6","nodeType":"VariableDeclaration","scope":1388,"src":"2326:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"value","nameLocation":"2351:5:6","nodeType":"VariableDeclaration","scope":1388,"src":"2343:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:6"},"returnParameters":{"id":1387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1388,"src":"2376:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1385,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:6"},"scope":1401,"src":"2309:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"2388:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1400,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:6","nodeType":"FunctionDefinition","parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"from","nameLocation":"2720:4:6","nodeType":"VariableDeclaration","scope":1400,"src":"2712:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"to","nameLocation":"2734:2:6","nodeType":"VariableDeclaration","scope":1400,"src":"2726:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"value","nameLocation":"2746:5:6","nodeType":"VariableDeclaration","scope":1400,"src":"2738:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:6"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1400,"src":"2771:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1397,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:6"},"scope":1401,"src":"2690:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1402,"src":"204:2575:6","usedErrors":[],"usedEvents":[1335,1344]}],"src":"106:2674:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1693],"ERC20":[1323],"ERC20Burnable":[1447]},"id":1448,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1403,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1448,"sourceUnit":1324,"src":"150:35:7","symbolAliases":[{"foreign":{"id":1404,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"158:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1448,"sourceUnit":1694,"src":"186:51:7","symbolAliases":[{"foreign":{"id":1406,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"194:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1409,"name":"Context","nameLocations":["483:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1693,"src":"483:7:7"},"id":1410,"nodeType":"InheritanceSpecifier","src":"483:7:7"},{"baseName":{"id":1411,"name":"ERC20","nameLocations":["492:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1323,"src":"492:5:7"},"id":1412,"nodeType":"InheritanceSpecifier","src":"492:5:7"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"239:208:7","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":true,"id":1447,"linearizedBaseContracts":[1447,1323,445,1627,1401,1693],"name":"ERC20Burnable","nameLocation":"466:13:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1424,"nodeType":"Block","src":"662:43:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1419,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"678:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"678:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"692:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1418,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"672:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"672:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1423,"nodeType":"ExpressionStatement","src":"672:26:7"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"504:109:7","text":" @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1425,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:7","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"value","nameLocation":"640:5:7","nodeType":"VariableDeclaration","scope":1425,"src":"632:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1414,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:15:7"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"662:0:7"},"scope":1447,"src":"618:87:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1445,"nodeType":"Block","src":"1086:93:7","statements":[{"expression":{"arguments":[{"id":1434,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1112:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1435,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"1121:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1121:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1135:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1433,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"1096:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1096:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1439,"nodeType":"ExpressionStatement","src":"1096:45:7"},{"expression":{"arguments":[{"id":1441,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"1157:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"1166:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1151:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1151:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1444,"nodeType":"ExpressionStatement","src":"1151:21:7"}]},"documentation":{"id":1426,"nodeType":"StructuredDocumentation","src":"711:305:7","text":" @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."},"functionSelector":"79cc6790","id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"1030:8:7","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"account","nameLocation":"1047:7:7","nodeType":"VariableDeclaration","scope":1446,"src":"1039:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"1039:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"value","nameLocation":"1064:5:7","nodeType":"VariableDeclaration","scope":1446,"src":"1056:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1056:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1038:32:7"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[],"src":"1086:0:7"},"scope":1447,"src":"1021:158:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1448,"src":"448:733:7","usedErrors":[415,420,425,434,439,444],"usedEvents":[1335,1344]}],"src":"124:1058:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3904],"EIP712":[4131],"ERC20":[1323],"ERC20Permit":[1601],"IERC20Permit":[1663],"Nonces":[1761]},"id":1602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1449,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":1664,"src":"148:48:8","symbolAliases":[{"foreign":{"id":1450,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":1324,"src":"197:35:8","symbolAliases":[{"foreign":{"id":1452,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":3905,"src":"233:60:8","symbolAliases":[{"foreign":{"id":1454,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1457,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":4132,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1456,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1459,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1602,"sourceUnit":1762,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1458,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1461,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1323,"src":"931:5:8"},"id":1462,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":1463,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1663,"src":"938:12:8"},"id":1464,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":1465,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"952:6:8"},"id":1466,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":1467,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1761,"src":"960:6:8"},"id":1468,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1601,"linearizedBaseContracts":[1601,1761,4131,403,1663,1323,445,1627,1401,1693],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1473,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1601,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1470,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1478,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":1478,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1485,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":1485,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1480,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":1485,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":1495,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1496,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1491,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1493,"kind":"baseConstructorSpecifier","modifierName":{"id":1490,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4131,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":1496,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1487,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1601,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1648],"body":{"id":1572,"nodeType":"Block","src":"1872:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1514,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1886:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1892:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1886:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1516,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1904:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1886:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1523,"nodeType":"IfStatement","src":"1882:97:8","trueBody":{"id":1522,"nodeType":"Block","src":"1914:65:8","statements":[{"errorCall":{"arguments":[{"id":1519,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"1959:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1518,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1935:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1935:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1521,"nodeType":"RevertStatement","src":"1928:40:8"}]}},{"assignments":[1525],"declarations":[{"constant":false,"id":1525,"mutability":"mutable","name":"structHash","nameLocation":"1997:10:8","nodeType":"VariableDeclaration","scope":1572,"src":"1989:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1989:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1539,"initialValue":{"arguments":[{"arguments":[{"id":1529,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"2031:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1530,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2048:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2055:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2064:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1534,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2081:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1533,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"2071:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2071:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1536,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"2089:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1527,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2020:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2024:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2020:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1526,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2010:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1989:110:8"},{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"hash","nameLocation":"2118:4:8","nodeType":"VariableDeclaration","scope":1572,"src":"2110:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1545,"initialValue":{"arguments":[{"id":1543,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"2142:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1542,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"2125:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2110:43:8"},{"assignments":[1547],"declarations":[{"constant":false,"id":1547,"mutability":"mutable","name":"signer","nameLocation":"2172:6:8","nodeType":"VariableDeclaration","scope":1572,"src":"2164:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1555,"initialValue":{"arguments":[{"id":1550,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2195:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1551,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"2201:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1552,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"2204:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1553,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"2207:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1548,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"2181:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3904_$","typeString":"type(library ECDSA)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2187:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3854,"src":"2181:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2164:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1556,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"2223:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1557,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2233:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2223:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1565,"nodeType":"IfStatement","src":"2219:88:8","trueBody":{"id":1564,"nodeType":"Block","src":"2240:67:8","statements":[{"errorCall":{"arguments":[{"id":1560,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"2282:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1561,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2290:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1559,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2261:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1563,"nodeType":"RevertStatement","src":"2254:42:8"}]}},{"expression":{"arguments":[{"id":1567,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"2326:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1568,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2333:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2342:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1566,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1214,1274],"referencedDeclaration":1214,"src":"2317:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1571,"nodeType":"ExpressionStatement","src":"2317:31:8"}]},"documentation":{"id":1497,"nodeType":"StructuredDocumentation","src":"1635:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1692:6:8","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"owner","nameLocation":"1716:5:8","nodeType":"VariableDeclaration","scope":1573,"src":"1708:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"1708:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"spender","nameLocation":"1739:7:8","nodeType":"VariableDeclaration","scope":1573,"src":"1731:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"value","nameLocation":"1764:5:8","nodeType":"VariableDeclaration","scope":1573,"src":"1756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"deadline","nameLocation":"1787:8:8","nodeType":"VariableDeclaration","scope":1573,"src":"1779:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1507,"mutability":"mutable","name":"v","nameLocation":"1811:1:8","nodeType":"VariableDeclaration","scope":1573,"src":"1805:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1506,"name":"uint8","nodeType":"ElementaryTypeName","src":"1805:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"r","nameLocation":"1830:1:8","nodeType":"VariableDeclaration","scope":1573,"src":"1822:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1822:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"s","nameLocation":"1849:1:8","nodeType":"VariableDeclaration","scope":1573,"src":"1841:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1698:158:8"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"1872:0:8"},"scope":1601,"src":"1683:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1656,1720],"body":{"id":1589,"nodeType":"Block","src":"2509:43:8","statements":[{"expression":{"arguments":[{"id":1586,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2539:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1584,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2526:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1601_$","typeString":"type(contract super ERC20Permit)"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2532:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"2526:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1583,"id":1588,"nodeType":"Return","src":"2519:26:8"}]},"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"2361:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2418:6:8","nodeType":"FunctionDefinition","overrides":{"id":1580,"nodeType":"OverrideSpecifier","overrides":[{"id":1578,"name":"IERC20Permit","nameLocations":["2469:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1663,"src":"2469:12:8"},{"id":1579,"name":"Nonces","nameLocations":["2483:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1761,"src":"2483:6:8"}],"src":"2460:30:8"},"parameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"owner","nameLocation":"2433:5:8","nodeType":"VariableDeclaration","scope":1590,"src":"2425:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"2425:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2424:15:8"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1590,"src":"2500:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2499:9:8"},"scope":1601,"src":"2409:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1662],"body":{"id":1599,"nodeType":"Block","src":"2727:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1596,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"2744:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2744:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1595,"id":1598,"nodeType":"Return","src":"2737:27:8"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"2558:43:8","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1600,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2668:16:8","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[],"src":"2684:2:8"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1600,"src":"2718:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2718:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2717:9:8"},"scope":1601,"src":"2659:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1602,"src":"898:1875:8","usedErrors":[415,420,425,434,439,444,1478,1485,1703,1827,1829,3567,3572,3577],"usedEvents":[383,1335,1344]}],"src":"122:2652:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1401],"IERC20Metadata":[1627]},"id":1628,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1603,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1605,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1628,"sourceUnit":1402,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1604,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1607,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1401,"src":"306:6:9"},"id":1608,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1627,"linearizedBaseContracts":[1627,1401],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1614,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1614,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1611,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1627,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1615,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1620,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1620,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1617,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1627,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1626,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1623,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1627,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1628,"src":"278:405:9","usedErrors":[],"usedEvents":[1335,1344]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1663]},"id":1664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1629,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"149:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1663,"linearizedBaseContracts":[1663],"name":"IERC20Permit","nameLocation":"2125:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"2144:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1648,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3008:6:10","nodeType":"FunctionDefinition","parameters":{"id":1646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"owner","nameLocation":"3032:5:10","nodeType":"VariableDeclaration","scope":1648,"src":"3024:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"3024:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"spender","nameLocation":"3055:7:10","nodeType":"VariableDeclaration","scope":1648,"src":"3047:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"3047:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"value","nameLocation":"3080:5:10","nodeType":"VariableDeclaration","scope":1648,"src":"3072:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"deadline","nameLocation":"3103:8:10","nodeType":"VariableDeclaration","scope":1648,"src":"3095:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1638,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"v","nameLocation":"3127:1:10","nodeType":"VariableDeclaration","scope":1648,"src":"3121:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1640,"name":"uint8","nodeType":"ElementaryTypeName","src":"3121:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"r","nameLocation":"3146:1:10","nodeType":"VariableDeclaration","scope":1648,"src":"3138:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3138:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"s","nameLocation":"3165:1:10","nodeType":"VariableDeclaration","scope":1648,"src":"3157:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3014:158:10"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[],"src":"3181:0:10"},"scope":1663,"src":"2999:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"3188:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1656,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3496:6:10","nodeType":"FunctionDefinition","parameters":{"id":1652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"owner","nameLocation":"3511:5:10","nodeType":"VariableDeclaration","scope":1656,"src":"3503:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"3503:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3502:15:10"},"returnParameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1656,"src":"3541:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3540:9:10"},"scope":1663,"src":"3487:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"3556:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1662,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3751:16:10","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[],"src":"3767:2:10"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1662,"src":"3793:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3793:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3792:9:10"},"scope":1663,"src":"3742:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1664,"src":"2115:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3682:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1693]},"id":1694,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1665,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1693,"linearizedBaseContracts":[1693],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1674,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1670,"id":1673,"nodeType":"Return","src":"728:17:11"}]},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1667,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":1693,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1683,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1680,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1679,"id":1682,"nodeType":"Return","src":"835:15:11"}]},"id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1684,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1677,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":1693,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1691,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1688,"id":1690,"nodeType":"Return","src":"945:8:11"}]},"id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1692,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":1693,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1694,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1761]},"id":1762,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1695,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1696,"nodeType":"StructuredDocumentation","src":"125:83:12","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1761,"linearizedBaseContracts":[1761],"name":"Nonces","nameLocation":"227:6:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"240:90:12","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1703,"name":"InvalidAccountNonce","nameLocation":"341:19:12","nodeType":"ErrorDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"account","nameLocation":"369:7:12","nodeType":"VariableDeclaration","scope":1703,"src":"361:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:12","nodeType":"VariableDeclaration","scope":1703,"src":"378:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:12"},"src":"335:65:12"},{"constant":false,"id":1707,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:12","nodeType":"VariableDeclaration","scope":1761,"src":"406:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1706,"keyName":"account","keyNameLocation":"422:7:12","keyType":{"id":1704,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1719,"nodeType":"Block","src":"607:38:12","statements":[{"expression":{"baseExpression":{"id":1715,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"624:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1717,"indexExpression":{"id":1716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1710,"src":"632:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1714,"id":1718,"nodeType":"Return","src":"617:21:12"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"464:69:12","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:12","nodeType":"FunctionDefinition","parameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"owner","nameLocation":"562:5:12","nodeType":"VariableDeclaration","scope":1720,"src":"554:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:12"},"returnParameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1720,"src":"598:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1712,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:12"},"scope":1761,"src":"538:107:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1734,"nodeType":"Block","src":"828:326:12","statements":[{"id":1733,"nodeType":"UncheckedBlock","src":"1031:117:12","statements":[{"expression":{"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:12","subExpression":{"baseExpression":{"id":1728,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"1121:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1730,"indexExpression":{"id":1729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"1129:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1727,"id":1732,"nodeType":"Return","src":"1114:23:12"}]}]},"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"651:103:12","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:12","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"owner","nameLocation":"786:5:12","nodeType":"VariableDeclaration","scope":1735,"src":"778:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:12"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"819:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:12"},"scope":1761,"src":"759:395:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1759,"nodeType":"Block","src":"1338:149:12","statements":[{"assignments":[1744],"declarations":[{"constant":false,"id":1744,"mutability":"mutable","name":"current","nameLocation":"1356:7:12","nodeType":"VariableDeclaration","scope":1759,"src":"1348:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1748,"initialValue":{"arguments":[{"id":1746,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1376:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1745,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"1366:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1749,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"1396:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1750,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1758,"nodeType":"IfStatement","src":"1392:89:12","trueBody":{"id":1757,"nodeType":"Block","src":"1414:67:12","statements":[{"errorCall":{"arguments":[{"id":1753,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"1455:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1754,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1752,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"1435:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"RevertStatement","src":"1428:42:12"}]}}]},"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"1160:100:12","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1760,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:12","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"owner","nameLocation":"1299:5:12","nodeType":"VariableDeclaration","scope":1760,"src":"1291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:12","nodeType":"VariableDeclaration","scope":1760,"src":"1306:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:12"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1338:0:12"},"scope":1761,"src":"1265:222:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1762,"src":"209:1280:12","usedErrors":[1703],"usedEvents":[]}],"src":"99:1391:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1813]},"id":1814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1763,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1813,"linearizedBaseContracts":[1813],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":1768,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":1813,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":1772,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":1813,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":1776,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":1813,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1774,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1777,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":1780,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":1813,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":1784,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":1813,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":1788,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":1813,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":1792,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":1813,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":1796,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":1813,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":1800,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":1813,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1801,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":1804,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":1813,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1811,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:13"},"nodeType":"YulFunctionCall","src":"1868:24:13"},"nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:13"},"nodeType":"YulFunctionCall","src":"1905:18:13"},"nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:13"},"nodeType":"YulFunctionCall","src":"1936:18:13"},"nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1807,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":1810,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":1805,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":1808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1807,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":1812,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":1809,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":1813,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1814,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1819],"ShortStrings":[2030],"StorageSlot":[2154]},"id":2031,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1815,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2031,"sourceUnit":2155,"src":"132:46:14","symbolAliases":[{"foreign":{"id":1816,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"140:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1819,"name":"ShortString","nameLocation":"353:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:14","underlyingType":{"id":1818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1820,"nodeType":"StructuredDocumentation","src":"378:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2030,"linearizedBaseContracts":[2030],"name":"ShortStrings","nameLocation":"1263:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1823,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:14","nodeType":"VariableDeclaration","scope":2030,"src":"1345:111:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1821,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1827,"name":"StringTooLong","nameLocation":"1469:13:14","nodeType":"ErrorDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"str","nameLocation":"1490:3:14","nodeType":"VariableDeclaration","scope":1827,"src":"1483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1824,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:14"},"src":"1463:32:14"},{"errorSelector":"b3512b0c","id":1829,"name":"InvalidShortString","nameLocation":"1506:18:14","nodeType":"ErrorDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"1524:2:14"},"src":"1500:27:14"},{"body":{"id":1872,"nodeType":"Block","src":"1786:208:14","statements":[{"assignments":[1839],"declarations":[{"constant":false,"id":1839,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:14","nodeType":"VariableDeclaration","scope":1872,"src":"1796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1844,"initialValue":{"arguments":[{"id":1842,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"1822:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1840,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:14","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1845,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:14","memberName":"length","nodeType":"MemberAccess","src":"1840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1854,"nodeType":"IfStatement","src":"1836:72:14","trueBody":{"id":1853,"nodeType":"Block","src":"1858:50:14","statements":[{"errorCall":{"arguments":[{"id":1850,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1849,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"1879:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1852,"nodeType":"RevertStatement","src":"1872:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1863,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1965:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1861,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:14","typeDescriptions":{}}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:14","typeDescriptions":{}}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1866,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:14","memberName":"length","nodeType":"MemberAccess","src":"1974:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:14","typeDescriptions":{}}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1855,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1924:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"type(ShortString)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"functionReturnParameters":1837,"id":1871,"nodeType":"Return","src":"1917:70:14"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"1533:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:14","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"str","nameLocation":"1745:3:14","nodeType":"VariableDeclaration","scope":1873,"src":"1731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:14"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"1773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"ShortString","nameLocations":["1773:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"1773:11:14"},"referencedDeclaration":1819,"src":"1773:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:14"},"scope":2030,"src":"1708:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1898,"nodeType":"Block","src":"2152:304:14","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"len","nameLocation":"2170:3:14","nodeType":"VariableDeclaration","scope":1898,"src":"2162:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1887,"initialValue":{"arguments":[{"id":1885,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"2187:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}],"id":1884,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1819_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:14"},{"assignments":[1889],"declarations":[{"constant":false,"id":1889,"mutability":"mutable","name":"str","nameLocation":"2294:3:14","nodeType":"VariableDeclaration","scope":1898,"src":"2280:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1888,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1894,"initialValue":{"arguments":[{"hexValue":"3332","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1890,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:14"},{"AST":{"nodeType":"YulBlock","src":"2349:81:14","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:14"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:14"},"nodeType":"YulFunctionCall","src":"2363:16:14"},"nodeType":"YulExpressionStatement","src":"2363:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:14"},"nodeType":"YulFunctionCall","src":"2399:14:14"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:14"},"nodeType":"YulFunctionCall","src":"2392:28:14"},"nodeType":"YulExpressionStatement","src":"2392:28:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1883,"isOffset":false,"isSlot":false,"src":"2375:3:14","valueSize":1},{"declaration":1877,"isOffset":false,"isSlot":false,"src":"2415:4:14","valueSize":1},{"declaration":1889,"isOffset":false,"isSlot":false,"src":"2370:3:14","valueSize":1},{"declaration":1889,"isOffset":false,"isSlot":false,"src":"2403:3:14","valueSize":1}],"flags":["memory-safe"],"id":1895,"nodeType":"InlineAssembly","src":"2324:106:14"},{"expression":{"id":1896,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2446:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1881,"id":1897,"nodeType":"Return","src":"2439:10:14"}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"2000:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:14","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:14","nodeType":"VariableDeclaration","scope":1899,"src":"2096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":1876,"nodeType":"UserDefinedTypeName","pathNode":{"id":1875,"name":"ShortString","nameLocations":["2096:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"2096:11:14"},"referencedDeclaration":1819,"src":"2096:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:14"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1899,"src":"2137:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1879,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:14"},"scope":2030,"src":"2078:378:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"2598:175:14","statements":[{"assignments":[1909],"declarations":[{"constant":false,"id":1909,"mutability":"mutable","name":"result","nameLocation":"2616:6:14","nodeType":"VariableDeclaration","scope":1930,"src":"2608:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1919,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1914,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"2652:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}],"expression":{"id":1912,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"2633:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"type(ShortString)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1819_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1910,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:14","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2679:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"nodeType":"IfStatement","src":"2675:69:14","trueBody":{"id":1926,"nodeType":"Block","src":"2692:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1923,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"2713:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1925,"nodeType":"RevertStatement","src":"2706:27:14"}]}},{"expression":{"id":1928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2760:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1907,"id":1929,"nodeType":"Return","src":"2753:13:14"}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"2462:61:14","text":" @dev Return the length of a `ShortString`."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:14","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:14","nodeType":"VariableDeclaration","scope":1931,"src":"2548:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":1902,"nodeType":"UserDefinedTypeName","pathNode":{"id":1901,"name":"ShortString","nameLocations":["2548:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"2548:11:14"},"referencedDeclaration":1819,"src":"2548:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:14"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"2589:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:14"},"scope":2030,"src":"2528:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1970,"nodeType":"Block","src":"2996:231:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3016:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1942,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:14","typeDescriptions":{}}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:14","memberName":"length","nodeType":"MemberAccess","src":"3010:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1968,"nodeType":"Block","src":"3094:127:14","statements":[{"expression":{"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1957,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"3134:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":1954,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3108:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2154_$","typeString":"type(library StorageSlot)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"3108:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2051_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2051_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":1959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"3108:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3149:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1962,"nodeType":"ExpressionStatement","src":"3108:46:14"},{"expression":{"arguments":[{"id":1965,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3192:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1963,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"3175:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"type(ShortString)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"functionReturnParameters":1941,"id":1967,"nodeType":"Return","src":"3168:42:14"}]},"id":1969,"nodeType":"IfStatement","src":"3006:215:14","trueBody":{"id":1953,"nodeType":"Block","src":"3036:52:14","statements":[{"expression":{"arguments":[{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3071:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1949,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"3057:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"functionReturnParameters":1941,"id":1952,"nodeType":"Return","src":"3050:27:14"}]}}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"2779:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":1971,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:14","nodeType":"FunctionDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"value","nameLocation":"2936:5:14","nodeType":"VariableDeclaration","scope":1971,"src":"2922:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1933,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"store","nameLocation":"2958:5:14","nodeType":"VariableDeclaration","scope":1971,"src":"2943:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:14"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1971,"src":"2983:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":1939,"nodeType":"UserDefinedTypeName","pathNode":{"id":1938,"name":"ShortString","nameLocations":["2983:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"2983:11:14"},"referencedDeclaration":1819,"src":"2983:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:14"},"scope":2030,"src":"2887:340:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1997,"nodeType":"Block","src":"3477:158:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3510:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}],"expression":{"id":1982,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"3491:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"type(ShortString)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1819_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1986,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"3520:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1995,"nodeType":"Block","src":"3592:37:14","statements":[{"expression":{"id":1993,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"3613:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":1981,"id":1994,"nodeType":"Return","src":"3606:12:14"}]},"id":1996,"nodeType":"IfStatement","src":"3487:142:14","trueBody":{"id":1992,"nodeType":"Block","src":"3539:47:14","statements":[{"expression":{"arguments":[{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"3569:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}],"id":1988,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"3560:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1819_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1981,"id":1991,"nodeType":"Return","src":"3553:22:14"}]}}]},"documentation":{"id":1972,"nodeType":"StructuredDocumentation","src":"3233:130:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":1998,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:14","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"value","nameLocation":"3410:5:14","nodeType":"VariableDeclaration","scope":1998,"src":"3398:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":1974,"nodeType":"UserDefinedTypeName","pathNode":{"id":1973,"name":"ShortString","nameLocations":["3398:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"3398:11:14"},"referencedDeclaration":1819,"src":"3398:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"store","nameLocation":"3432:5:14","nodeType":"VariableDeclaration","scope":1998,"src":"3417:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1976,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:14"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"3462:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:14"},"scope":2030,"src":"3368:267:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"4125:174:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4158:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}],"expression":{"id":2009,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"4139:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"type(ShortString)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1819_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2013,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"4168:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2026,"nodeType":"Block","src":"4242:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":2022,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"4269:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2020,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:14","typeDescriptions":{}}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:14","memberName":"length","nodeType":"MemberAccess","src":"4263:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2008,"id":2025,"nodeType":"Return","src":"4256:26:14"}]},"id":2027,"nodeType":"IfStatement","src":"4135:158:14","trueBody":{"id":2019,"nodeType":"Block","src":"4187:49:14","statements":[{"expression":{"arguments":[{"id":2016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"4219:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}],"id":2015,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4208:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1819_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2008,"id":2018,"nodeType":"Return","src":"4201:24:14"}]}}]},"documentation":{"id":1999,"nodeType":"StructuredDocumentation","src":"3641:374:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:14","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"value","nameLocation":"4064:5:14","nodeType":"VariableDeclaration","scope":2029,"src":"4052:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"ShortString","nameLocations":["4052:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"4052:11:14"},"referencedDeclaration":1819,"src":"4052:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"store","nameLocation":"4086:5:14","nodeType":"VariableDeclaration","scope":2029,"src":"4071:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2003,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:14"},"returnParameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"4116:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:14"},"scope":2030,"src":"4020:279:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2031,"src":"1255:3046:14","usedErrors":[1827,1829],"usedEvents":[]}],"src":"106:4196:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2154]},"id":2155,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2032,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2033,"nodeType":"StructuredDocumentation","src":"219:1187:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2154,"linearizedBaseContracts":[2154],"name":"StorageSlot","nameLocation":"1415:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2036,"members":[{"constant":false,"id":2035,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":2036,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2034,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":2154,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2039,"members":[{"constant":false,"id":2038,"mutability":"mutable","name":"value","nameLocation":"1522:5:15","nodeType":"VariableDeclaration","scope":2039,"src":"1517:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2037,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:15","nodeType":"StructDefinition","scope":2154,"src":"1488:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2042,"members":[{"constant":false,"id":2041,"mutability":"mutable","name":"value","nameLocation":"1577:5:15","nodeType":"VariableDeclaration","scope":2042,"src":"1569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:15","nodeType":"StructDefinition","scope":2154,"src":"1540:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2045,"members":[{"constant":false,"id":2044,"mutability":"mutable","name":"value","nameLocation":"1632:5:15","nodeType":"VariableDeclaration","scope":2045,"src":"1624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:15","nodeType":"StructDefinition","scope":2154,"src":"1595:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2048,"members":[{"constant":false,"id":2047,"mutability":"mutable","name":"value","nameLocation":"1685:5:15","nodeType":"VariableDeclaration","scope":2048,"src":"1678:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2046,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:15","nodeType":"StructDefinition","scope":2154,"src":"1650:47:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2051,"members":[{"constant":false,"id":2050,"mutability":"mutable","name":"value","nameLocation":"1738:5:15","nodeType":"VariableDeclaration","scope":2051,"src":"1731:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:15","nodeType":"StructDefinition","scope":2154,"src":"1703:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2054,"members":[{"constant":false,"id":2053,"mutability":"mutable","name":"value","nameLocation":"1789:5:15","nodeType":"VariableDeclaration","scope":2054,"src":"1783:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:15","nodeType":"StructDefinition","scope":2154,"src":"1756:45:15","visibility":"public"},{"body":{"id":2064,"nodeType":"Block","src":"1983:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:15","statements":[{"nodeType":"YulAssignment","src":"2032:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2061,"isOffset":false,"isSlot":true,"src":"2032:6:15","suffix":"slot","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"2042:4:15","valueSize":1}],"flags":["memory-safe"],"id":2063,"nodeType":"InlineAssembly","src":"1993:63:15"}]},"documentation":{"id":2055,"nodeType":"StructuredDocumentation","src":"1807:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:15","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2057,"mutability":"mutable","name":"slot","nameLocation":"1931:4:15","nodeType":"VariableDeclaration","scope":2065,"src":"1923:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:15"},"returnParameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"r","nameLocation":"1980:1:15","nodeType":"VariableDeclaration","scope":2065,"src":"1960:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2060,"nodeType":"UserDefinedTypeName","pathNode":{"id":2059,"name":"AddressSlot","nameLocations":["1960:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2036,"src":"1960:11:15"},"referencedDeclaration":2036,"src":"1960:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2036_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:15"},"scope":2154,"src":"1899:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2075,"nodeType":"Block","src":"2243:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:15","statements":[{"nodeType":"YulAssignment","src":"2292:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2072,"isOffset":false,"isSlot":true,"src":"2292:6:15","suffix":"slot","valueSize":1},{"declaration":2068,"isOffset":false,"isSlot":false,"src":"2302:4:15","valueSize":1}],"flags":["memory-safe"],"id":2074,"nodeType":"InlineAssembly","src":"2253:63:15"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"2068:86:15","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2076,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:15","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"slot","nameLocation":"2191:4:15","nodeType":"VariableDeclaration","scope":2076,"src":"2183:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:15"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"r","nameLocation":"2240:1:15","nodeType":"VariableDeclaration","scope":2076,"src":"2220:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2039_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2071,"nodeType":"UserDefinedTypeName","pathNode":{"id":2070,"name":"BooleanSlot","nameLocations":["2220:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2039,"src":"2220:11:15"},"referencedDeclaration":2039,"src":"2220:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2039_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:15"},"scope":2154,"src":"2159:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2503:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:15","statements":[{"nodeType":"YulAssignment","src":"2552:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2083,"isOffset":false,"isSlot":true,"src":"2552:6:15","suffix":"slot","valueSize":1},{"declaration":2079,"isOffset":false,"isSlot":false,"src":"2562:4:15","valueSize":1}],"flags":["memory-safe"],"id":2085,"nodeType":"InlineAssembly","src":"2513:63:15"}]},"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"2328:86:15","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:15","nodeType":"FunctionDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"slot","nameLocation":"2451:4:15","nodeType":"VariableDeclaration","scope":2087,"src":"2443:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2078,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:15"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"r","nameLocation":"2500:1:15","nodeType":"VariableDeclaration","scope":2087,"src":"2480:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2042_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2082,"nodeType":"UserDefinedTypeName","pathNode":{"id":2081,"name":"Bytes32Slot","nameLocations":["2480:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2042,"src":"2480:11:15"},"referencedDeclaration":2042,"src":"2480:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2042_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:15"},"scope":2154,"src":"2419:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2097,"nodeType":"Block","src":"2763:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:15","statements":[{"nodeType":"YulAssignment","src":"2812:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2094,"isOffset":false,"isSlot":true,"src":"2812:6:15","suffix":"slot","valueSize":1},{"declaration":2090,"isOffset":false,"isSlot":false,"src":"2822:4:15","valueSize":1}],"flags":["memory-safe"],"id":2096,"nodeType":"InlineAssembly","src":"2773:63:15"}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"2588:86:15","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2098,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:15","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"slot","nameLocation":"2711:4:15","nodeType":"VariableDeclaration","scope":2098,"src":"2703:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:15"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"r","nameLocation":"2760:1:15","nodeType":"VariableDeclaration","scope":2098,"src":"2740:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2045_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2093,"nodeType":"UserDefinedTypeName","pathNode":{"id":2092,"name":"Uint256Slot","nameLocations":["2740:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2045,"src":"2740:11:15"},"referencedDeclaration":2045,"src":"2740:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2045_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:15"},"scope":2154,"src":"2679:163:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"3020:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:15","statements":[{"nodeType":"YulAssignment","src":"3069:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2105,"isOffset":false,"isSlot":true,"src":"3069:6:15","suffix":"slot","valueSize":1},{"declaration":2101,"isOffset":false,"isSlot":false,"src":"3079:4:15","valueSize":1}],"flags":["memory-safe"],"id":2107,"nodeType":"InlineAssembly","src":"3030:63:15"}]},"documentation":{"id":2099,"nodeType":"StructuredDocumentation","src":"2848:85:15","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:15","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"slot","nameLocation":"2969:4:15","nodeType":"VariableDeclaration","scope":2109,"src":"2961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2100,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:15"},"returnParameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"r","nameLocation":"3017:1:15","nodeType":"VariableDeclaration","scope":2109,"src":"2998:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2048_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2104,"nodeType":"UserDefinedTypeName","pathNode":{"id":2103,"name":"Int256Slot","nameLocations":["2998:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2048,"src":"2998:10:15"},"referencedDeclaration":2048,"src":"2998:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2048_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:15"},"scope":2154,"src":"2938:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2119,"nodeType":"Block","src":"3277:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:15","statements":[{"nodeType":"YulAssignment","src":"3326:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2116,"isOffset":false,"isSlot":true,"src":"3326:6:15","suffix":"slot","valueSize":1},{"declaration":2112,"isOffset":false,"isSlot":false,"src":"3336:4:15","valueSize":1}],"flags":["memory-safe"],"id":2118,"nodeType":"InlineAssembly","src":"3287:63:15"}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"3105:85:15","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:15","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"slot","nameLocation":"3226:4:15","nodeType":"VariableDeclaration","scope":2120,"src":"3218:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2111,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:15"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"r","nameLocation":"3274:1:15","nodeType":"VariableDeclaration","scope":2120,"src":"3255:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2051_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2115,"nodeType":"UserDefinedTypeName","pathNode":{"id":2114,"name":"StringSlot","nameLocations":["3255:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"3255:10:15"},"referencedDeclaration":2051,"src":"3255:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2051_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:15"},"scope":2154,"src":"3195:161:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2130,"nodeType":"Block","src":"3558:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:15","statements":[{"nodeType":"YulAssignment","src":"3607:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2127,"isOffset":false,"isSlot":true,"src":"3607:6:15","suffix":"slot","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":true,"src":"3617:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2129,"nodeType":"InlineAssembly","src":"3568:69:15"}]},"documentation":{"id":2121,"nodeType":"StructuredDocumentation","src":"3362:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2131,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:15","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"store","nameLocation":"3506:5:15","nodeType":"VariableDeclaration","scope":2131,"src":"3491:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2122,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:15"},"returnParameters":{"id":2128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2127,"mutability":"mutable","name":"r","nameLocation":"3555:1:15","nodeType":"VariableDeclaration","scope":2131,"src":"3536:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2051_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2126,"nodeType":"UserDefinedTypeName","pathNode":{"id":2125,"name":"StringSlot","nameLocations":["3536:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2051,"src":"3536:10:15"},"referencedDeclaration":2051,"src":"3536:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2051_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:15"},"scope":2154,"src":"3468:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2141,"nodeType":"Block","src":"3818:79:15","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:15","statements":[{"nodeType":"YulAssignment","src":"3867:14:15","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2138,"isOffset":false,"isSlot":true,"src":"3867:6:15","suffix":"slot","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"3877:4:15","valueSize":1}],"flags":["memory-safe"],"id":2140,"nodeType":"InlineAssembly","src":"3828:63:15"}]},"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"3649:84:15","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2142,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:15","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"slot","nameLocation":"3768:4:15","nodeType":"VariableDeclaration","scope":2142,"src":"3760:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:15"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"r","nameLocation":"3815:1:15","nodeType":"VariableDeclaration","scope":2142,"src":"3797:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2054_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2137,"nodeType":"UserDefinedTypeName","pathNode":{"id":2136,"name":"BytesSlot","nameLocations":["3797:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2054,"src":"3797:9:15"},"referencedDeclaration":2054,"src":"3797:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2054_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:15"},"scope":2154,"src":"3738:159:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"4094:85:15","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:15","statements":[{"nodeType":"YulAssignment","src":"4143:20:15","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:15"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2149,"isOffset":false,"isSlot":true,"src":"4143:6:15","suffix":"slot","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":true,"src":"4153:10:15","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2151,"nodeType":"InlineAssembly","src":"4104:69:15"}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"3903:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:15","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"store","nameLocation":"4043:5:15","nodeType":"VariableDeclaration","scope":2153,"src":"4029:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2144,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:15"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"r","nameLocation":"4091:1:15","nodeType":"VariableDeclaration","scope":2153,"src":"4073:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2054_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2148,"nodeType":"UserDefinedTypeName","pathNode":{"id":2147,"name":"BytesSlot","nameLocations":["4073:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2054,"src":"4073:9:15"},"referencedDeclaration":2054,"src":"4073:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2054_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:15"},"scope":2154,"src":"4007:172:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2155,"src":"1407:2774:15","usedErrors":[],"usedEvents":[]}],"src":"193:3989:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5874],"SafeCast":[7639],"SignedMath":[7783],"Strings":[3556]},"id":3557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2156,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2158,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3557,"sourceUnit":5875,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2157,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3557,"sourceUnit":7640,"src":"165:45:16","symbolAliases":[{"foreign":{"id":2159,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"173:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3557,"sourceUnit":7784,"src":"211:49:16","symbolAliases":[{"foreign":{"id":2161,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"219:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"262:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3556,"linearizedBaseContracts":[3556],"name":"Strings","nameLocation":"305:7:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2165,"libraryName":{"id":2164,"name":"SafeCast","nameLocations":["325:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7639,"src":"325:8:16"},"nodeType":"UsingForDirective","src":"319:21:16"},{"constant":true,"id":2168,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:16","nodeType":"VariableDeclaration","scope":3556,"src":"346:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2166,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2171,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:16","nodeType":"VariableDeclaration","scope":3556,"src":"408:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2169,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2207,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:16","nodeType":"VariableDeclaration","scope":3556,"src":"456:302:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2172,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2176,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:16","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:16","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:16","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:16","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:16","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:16","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:16","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:16","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2200,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:16","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:16","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:16","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2208,"nodeType":"StructuredDocumentation","src":"778:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2214,"name":"StringsInsufficientHexLength","nameLocation":"870:28:16","nodeType":"ErrorDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"value","nameLocation":"907:5:16","nodeType":"VariableDeclaration","scope":2214,"src":"899:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"length","nameLocation":"922:6:16","nodeType":"VariableDeclaration","scope":2214,"src":"914:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:16"},"src":"864:66:16"},{"documentation":{"id":2215,"nodeType":"StructuredDocumentation","src":"936:108:16","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2217,"name":"StringsInvalidChar","nameLocation":"1055:18:16","nodeType":"ErrorDefinition","parameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"1073:2:16"},"src":"1049:27:16"},{"documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"1082:84:16","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2220,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:16","nodeType":"ErrorDefinition","parameters":{"id":2219,"nodeType":"ParameterList","parameters":[],"src":"1204:2:16"},"src":"1171:36:16"},{"body":{"id":2267,"nodeType":"Block","src":"1379:561:16","statements":[{"id":2266,"nodeType":"UncheckedBlock","src":"1389:545:16","statements":[{"assignments":[2229],"declarations":[{"constant":false,"id":2229,"mutability":"mutable","name":"length","nameLocation":"1421:6:16","nodeType":"VariableDeclaration","scope":2266,"src":"1413:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2236,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1441:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2230,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"1430:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5874_$","typeString":"type(library Math)"}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5706,"src":"1430:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:16"},{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:16","nodeType":"VariableDeclaration","scope":2266,"src":"1465:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2237,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2243,"initialValue":{"arguments":[{"id":2241,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"1499:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2239,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:16"},{"assignments":[2245],"declarations":[{"constant":false,"id":2245,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:16","nodeType":"VariableDeclaration","scope":2266,"src":"1520:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2246,"nodeType":"VariableDeclarationStatement","src":"1520:11:16"},{"AST":{"nodeType":"YulBlock","src":"1570:67:16","statements":[{"nodeType":"YulAssignment","src":"1588:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:16"},"nodeType":"YulFunctionCall","src":"1607:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:16"},"nodeType":"YulFunctionCall","src":"1595:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2238,"isOffset":false,"isSlot":false,"src":"1599:6:16","valueSize":1},{"declaration":2229,"isOffset":false,"isSlot":false,"src":"1615:6:16","valueSize":1},{"declaration":2245,"isOffset":false,"isSlot":false,"src":"1588:3:16","valueSize":1}],"flags":["memory-safe"],"id":2247,"nodeType":"InlineAssembly","src":"1545:92:16"},{"body":{"id":2262,"nodeType":"Block","src":"1663:234:16","statements":[{"expression":{"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:16","subExpression":{"id":2249,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"1681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2251,"nodeType":"ExpressionStatement","src":"1681:5:16"},{"AST":{"nodeType":"YulBlock","src":"1729:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:16"},"nodeType":"YulFunctionCall","src":"1769:14:16"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:16"},"nodeType":"YulFunctionCall","src":"1764:32:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:16"},"nodeType":"YulFunctionCall","src":"1751:46:16"},"nodeType":"YulExpressionStatement","src":"1751:46:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":false,"src":"1785:10:16","valueSize":1},{"declaration":2245,"isOffset":false,"isSlot":false,"src":"1759:3:16","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"1773:5:16","valueSize":1}],"flags":["memory-safe"],"id":2252,"nodeType":"InlineAssembly","src":"1704:111:16"},{"expression":{"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1832:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2256,"nodeType":"ExpressionStatement","src":"1832:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"1865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2261,"nodeType":"IfStatement","src":"1861:21:16","trueBody":{"id":2260,"nodeType":"Break","src":"1877:5:16"}}]},"condition":{"hexValue":"74727565","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2263,"nodeType":"WhileStatement","src":"1650:247:16"},{"expression":{"id":2264,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"1917:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2227,"id":2265,"nodeType":"Return","src":"1910:13:16"}]}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"1213:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:16","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"value","nameLocation":"1334:5:16","nodeType":"VariableDeclaration","scope":2268,"src":"1326:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:16"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"1364:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2225,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:16"},"scope":3556,"src":"1308:632:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2293,"nodeType":"Block","src":"2116:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2147:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:16","trueExpression":{"hexValue":"2d","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"2193:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2286,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7783,"src":"2178:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7783_$","typeString":"type(library SignedMath)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7782,"src":"2178:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2285,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"2169:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2276,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:16","typeDescriptions":{}}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:16","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2275,"id":2292,"nodeType":"Return","src":"2126:75:16"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"1946:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2294,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:16","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"value","nameLocation":"2071:5:16","nodeType":"VariableDeclaration","scope":2294,"src":"2064:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2270,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:16"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2294,"src":"2101:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2273,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:16"},"scope":3556,"src":"2040:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2313,"nodeType":"Block","src":"2387:100:16","statements":[{"id":2312,"nodeType":"UncheckedBlock","src":"2397:84:16","statements":[{"expression":{"arguments":[{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2440:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"2459:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2304,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"2447:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5874_$","typeString":"type(library Math)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5817,"src":"2447:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2302,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2314,2397,2417],"referencedDeclaration":2397,"src":"2428:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2301,"id":2311,"nodeType":"Return","src":"2421:49:16"}]}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"2214:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:16","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"value","nameLocation":"2342:5:16","nodeType":"VariableDeclaration","scope":2314,"src":"2334:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:16"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"2372:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2299,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:16"},"scope":3556,"src":"2313:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"2700:435:16","statements":[{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:16","nodeType":"VariableDeclaration","scope":2396,"src":"2710:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2327,"initialValue":{"id":2326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2731:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:16"},{"assignments":[2329],"declarations":[{"constant":false,"id":2329,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:16","nodeType":"VariableDeclaration","scope":2396,"src":"2746:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2328,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2338,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2333,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"2782:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2330,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:16"},{"expression":{"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2803:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2341,"indexExpression":{"hexValue":"30","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2344,"nodeType":"ExpressionStatement","src":"2803:15:16"},{"expression":{"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2345,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2828:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2347,"indexExpression":{"hexValue":"31","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2350,"nodeType":"ExpressionStatement","src":"2828:15:16"},{"body":{"id":2379,"nodeType":"Block","src":"2898:95:16","statements":[{"expression":{"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2365,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"2912:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2367,"indexExpression":{"id":2366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2919:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2368,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"2924:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2372,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2935:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2374,"nodeType":"ExpressionStatement","src":"2912:40:16"},{"expression":{"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2375,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2966:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2378,"nodeType":"ExpressionStatement","src":"2966:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2359,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2886:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2380,"initializationExpression":{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"i","nameLocation":"2866:1:16","nodeType":"VariableDeclaration","scope":2380,"src":"2858:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2358,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2354,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"2874:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:16"},"loopExpression":{"expression":{"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:16","subExpression":{"id":2362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"2895:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2364,"nodeType":"ExpressionStatement","src":"2893:3:16"},"nodeType":"ForStatement","src":"2853:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2381,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"3006:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2390,"nodeType":"IfStatement","src":"3002:96:16","trueBody":{"id":2389,"nodeType":"Block","src":"3023:75:16","statements":[{"errorCall":{"arguments":[{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"3073:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2386,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"3080:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2384,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"3044:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2388,"nodeType":"RevertStatement","src":"3037:50:16"}]}},{"expression":{"arguments":[{"id":2393,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"3121:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2391,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:16","typeDescriptions":{}}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2323,"id":2395,"nodeType":"Return","src":"3107:21:16"}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"2493:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:16","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"value","nameLocation":"2639:5:16","nodeType":"VariableDeclaration","scope":2397,"src":"2631:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"length","nameLocation":"2654:6:16","nodeType":"VariableDeclaration","scope":2397,"src":"2646:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:16"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"2685:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2321,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:16"},"scope":3556,"src":"2610:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2416,"nodeType":"Block","src":"3367:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2410,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"3412:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2408,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:16","typeDescriptions":{}}},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:16","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2413,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3420:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2405,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2314,2397,2417],"referencedDeclaration":2397,"src":"3384:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2404,"id":2415,"nodeType":"Return","src":"3377:58:16"}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"3141:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2417,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:16","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"addr","nameLocation":"3323:4:16","nodeType":"VariableDeclaration","scope":2417,"src":"3315:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2399,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:16"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2417,"src":"3352:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2402,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:16"},"scope":3556,"src":"3294:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2481,"nodeType":"Block","src":"3699:642:16","statements":[{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:16","nodeType":"VariableDeclaration","scope":2481,"src":"3709:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2425,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2433,"initialValue":{"arguments":[{"arguments":[{"id":2430,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"3749:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2429,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2314,2397,2417],"referencedDeclaration":2417,"src":"3737:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2427,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:16","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:16"},{"assignments":[2435],"declarations":[{"constant":false,"id":2435,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:16","nodeType":"VariableDeclaration","scope":2481,"src":"3840:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2436,"nodeType":"VariableDeclarationStatement","src":"3840:17:16"},{"AST":{"nodeType":"YulBlock","src":"3892:78:16","statements":[{"nodeType":"YulAssignment","src":"3906:54:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:16","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:16","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:16"},"nodeType":"YulFunctionCall","src":"3937:17:16"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:16","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:16"},"nodeType":"YulFunctionCall","src":"3927:32:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:16"},"nodeType":"YulFunctionCall","src":"3919:41:16"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2426,"isOffset":false,"isSlot":false,"src":"3941:6:16","valueSize":1},{"declaration":2435,"isOffset":false,"isSlot":false,"src":"3906:9:16","valueSize":1}],"flags":["memory-safe"],"id":2437,"nodeType":"InlineAssembly","src":"3867:103:16"},{"body":{"id":2474,"nodeType":"Block","src":"4013:291:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"4119:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2455,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4148:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2457,"indexExpression":{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4155:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2453,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:16","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"4115:150:16","trueBody":{"id":2468,"nodeType":"Block","src":"4165:100:16","statements":[{"expression":{"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2462,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4233:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2464,"indexExpression":{"id":2463,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4240:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2467,"nodeType":"ExpressionStatement","src":"4233:17:16"}]}},{"expression":{"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2470,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"4278:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2473,"nodeType":"ExpressionStatement","src":"4278:15:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4001:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2475,"initializationExpression":{"assignments":[2439],"declarations":[{"constant":false,"id":2439,"mutability":"mutable","name":"i","nameLocation":"3993:1:16","nodeType":"VariableDeclaration","scope":2475,"src":"3985:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2441,"initialValue":{"hexValue":"3431","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:16","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:16"},"loopExpression":{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:16","subExpression":{"id":2445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"4010:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2447,"nodeType":"ExpressionStatement","src":"4008:3:16"},"nodeType":"ForStatement","src":"3980:324:16"},{"expression":{"arguments":[{"id":2478,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"4327:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2477,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2476,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:16","typeDescriptions":{}}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2424,"id":2480,"nodeType":"Return","src":"4313:21:16"}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"3448:165:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:16","nodeType":"FunctionDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"addr","nameLocation":"3655:4:16","nodeType":"VariableDeclaration","scope":2482,"src":"3647:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:16"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"3684:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:16"},"scope":3556,"src":"3618:723:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2518,"nodeType":"Block","src":"4496:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2494,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4519:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2492,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:16","typeDescriptions":{}}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:16","memberName":"length","nodeType":"MemberAccess","src":"4513:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2499,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"4538:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2497,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:16","typeDescriptions":{}}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:16","memberName":"length","nodeType":"MemberAccess","src":"4532:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4567:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2504,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:16","typeDescriptions":{}}},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2503,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2512,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"4590:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:16","typeDescriptions":{}}},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2509,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2491,"id":2517,"nodeType":"Return","src":"4506:87:16"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"4347:66:16","text":" @dev Returns true if the two strings are equal."},"id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:16","nodeType":"FunctionDefinition","parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"a","nameLocation":"4447:1:16","nodeType":"VariableDeclaration","scope":2519,"src":"4433:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2484,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"b","nameLocation":"4464:1:16","nodeType":"VariableDeclaration","scope":2519,"src":"4450:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2486,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:16"},"returnParameters":{"id":2491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2519,"src":"4490:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2489,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:16"},"scope":3556,"src":"4418:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"4897:64:16","statements":[{"expression":{"arguments":[{"id":2528,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"4924:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2532,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"4940:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2530,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:16","typeDescriptions":{}}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:16","memberName":"length","nodeType":"MemberAccess","src":"4934:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2527,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2538,2569],"referencedDeclaration":2569,"src":"4914:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2526,"id":2536,"nodeType":"Return","src":"4907:47:16"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"4606:214:16","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:16","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"input","nameLocation":"4858:5:16","nodeType":"VariableDeclaration","scope":2538,"src":"4844:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2521,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:16"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"4888:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:16"},"scope":3556,"src":"4825:136:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2568,"nodeType":"Block","src":"5366:153:16","statements":[{"assignments":[2551,2553],"declarations":[{"constant":false,"id":2551,"mutability":"mutable","name":"success","nameLocation":"5382:7:16","nodeType":"VariableDeclaration","scope":2568,"src":"5377:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2550,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2553,"mutability":"mutable","name":"value","nameLocation":"5399:5:16","nodeType":"VariableDeclaration","scope":2568,"src":"5391:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2559,"initialValue":{"arguments":[{"id":2555,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"5421:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2556,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"5428:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2557,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2545,"src":"5435:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2554,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2590,2627],"referencedDeclaration":2627,"src":"5408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:16"},{"condition":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:16","subExpression":{"id":2560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"5454:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2565,"nodeType":"IfStatement","src":"5449:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2562,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5470:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2564,"nodeType":"RevertStatement","src":"5463:27:16"}},{"expression":{"id":2566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"5507:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2549,"id":2567,"nodeType":"Return","src":"5500:12:16"}]},"documentation":{"id":2539,"nodeType":"StructuredDocumentation","src":"4967:294:16","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:16","nodeType":"FunctionDefinition","parameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"input","nameLocation":"5299:5:16","nodeType":"VariableDeclaration","scope":2569,"src":"5285:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2540,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2543,"mutability":"mutable","name":"begin","nameLocation":"5314:5:16","nodeType":"VariableDeclaration","scope":2569,"src":"5306:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2545,"mutability":"mutable","name":"end","nameLocation":"5329:3:16","nodeType":"VariableDeclaration","scope":2569,"src":"5321:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2544,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:16"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2569,"src":"5357:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:16"},"scope":3556,"src":"5266:253:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"5840:83:16","statements":[{"expression":{"arguments":[{"id":2580,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5886:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2584,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"5902:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2582,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:16","typeDescriptions":{}}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:16","memberName":"length","nodeType":"MemberAccess","src":"5896:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2579,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5857:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2578,"id":2588,"nodeType":"Return","src":"5850:66:16"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"5525:215:16","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:16","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"input","nameLocation":"5781:5:16","nodeType":"VariableDeclaration","scope":2590,"src":"5767:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2571,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:16"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"success","nameLocation":"5816:7:16","nodeType":"VariableDeclaration","scope":2590,"src":"5811:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2574,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"value","nameLocation":"5833:5:16","nodeType":"VariableDeclaration","scope":2590,"src":"5825:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:16"},"scope":3556,"src":"5745:178:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2626,"nodeType":"Block","src":"6325:144:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2604,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"6339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2607,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6351:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2605,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:16","typeDescriptions":{}}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:16","memberName":"length","nodeType":"MemberAccess","src":"6345:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"6368:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2612,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"6376:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2619,"nodeType":"IfStatement","src":"6335:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2617,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2603,"id":2618,"nodeType":"Return","src":"6381:17:16"}},{"expression":{"arguments":[{"id":2621,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6444:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2622,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"6451:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2623,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"6458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2620,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"6415:28:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2603,"id":2625,"nodeType":"Return","src":"6408:54:16"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"5929:238:16","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2627,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:16","nodeType":"FunctionDefinition","parameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"input","nameLocation":"6217:5:16","nodeType":"VariableDeclaration","scope":2627,"src":"6203:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2592,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2595,"mutability":"mutable","name":"begin","nameLocation":"6240:5:16","nodeType":"VariableDeclaration","scope":2627,"src":"6232:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2594,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2597,"mutability":"mutable","name":"end","nameLocation":"6263:3:16","nodeType":"VariableDeclaration","scope":2627,"src":"6255:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:16"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"success","nameLocation":"6301:7:16","nodeType":"VariableDeclaration","scope":2627,"src":"6296:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2599,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"value","nameLocation":"6318:5:16","nodeType":"VariableDeclaration","scope":2627,"src":"6310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2601,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:16"},"scope":3556,"src":"6172:297:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2696,"nodeType":"Block","src":"6872:347:16","statements":[{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:16","nodeType":"VariableDeclaration","scope":2696,"src":"6882:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2641,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2647,"initialValue":{"arguments":[{"id":2645,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"6910:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2643,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:16","typeDescriptions":{}}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:16"},{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"result","nameLocation":"6935:6:16","nodeType":"VariableDeclaration","scope":2696,"src":"6927:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2651,"initialValue":{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:16"},{"body":{"id":2690,"nodeType":"Block","src":"6993:189:16","statements":[{"assignments":[2663],"declarations":[{"constant":false,"id":2663,"mutability":"mutable","name":"chr","nameLocation":"7013:3:16","nodeType":"VariableDeclaration","scope":2690,"src":"7007:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2662,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2673,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2668,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"7062:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2669,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"7070:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2667,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"7039:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2665,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:16","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2664,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"7019:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2674,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"7092:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2681,"nodeType":"IfStatement","src":"7088:30:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2640,"id":2680,"nodeType":"Return","src":"7101:17:16"}},{"expression":{"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7132:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2685,"nodeType":"ExpressionStatement","src":"7132:12:16"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7158:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2687,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2663,"src":"7168:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"7158:13:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2656,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"6979:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"6983:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2691,"initializationExpression":{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"i","nameLocation":"6968:1:16","nodeType":"VariableDeclaration","scope":2691,"src":"6960:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2655,"initialValue":{"id":2654,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"6972:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:16"},"loopExpression":{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:16","subExpression":{"id":2659,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"6990:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"6988:3:16"},"nodeType":"ForStatement","src":"6955:227:16"},{"expression":{"components":[{"hexValue":"74727565","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2693,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"7205:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2640,"id":2695,"nodeType":"Return","src":"7191:21:16"}]},"documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"6475:224:16","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2697,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:16","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"input","nameLocation":"6765:5:16","nodeType":"VariableDeclaration","scope":2697,"src":"6751:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2629,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"begin","nameLocation":"6788:5:16","nodeType":"VariableDeclaration","scope":2697,"src":"6780:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"end","nameLocation":"6811:3:16","nodeType":"VariableDeclaration","scope":2697,"src":"6803:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2633,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:16"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"success","nameLocation":"6848:7:16","nodeType":"VariableDeclaration","scope":2697,"src":"6843:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2636,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"value","nameLocation":"6865:5:16","nodeType":"VariableDeclaration","scope":2697,"src":"6857:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:16"},"scope":3556,"src":"6704:515:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2715,"nodeType":"Block","src":"7516:63:16","statements":[{"expression":{"arguments":[{"id":2706,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7542:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2710,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"7558:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2708,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:16","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:16","memberName":"length","nodeType":"MemberAccess","src":"7552:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2705,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2716,2747],"referencedDeclaration":2747,"src":"7533:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2704,"id":2714,"nodeType":"Return","src":"7526:46:16"}]},"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"7225:216:16","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2716,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:16","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"input","nameLocation":"7478:5:16","nodeType":"VariableDeclaration","scope":2716,"src":"7464:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2699,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:16"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2716,"src":"7508:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2702,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:16"},"scope":3556,"src":"7446:133:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"7984:151:16","statements":[{"assignments":[2729,2731],"declarations":[{"constant":false,"id":2729,"mutability":"mutable","name":"success","nameLocation":"8000:7:16","nodeType":"VariableDeclaration","scope":2746,"src":"7995:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2728,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2731,"mutability":"mutable","name":"value","nameLocation":"8016:5:16","nodeType":"VariableDeclaration","scope":2746,"src":"8009:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2730,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2737,"initialValue":{"arguments":[{"id":2733,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"8037:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2734,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2721,"src":"8044:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2735,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2723,"src":"8051:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2768,2810],"referencedDeclaration":2810,"src":"8025:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:16"},{"condition":{"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:16","subExpression":{"id":2738,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"8070:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2743,"nodeType":"IfStatement","src":"8065:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2740,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"8086:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2742,"nodeType":"RevertStatement","src":"8079:27:16"}},{"expression":{"id":2744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2731,"src":"8123:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2727,"id":2745,"nodeType":"Return","src":"8116:12:16"}]},"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"7585:296:16","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:16","nodeType":"FunctionDefinition","parameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"input","nameLocation":"7918:5:16","nodeType":"VariableDeclaration","scope":2747,"src":"7904:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2718,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"begin","nameLocation":"7933:5:16","nodeType":"VariableDeclaration","scope":2747,"src":"7925:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"end","nameLocation":"7948:3:16","nodeType":"VariableDeclaration","scope":2747,"src":"7940:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:16"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2747,"src":"7976:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2725,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:16"},"scope":3556,"src":"7886:249:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2767,"nodeType":"Block","src":"8526:82:16","statements":[{"expression":{"arguments":[{"id":2758,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"8571:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2762,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"8587:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2760,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:16","typeDescriptions":{}}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:16","memberName":"length","nodeType":"MemberAccess","src":"8581:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2757,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"8543:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2756,"id":2766,"nodeType":"Return","src":"8536:65:16"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"8141:287:16","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:16","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"input","nameLocation":"8468:5:16","nodeType":"VariableDeclaration","scope":2768,"src":"8454:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:16"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"success","nameLocation":"8503:7:16","nodeType":"VariableDeclaration","scope":2768,"src":"8498:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2752,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"value","nameLocation":"8519:5:16","nodeType":"VariableDeclaration","scope":2768,"src":"8512:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2754,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:16"},"scope":3556,"src":"8433:175:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2773,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:16","nodeType":"VariableDeclaration","scope":3556,"src":"8614:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2769,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2809,"nodeType":"Block","src":"9130:143:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"9144:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2790,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"9156:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2788,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:16","typeDescriptions":{}}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:16","memberName":"length","nodeType":"MemberAccess","src":"9150:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"9173:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2795,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"9181:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2802,"nodeType":"IfStatement","src":"9140:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2800,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2786,"id":2801,"nodeType":"Return","src":"9186:17:16"}},{"expression":{"arguments":[{"id":2804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"9248:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2805,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"9255:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2806,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2780,"src":"9262:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"9220:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2786,"id":2808,"nodeType":"Return","src":"9213:53:16"}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"8671:303:16","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2810,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:16","nodeType":"FunctionDefinition","parameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"input","nameLocation":"9023:5:16","nodeType":"VariableDeclaration","scope":2810,"src":"9009:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2775,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"begin","nameLocation":"9046:5:16","nodeType":"VariableDeclaration","scope":2810,"src":"9038:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"mutability":"mutable","name":"end","nameLocation":"9069:3:16","nodeType":"VariableDeclaration","scope":2810,"src":"9061:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:16"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2783,"mutability":"mutable","name":"success","nameLocation":"9107:7:16","nodeType":"VariableDeclaration","scope":2810,"src":"9102:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2782,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2785,"mutability":"mutable","name":"value","nameLocation":"9123:5:16","nodeType":"VariableDeclaration","scope":2810,"src":"9116:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2784,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:16"},"scope":3556,"src":"8979:294:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2930,"nodeType":"Block","src":"9673:812:16","statements":[{"assignments":[2825],"declarations":[{"constant":false,"id":2825,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:16","nodeType":"VariableDeclaration","scope":2930,"src":"9683:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2824,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2830,"initialValue":{"arguments":[{"id":2828,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"9711:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2826,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:16","typeDescriptions":{}}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:16"},{"assignments":[2832],"declarations":[{"constant":false,"id":2832,"mutability":"mutable","name":"sign","nameLocation":"9781:4:16","nodeType":"VariableDeclaration","scope":2930,"src":"9774:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2831,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2848,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"9788:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2834,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"9797:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2843,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"9845:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2844,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"9853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2842,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"9822:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2840,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:16","typeDescriptions":{}}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:16","trueExpression":{"arguments":[{"hexValue":"30","id":2838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2836,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:16","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:16"},{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:16","nodeType":"VariableDeclaration","scope":2930,"src":"9941:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2849,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2857,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2851,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"9961:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2852,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:16","typeDescriptions":{}}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:16"},{"assignments":[2859],"declarations":[{"constant":false,"id":2859,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:16","nodeType":"VariableDeclaration","scope":2930,"src":"9990:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2858,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2866,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"10010:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2861,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:16","typeDescriptions":{}}},"id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:16"},{"assignments":[2868],"declarations":[{"constant":false,"id":2868,"mutability":"mutable","name":"offset","nameLocation":"10047:6:16","nodeType":"VariableDeclaration","scope":2930,"src":"10039:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2867,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2875,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2869,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"10057:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2870,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"10073:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"10056:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:16"},{"assignments":[2877,2879],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:16","nodeType":"VariableDeclaration","scope":2930,"src":"10107:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2876,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:16","nodeType":"VariableDeclaration","scope":2930,"src":"10124:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2887,"initialValue":{"arguments":[{"id":2881,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2813,"src":"10157:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2882,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"10164:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2883,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2868,"src":"10172:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2885,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"10180:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2880,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2590,2627],"referencedDeclaration":2627,"src":"10144:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10199:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"10213:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2890,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"10224:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"10341:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2909,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"10355:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"10371:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2912,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"10383:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2926,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2823,"id":2927,"nodeType":"Return","src":"10461:17:16"},"id":2928,"nodeType":"IfStatement","src":"10337:141:16","trueBody":{"id":2923,"nodeType":"Block","src":"10399:56:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2917,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:16","memberName":"min","nodeType":"MemberAccess","src":"10427:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2823,"id":2922,"nodeType":"Return","src":"10413:31:16"}]}},"id":2929,"nodeType":"IfStatement","src":"10195:283:16","trueBody":{"id":2907,"nodeType":"Block","src":"10240:91:16","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2894,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"10268:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2902,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"10310:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2900,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:16","typeDescriptions":{}}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:16","trueExpression":{"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:16","subExpression":{"arguments":[{"id":2897,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"10291:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2895,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:16","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2823,"id":2906,"nodeType":"Return","src":"10254:66:16"}]}}]},"documentation":{"id":2811,"nodeType":"StructuredDocumentation","src":"9279:223:16","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:16","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"input","nameLocation":"9567:5:16","nodeType":"VariableDeclaration","scope":2931,"src":"9553:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2812,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2815,"mutability":"mutable","name":"begin","nameLocation":"9590:5:16","nodeType":"VariableDeclaration","scope":2931,"src":"9582:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2814,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"end","nameLocation":"9613:3:16","nodeType":"VariableDeclaration","scope":2931,"src":"9605:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:16"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"success","nameLocation":"9650:7:16","nodeType":"VariableDeclaration","scope":2931,"src":"9645:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2819,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"value","nameLocation":"9666:5:16","nodeType":"VariableDeclaration","scope":2931,"src":"9659:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2821,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:16"},"scope":3556,"src":"9507:978:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2949,"nodeType":"Block","src":"10830:67:16","statements":[{"expression":{"arguments":[{"id":2940,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"10860:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2944,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"10876:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2942,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:16","typeDescriptions":{}}},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:16","memberName":"length","nodeType":"MemberAccess","src":"10870:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2939,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2950,2981],"referencedDeclaration":2981,"src":"10847:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2938,"id":2948,"nodeType":"Return","src":"10840:50:16"}]},"documentation":{"id":2932,"nodeType":"StructuredDocumentation","src":"10491:259:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:16","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2934,"mutability":"mutable","name":"input","nameLocation":"10791:5:16","nodeType":"VariableDeclaration","scope":2950,"src":"10777:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2933,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:16"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2950,"src":"10821:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:16"},"scope":3556,"src":"10755:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2980,"nodeType":"Block","src":"11318:156:16","statements":[{"assignments":[2963,2965],"declarations":[{"constant":false,"id":2963,"mutability":"mutable","name":"success","nameLocation":"11334:7:16","nodeType":"VariableDeclaration","scope":2980,"src":"11329:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2962,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"value","nameLocation":"11351:5:16","nodeType":"VariableDeclaration","scope":2980,"src":"11343:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2971,"initialValue":{"arguments":[{"id":2967,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"11376:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2968,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"11383:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2969,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"11390:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2966,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3002,3039],"referencedDeclaration":3039,"src":"11360:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:16"},{"condition":{"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:16","subExpression":{"id":2972,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"11409:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2977,"nodeType":"IfStatement","src":"11404:41:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2974,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"11425:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2976,"nodeType":"RevertStatement","src":"11418:27:16"}},{"expression":{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"11462:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2961,"id":2979,"nodeType":"Return","src":"11455:12:16"}]},"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"10903:307:16","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:16","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"input","nameLocation":"11251:5:16","nodeType":"VariableDeclaration","scope":2981,"src":"11237:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2952,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2955,"mutability":"mutable","name":"begin","nameLocation":"11266:5:16","nodeType":"VariableDeclaration","scope":2981,"src":"11258:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2954,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"end","nameLocation":"11281:3:16","nodeType":"VariableDeclaration","scope":2981,"src":"11273:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:16"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2981,"src":"11309:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:16"},"scope":3556,"src":"11215:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3001,"nodeType":"Block","src":"11801:86:16","statements":[{"expression":{"arguments":[{"id":2992,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"11850:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2996,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"11866:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2994,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:16","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:16","memberName":"length","nodeType":"MemberAccess","src":"11860:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2991,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"11818:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2990,"id":3000,"nodeType":"Return","src":"11811:69:16"}]},"documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"11480:218:16","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3002,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:16","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"input","nameLocation":"11742:5:16","nodeType":"VariableDeclaration","scope":3002,"src":"11728:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:16"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"success","nameLocation":"11777:7:16","nodeType":"VariableDeclaration","scope":3002,"src":"11772:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2986,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2989,"mutability":"mutable","name":"value","nameLocation":"11794:5:16","nodeType":"VariableDeclaration","scope":3002,"src":"11786:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2988,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:16"},"scope":3556,"src":"11703:184:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3038,"nodeType":"Block","src":"12295:147:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3016,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"12309:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3019,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"12321:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3017,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:16","typeDescriptions":{}}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:16","memberName":"length","nodeType":"MemberAccess","src":"12315:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3023,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12338:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3024,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"12346:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"IfStatement","src":"12305:63:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3015,"id":3030,"nodeType":"Return","src":"12351:17:16"}},{"expression":{"arguments":[{"id":3033,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"12417:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3034,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"12424:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3035,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"12431:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"12385:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3015,"id":3037,"nodeType":"Return","src":"12378:57:16"}]},"documentation":{"id":3003,"nodeType":"StructuredDocumentation","src":"11893:241:16","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3039,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:16","nodeType":"FunctionDefinition","parameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"input","nameLocation":"12187:5:16","nodeType":"VariableDeclaration","scope":3039,"src":"12173:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3004,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"begin","nameLocation":"12210:5:16","nodeType":"VariableDeclaration","scope":3039,"src":"12202:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3009,"mutability":"mutable","name":"end","nameLocation":"12233:3:16","nodeType":"VariableDeclaration","scope":3039,"src":"12225:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:16"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3012,"mutability":"mutable","name":"success","nameLocation":"12271:7:16","nodeType":"VariableDeclaration","scope":3039,"src":"12266:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3011,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3014,"mutability":"mutable","name":"value","nameLocation":"12288:5:16","nodeType":"VariableDeclaration","scope":3039,"src":"12280:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:16"},"scope":3556,"src":"12139:303:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3141,"nodeType":"Block","src":"12851:881:16","statements":[{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:16","nodeType":"VariableDeclaration","scope":3141,"src":"12861:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3053,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3059,"initialValue":{"arguments":[{"id":3057,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"12889:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3055,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:16","typeDescriptions":{}}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:16"},{"assignments":[3061],"declarations":[{"constant":false,"id":3061,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:16","nodeType":"VariableDeclaration","scope":3141,"src":"12943:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3060,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3081,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"12961:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3063,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"12967:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3071,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"13011:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3072,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"13019:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3070,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"12988:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3068,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:16","typeDescriptions":{}}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3075,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:16","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:16"},{"assignments":[3083],"declarations":[{"constant":false,"id":3083,"mutability":"mutable","name":"offset","nameLocation":"13131:6:16","nodeType":"VariableDeclaration","scope":3141,"src":"13123:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3082,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3089,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3084,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3061,"src":"13140:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"13140:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:16"},{"assignments":[3091],"declarations":[{"constant":false,"id":3091,"mutability":"mutable","name":"result","nameLocation":"13181:6:16","nodeType":"VariableDeclaration","scope":3141,"src":"13173:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3093,"initialValue":{"hexValue":"30","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:16"},{"body":{"id":3135,"nodeType":"Block","src":"13248:447:16","statements":[{"assignments":[3107],"declarations":[{"constant":false,"id":3107,"mutability":"mutable","name":"chr","nameLocation":"13268:3:16","nodeType":"VariableDeclaration","scope":3135,"src":"13262:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3106,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3117,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3112,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"13317:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3113,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"13325:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3111,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"13294:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3109,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:16","typeDescriptions":{}}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3108,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"13274:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3118,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"13347:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3125,"nodeType":"IfStatement","src":"13343:31:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3052,"id":3124,"nodeType":"Return","src":"13357:17:16"}},{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"13388:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"13388:12:16"},{"id":3134,"nodeType":"UncheckedBlock","src":"13414:271:16","statements":[{"expression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"13657:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3131,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"13667:3:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3133,"nodeType":"ExpressionStatement","src":"13657:13:16"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"13234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3101,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"13238:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3136,"initializationExpression":{"assignments":[3095],"declarations":[{"constant":false,"id":3095,"mutability":"mutable","name":"i","nameLocation":"13214:1:16","nodeType":"VariableDeclaration","scope":3136,"src":"13206:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3099,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3096,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"13218:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3097,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"13226:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:16"},"loopExpression":{"expression":{"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:16","subExpression":{"id":3103,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"13245:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3105,"nodeType":"ExpressionStatement","src":"13243:3:16"},"nodeType":"ForStatement","src":"13201:494:16"},{"expression":{"components":[{"hexValue":"74727565","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3138,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"13718:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3139,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3052,"id":3140,"nodeType":"Return","src":"13704:21:16"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"12448:227:16","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3142,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:16","nodeType":"FunctionDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"input","nameLocation":"12744:5:16","nodeType":"VariableDeclaration","scope":3142,"src":"12730:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3041,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"begin","nameLocation":"12767:5:16","nodeType":"VariableDeclaration","scope":3142,"src":"12759:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"end","nameLocation":"12790:3:16","nodeType":"VariableDeclaration","scope":3142,"src":"12782:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:16"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"success","nameLocation":"12827:7:16","nodeType":"VariableDeclaration","scope":3142,"src":"12822:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3048,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"value","nameLocation":"12844:5:16","nodeType":"VariableDeclaration","scope":3142,"src":"12836:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:16"},"scope":3556,"src":"12680:1052:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3160,"nodeType":"Block","src":"14030:67:16","statements":[{"expression":{"arguments":[{"id":3151,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"14060:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3155,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"14076:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3153,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:16","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:16","memberName":"length","nodeType":"MemberAccess","src":"14070:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3161,3192],"referencedDeclaration":3192,"src":"14047:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3149,"id":3159,"nodeType":"Return","src":"14040:50:16"}]},"documentation":{"id":3143,"nodeType":"StructuredDocumentation","src":"13738:212:16","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3161,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:16","nodeType":"FunctionDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3145,"mutability":"mutable","name":"input","nameLocation":"13991:5:16","nodeType":"VariableDeclaration","scope":3161,"src":"13977:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3144,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:16"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3161,"src":"14021:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3147,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:16"},"scope":3556,"src":"13955:142:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3191,"nodeType":"Block","src":"14470:165:16","statements":[{"assignments":[3174,3176],"declarations":[{"constant":false,"id":3174,"mutability":"mutable","name":"success","nameLocation":"14486:7:16","nodeType":"VariableDeclaration","scope":3191,"src":"14481:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3173,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"value","nameLocation":"14503:5:16","nodeType":"VariableDeclaration","scope":3191,"src":"14495:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3182,"initialValue":{"arguments":[{"id":3178,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"14528:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3179,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"14535:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3180,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3168,"src":"14542:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3177,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3213,3317],"referencedDeclaration":3317,"src":"14512:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:16"},{"condition":{"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:16","subExpression":{"id":3183,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3174,"src":"14561:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3188,"nodeType":"IfStatement","src":"14556:50:16","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3185,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"14577:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3187,"nodeType":"RevertStatement","src":"14570:36:16"}},{"expression":{"id":3189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"14623:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3172,"id":3190,"nodeType":"Return","src":"14616:12:16"}]},"documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"14103:259:16","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3192,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:16","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"input","nameLocation":"14403:5:16","nodeType":"VariableDeclaration","scope":3192,"src":"14389:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3163,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"begin","nameLocation":"14418:5:16","nodeType":"VariableDeclaration","scope":3192,"src":"14410:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"end","nameLocation":"14433:3:16","nodeType":"VariableDeclaration","scope":3192,"src":"14425:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:16"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3192,"src":"14461:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:16"},"scope":3556,"src":"14367:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3212,"nodeType":"Block","src":"14942:70:16","statements":[{"expression":{"arguments":[{"id":3203,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"14975:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3207,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"14991:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3205,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:16","typeDescriptions":{}}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:16","memberName":"length","nodeType":"MemberAccess","src":"14985:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3202,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3213,3317],"referencedDeclaration":3317,"src":"14959:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3201,"id":3211,"nodeType":"Return","src":"14952:53:16"}]},"documentation":{"id":3193,"nodeType":"StructuredDocumentation","src":"14641:198:16","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:16","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3195,"mutability":"mutable","name":"input","nameLocation":"14883:5:16","nodeType":"VariableDeclaration","scope":3213,"src":"14869:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3194,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:16"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"success","nameLocation":"14918:7:16","nodeType":"VariableDeclaration","scope":3213,"src":"14913:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3197,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"value","nameLocation":"14935:5:16","nodeType":"VariableDeclaration","scope":3213,"src":"14927:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3199,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:16"},"scope":3556,"src":"14844:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"15405:733:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"15419:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3230,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"15431:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3228,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:16","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:16","memberName":"length","nodeType":"MemberAccess","src":"15425:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3234,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"15448:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3235,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"15456:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3245,"nodeType":"IfStatement","src":"15415:72:16","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:16","typeDescriptions":{}}},"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3226,"id":3244,"nodeType":"Return","src":"15461:26:16"}},{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:16","nodeType":"VariableDeclaration","scope":3316,"src":"15498:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3246,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3270,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"15516:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3249,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"15522:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3259,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"15572:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3257,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:16","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3261,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"15580:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3256,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"15543:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3254,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:16","typeDescriptions":{}}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3264,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:16","typeDescriptions":{}}},"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:16"},{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:16","nodeType":"VariableDeclaration","scope":3316,"src":"15684:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3280,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3274,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"15714:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"15714:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3281,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"15801:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3282,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"15807:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3284,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"15816:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3314,"nodeType":"Block","src":"16081:51:16","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3308,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:16","typeDescriptions":{}}},"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3226,"id":3313,"nodeType":"Return","src":"16095:26:16"}]},"id":3315,"nodeType":"IfStatement","src":"15797:335:16","trueBody":{"id":3306,"nodeType":"Block","src":"15832:243:16","statements":[{"assignments":[3287,3289],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"s","nameLocation":"15953:1:16","nodeType":"VariableDeclaration","scope":3306,"src":"15948:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3286,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3289,"mutability":"mutable","name":"v","nameLocation":"15964:1:16","nodeType":"VariableDeclaration","scope":3306,"src":"15956:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3295,"initialValue":{"arguments":[{"id":3291,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"16001:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3292,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"16008:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3293,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"16015:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3290,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3142,"src":"15969:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:16"},{"expression":{"components":[{"id":3296,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"16041:1:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3301,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"16060:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3299,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:16","typeDescriptions":{}}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:16","typeDescriptions":{}}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3226,"id":3305,"nodeType":"Return","src":"16033:31:16"}]}}]},"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"15018:226:16","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:16","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"input","nameLocation":"15297:5:16","nodeType":"VariableDeclaration","scope":3317,"src":"15283:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3215,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"begin","nameLocation":"15320:5:16","nodeType":"VariableDeclaration","scope":3317,"src":"15312:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"end","nameLocation":"15343:3:16","nodeType":"VariableDeclaration","scope":3317,"src":"15335:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:16"},"returnParameters":{"id":3226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3223,"mutability":"mutable","name":"success","nameLocation":"15381:7:16","nodeType":"VariableDeclaration","scope":3317,"src":"15376:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3222,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3225,"mutability":"mutable","name":"value","nameLocation":"15398:5:16","nodeType":"VariableDeclaration","scope":3317,"src":"15390:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:16"},"scope":3556,"src":"15249:889:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"16207:461:16","statements":[{"assignments":[3325],"declarations":[{"constant":false,"id":3325,"mutability":"mutable","name":"value","nameLocation":"16223:5:16","nodeType":"VariableDeclaration","scope":3376,"src":"16217:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3324,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3330,"initialValue":{"arguments":[{"id":3328,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"16237:3:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3326,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:16","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:16"},{"id":3373,"nodeType":"UncheckedBlock","src":"16401:238:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16429:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:16","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16443:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:16","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16489:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16503:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:16","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16550:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16564:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:16","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3365,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3364,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:16","memberName":"max","nodeType":"MemberAccess","src":"16613:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3323,"id":3369,"nodeType":"Return","src":"16606:22:16"},"id":3370,"nodeType":"IfStatement","src":"16546:82:16","trueBody":{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16576:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:16","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3363,"nodeType":"ExpressionStatement","src":"16576:11:16"}},"id":3371,"nodeType":"IfStatement","src":"16485:143:16","trueBody":{"expression":{"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16516:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:16","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3352,"nodeType":"ExpressionStatement","src":"16516:11:16"}},"id":3372,"nodeType":"IfStatement","src":"16425:203:16","trueBody":{"expression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16455:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3341,"nodeType":"ExpressionStatement","src":"16455:11:16"}}]},{"expression":{"id":3374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3325,"src":"16656:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3323,"id":3375,"nodeType":"Return","src":"16649:12:16"}]},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:16","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"chr","nameLocation":"16173:3:16","nodeType":"VariableDeclaration","scope":3377,"src":"16166:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3318,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:16"},"returnParameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"16200:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3321,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:16"},"scope":3556,"src":"16144:524:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3542,"nodeType":"Block","src":"17334:1331:16","statements":[{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:16","nodeType":"VariableDeclaration","scope":3542,"src":"17344:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3385,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3391,"initialValue":{"arguments":[{"id":3389,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"17372:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3387,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:16","typeDescriptions":{}}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:16"},{"assignments":[3393],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"output","nameLocation":"17401:6:16","nodeType":"VariableDeclaration","scope":3542,"src":"17388:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3392,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3397,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"17424:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:16","memberName":"length","nodeType":"MemberAccess","src":"17424:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3394,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:16"},{"assignments":[3403],"declarations":[{"constant":false,"id":3403,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:16","nodeType":"VariableDeclaration","scope":3542,"src":"17471:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3405,"initialValue":{"hexValue":"30","id":3404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:16"},{"body":{"id":3534,"nodeType":"Block","src":"17546:854:16","statements":[{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"char","nameLocation":"17567:4:16","nodeType":"VariableDeclaration","scope":3534,"src":"17560:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3416,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3425,"initialValue":{"arguments":[{"arguments":[{"id":3421,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"17604:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3422,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"17612:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3420,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"17581:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3418,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:16","typeDescriptions":{}}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:16"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3426,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"17635:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3430,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"17670:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3428,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:16","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3532,"nodeType":"Block","src":"18328:62:16","statements":[{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3525,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"18346:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3528,"indexExpression":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:16","subExpression":{"id":3526,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"18353:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3529,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"18371:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3531,"nodeType":"ExpressionStatement","src":"18346:29:16"}]},"id":3533,"nodeType":"IfStatement","src":"17629:761:16","trueBody":{"id":3524,"nodeType":"Block","src":"17685:637:16","statements":[{"expression":{"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3439,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17703:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3442,"indexExpression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:16","subExpression":{"id":3440,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"17710:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3445,"nodeType":"ExpressionStatement","src":"17703:29:16"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3446,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"17754:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"17823:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:16","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"17892:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3476,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"17961:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:16","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3486,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"18030:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:16","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"18099:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:16","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"18169:4:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:16","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"nodeType":"IfStatement","src":"18165:143:16","trueBody":{"id":3516,"nodeType":"Block","src":"18183:125:16","statements":[{"expression":{"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3509,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"18261:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3512,"indexExpression":{"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:16","subExpression":{"id":3510,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"18268:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3515,"nodeType":"ExpressionStatement","src":"18261:28:16"}]}},"id":3518,"nodeType":"IfStatement","src":"18095:213:16","trueBody":{"expression":{"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3499,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"18113:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3502,"indexExpression":{"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:16","subExpression":{"id":3500,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"18120:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3505,"nodeType":"ExpressionStatement","src":"18113:29:16"}},"id":3519,"nodeType":"IfStatement","src":"18026:282:16","trueBody":{"expression":{"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3489,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"18044:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3492,"indexExpression":{"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:16","subExpression":{"id":3490,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"18051:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3495,"nodeType":"ExpressionStatement","src":"18044:28:16"}},"id":3520,"nodeType":"IfStatement","src":"17957:351:16","trueBody":{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3479,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17975:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3482,"indexExpression":{"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:16","subExpression":{"id":3480,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"17982:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3485,"nodeType":"ExpressionStatement","src":"17975:28:16"}},"id":3521,"nodeType":"IfStatement","src":"17888:420:16","trueBody":{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3469,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17906:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3472,"indexExpression":{"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:16","subExpression":{"id":3470,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"17913:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3475,"nodeType":"ExpressionStatement","src":"17906:28:16"}},"id":3522,"nodeType":"IfStatement","src":"17819:489:16","trueBody":{"expression":{"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3459,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17837:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3462,"indexExpression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:16","subExpression":{"id":3460,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"17844:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3465,"nodeType":"ExpressionStatement","src":"17837:28:16"}},"id":3523,"nodeType":"IfStatement","src":"17750:558:16","trueBody":{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3449,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17768:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3452,"indexExpression":{"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:16","subExpression":{"id":3450,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"17775:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3455,"nodeType":"ExpressionStatement","src":"17768:28:16"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"17522:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3410,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"17526:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:16","memberName":"length","nodeType":"MemberAccess","src":"17526:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3535,"initializationExpression":{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"i","nameLocation":"17519:1:16","nodeType":"VariableDeclaration","scope":3535,"src":"17511:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3408,"nodeType":"VariableDeclarationStatement","src":"17511:9:16"},"loopExpression":{"expression":{"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:16","subExpression":{"id":3413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"17543:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3415,"nodeType":"ExpressionStatement","src":"17541:3:16"},"nodeType":"ForStatement","src":"17506:894:16"},{"AST":{"nodeType":"YulBlock","src":"18498:129:16","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:16"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:16"},"nodeType":"YulFunctionCall","src":"18512:28:16"},"nodeType":"YulExpressionStatement","src":"18512:28:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:16","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:16","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:16","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:16"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:16","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:16"},"nodeType":"YulFunctionCall","src":"18592:21:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:16"},"nodeType":"YulFunctionCall","src":"18585:29:16"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:16"},"nodeType":"YulFunctionCall","src":"18578:37:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:16"},"nodeType":"YulFunctionCall","src":"18566:50:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:16"},"nodeType":"YulFunctionCall","src":"18553:64:16"},"nodeType":"YulExpressionStatement","src":"18553:64:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3393,"isOffset":false,"isSlot":false,"src":"18519:6:16","valueSize":1},{"declaration":3393,"isOffset":false,"isSlot":false,"src":"18570:6:16","valueSize":1},{"declaration":3403,"isOffset":false,"isSlot":false,"src":"18527:12:16","valueSize":1},{"declaration":3403,"isOffset":false,"isSlot":false,"src":"18596:12:16","valueSize":1}],"flags":["memory-safe"],"id":3536,"nodeType":"InlineAssembly","src":"18473:154:16"},{"expression":{"arguments":[{"id":3539,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"18651:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3537,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:16","typeDescriptions":{}}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3384,"id":3541,"nodeType":"Return","src":"18637:21:16"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"16674:576:16","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3543,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:16","nodeType":"FunctionDefinition","parameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"input","nameLocation":"17289:5:16","nodeType":"VariableDeclaration","scope":3543,"src":"17275:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3379,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:16"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3543,"src":"17319:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3382,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:16"},"scope":3556,"src":"17255:1410:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3554,"nodeType":"Block","src":"19050:225:16","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:16","statements":[{"nodeType":"YulAssignment","src":"19213:46:16","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:16","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:16"},"nodeType":"YulFunctionCall","src":"19240:17:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:16"},"nodeType":"YulFunctionCall","src":"19228:30:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:16"},"nodeType":"YulFunctionCall","src":"19222:37:16"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3546,"isOffset":false,"isSlot":false,"src":"19232:6:16","valueSize":1},{"declaration":3548,"isOffset":false,"isSlot":false,"src":"19250:6:16","valueSize":1},{"declaration":3551,"isOffset":false,"isSlot":false,"src":"19213:5:16","valueSize":1}],"flags":["memory-safe"],"id":3553,"nodeType":"InlineAssembly","src":"19174:95:16"}]},"documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"18671:268:16","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3555,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:16","nodeType":"FunctionDefinition","parameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3546,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:16","nodeType":"VariableDeclaration","scope":3555,"src":"18976:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3545,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3548,"mutability":"mutable","name":"offset","nameLocation":"19005:6:16","nodeType":"VariableDeclaration","scope":3555,"src":"18997:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:16"},"returnParameters":{"id":3552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3551,"mutability":"mutable","name":"value","nameLocation":"19043:5:16","nodeType":"VariableDeclaration","scope":3555,"src":"19035:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3550,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:16"},"scope":3556,"src":"18944:331:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3557,"src":"297:18980:16","usedErrors":[2214,2217,2220],"usedEvents":[]}],"src":"101:19177:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3904]},"id":3905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3558,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"138:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3904,"linearizedBaseContracts":[3904],"name":"ECDSA","nameLocation":"352:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3564,"members":[{"id":3560,"name":"NoError","nameLocation":"392:7:17","nodeType":"EnumValue","src":"392:7:17"},{"id":3561,"name":"InvalidSignature","nameLocation":"409:16:17","nodeType":"EnumValue","src":"409:16:17"},{"id":3562,"name":"InvalidSignatureLength","nameLocation":"435:22:17","nodeType":"EnumValue","src":"435:22:17"},{"id":3563,"name":"InvalidSignatureS","nameLocation":"467:17:17","nodeType":"EnumValue","src":"467:17:17"}],"name":"RecoverError","nameLocation":"369:12:17","nodeType":"EnumDefinition","src":"364:126:17"},{"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"496:63:17","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3567,"name":"ECDSAInvalidSignature","nameLocation":"570:21:17","nodeType":"ErrorDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[],"src":"591:2:17"},"src":"564:30:17"},{"documentation":{"id":3568,"nodeType":"StructuredDocumentation","src":"600:60:17","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3572,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:17","nodeType":"ErrorDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"length","nameLocation":"707:6:17","nodeType":"VariableDeclaration","scope":3572,"src":"699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:17"},"src":"665:50:17"},{"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"721:85:17","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3577,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:17","nodeType":"ErrorDefinition","parameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"s","nameLocation":"848:1:17","nodeType":"VariableDeclaration","scope":3577,"src":"840:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:17"},"src":"811:40:17"},{"body":{"id":3629,"nodeType":"Block","src":"2285:622:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3592,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"2299:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:17","memberName":"length","nodeType":"MemberAccess","src":"2299:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3627,"nodeType":"Block","src":"2793:108:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3614,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:17","typeDescriptions":{}}},"id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3618,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"2827:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"2827:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3622,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"2872:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:17","memberName":"length","nodeType":"MemberAccess","src":"2872:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:17","typeDescriptions":{}}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3591,"id":3626,"nodeType":"Return","src":"2807:83:17"}]},"id":3628,"nodeType":"IfStatement","src":"2295:606:17","trueBody":{"id":3613,"nodeType":"Block","src":"2323:464:17","statements":[{"assignments":[3597],"declarations":[{"constant":false,"id":3597,"mutability":"mutable","name":"r","nameLocation":"2345:1:17","nodeType":"VariableDeclaration","scope":3613,"src":"2337:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3598,"nodeType":"VariableDeclarationStatement","src":"2337:9:17"},{"assignments":[3600],"declarations":[{"constant":false,"id":3600,"mutability":"mutable","name":"s","nameLocation":"2368:1:17","nodeType":"VariableDeclaration","scope":3613,"src":"2360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3601,"nodeType":"VariableDeclarationStatement","src":"2360:9:17"},{"assignments":[3603],"declarations":[{"constant":false,"id":3603,"mutability":"mutable","name":"v","nameLocation":"2389:1:17","nodeType":"VariableDeclaration","scope":3613,"src":"2383:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3602,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3604,"nodeType":"VariableDeclarationStatement","src":"2383:7:17"},{"AST":{"nodeType":"YulBlock","src":"2560:171:17","statements":[{"nodeType":"YulAssignment","src":"2578:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:17"},"nodeType":"YulFunctionCall","src":"2589:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:17"},"nodeType":"YulFunctionCall","src":"2583:27:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:17"}]},{"nodeType":"YulAssignment","src":"2627:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:17"},"nodeType":"YulFunctionCall","src":"2638:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:17"},"nodeType":"YulFunctionCall","src":"2632:27:17"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:17"}]},{"nodeType":"YulAssignment","src":"2676:41:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:17"},"nodeType":"YulFunctionCall","src":"2695:20:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:17"},"nodeType":"YulFunctionCall","src":"2689:27:17"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:17"},"nodeType":"YulFunctionCall","src":"2681:36:17"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3597,"isOffset":false,"isSlot":false,"src":"2578:1:17","valueSize":1},{"declaration":3600,"isOffset":false,"isSlot":false,"src":"2627:1:17","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"2593:9:17","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"2642:9:17","valueSize":1},{"declaration":3582,"isOffset":false,"isSlot":false,"src":"2699:9:17","valueSize":1},{"declaration":3603,"isOffset":false,"isSlot":false,"src":"2676:1:17","valueSize":1}],"flags":["memory-safe"],"id":3605,"nodeType":"InlineAssembly","src":"2535:196:17"},{"expression":{"arguments":[{"id":3607,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2762:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"2768:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"2771:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3610,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"2774:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3606,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3630,3710,3818],"referencedDeclaration":3818,"src":"2751:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3591,"id":3612,"nodeType":"Return","src":"2744:32:17"}]}}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"857:1267:17","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3630,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:17","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"hash","nameLocation":"2166:4:17","nodeType":"VariableDeclaration","scope":3630,"src":"2158:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"signature","nameLocation":"2193:9:17","nodeType":"VariableDeclaration","scope":3630,"src":"2180:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3581,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:17"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3585,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:17","nodeType":"VariableDeclaration","scope":3630,"src":"2232:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3584,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"err","nameLocation":"2264:3:17","nodeType":"VariableDeclaration","scope":3630,"src":"2251:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3587,"nodeType":"UserDefinedTypeName","pathNode":{"id":3586,"name":"RecoverError","nameLocations":["2251:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"2251:12:17"},"referencedDeclaration":3564,"src":"2251:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3590,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:17","nodeType":"VariableDeclaration","scope":3630,"src":"2269:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:17"},"scope":3904,"src":"2129:778:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3659,"nodeType":"Block","src":"3801:168:17","statements":[{"assignments":[3641,3644,3646],"declarations":[{"constant":false,"id":3641,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:17","nodeType":"VariableDeclaration","scope":3659,"src":"3812:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3640,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"error","nameLocation":"3844:5:17","nodeType":"VariableDeclaration","scope":3659,"src":"3831:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3643,"nodeType":"UserDefinedTypeName","pathNode":{"id":3642,"name":"RecoverError","nameLocations":["3831:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"3831:12:17"},"referencedDeclaration":3564,"src":"3831:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:17","nodeType":"VariableDeclaration","scope":3659,"src":"3851:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3651,"initialValue":{"arguments":[{"id":3648,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"3882:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3649,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3888:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3647,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3630,3710,3818],"referencedDeclaration":3630,"src":"3871:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:17"},{"expression":{"arguments":[{"id":3653,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"3920:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"id":3654,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"3927:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3652,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"3908:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3564_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3656,"nodeType":"ExpressionStatement","src":"3908:28:17"},{"expression":{"id":3657,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3953:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3639,"id":3658,"nodeType":"Return","src":"3946:16:17"}]},"documentation":{"id":3631,"nodeType":"StructuredDocumentation","src":"2913:796:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3660,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:17","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"hash","nameLocation":"3739:4:17","nodeType":"VariableDeclaration","scope":3660,"src":"3731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"signature","nameLocation":"3758:9:17","nodeType":"VariableDeclaration","scope":3660,"src":"3745:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3634,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:17"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3660,"src":"3792:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3637,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:17"},"scope":3904,"src":"3714:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3709,"nodeType":"Block","src":"4348:342:17","statements":[{"id":3708,"nodeType":"UncheckedBlock","src":"4358:326:17","statements":[{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"s","nameLocation":"4390:1:17","nodeType":"VariableDeclaration","scope":3708,"src":"4382:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3685,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"4394:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:17","typeDescriptions":{}}},"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:17"},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"v","nameLocation":"4591:1:17","nodeType":"VariableDeclaration","scope":3708,"src":"4585:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3686,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3700,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3692,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3667,"src":"4610:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:17","typeDescriptions":{}}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3688,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:17","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:17"},{"expression":{"arguments":[{"id":3702,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"4659:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3703,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"4665:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3704,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3665,"src":"4668:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3705,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"4671:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3701,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3630,3710,3818],"referencedDeclaration":3818,"src":"4648:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3676,"id":3707,"nodeType":"Return","src":"4641:32:17"}]}]},"documentation":{"id":3661,"nodeType":"StructuredDocumentation","src":"3975:205:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3710,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:17","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"hash","nameLocation":"4222:4:17","nodeType":"VariableDeclaration","scope":3710,"src":"4214:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3665,"mutability":"mutable","name":"r","nameLocation":"4244:1:17","nodeType":"VariableDeclaration","scope":3710,"src":"4236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3667,"mutability":"mutable","name":"vs","nameLocation":"4263:2:17","nodeType":"VariableDeclaration","scope":3710,"src":"4255:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:17"},"returnParameters":{"id":3676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:17","nodeType":"VariableDeclaration","scope":3710,"src":"4295:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3669,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"err","nameLocation":"4327:3:17","nodeType":"VariableDeclaration","scope":3710,"src":"4314:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3672,"nodeType":"UserDefinedTypeName","pathNode":{"id":3671,"name":"RecoverError","nameLocations":["4314:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"4314:12:17"},"referencedDeclaration":3564,"src":"4314:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:17","nodeType":"VariableDeclaration","scope":3710,"src":"4332:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:17"},"scope":3904,"src":"4185:505:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"4903:164:17","statements":[{"assignments":[3723,3726,3728],"declarations":[{"constant":false,"id":3723,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:17","nodeType":"VariableDeclaration","scope":3742,"src":"4914:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3726,"mutability":"mutable","name":"error","nameLocation":"4946:5:17","nodeType":"VariableDeclaration","scope":3742,"src":"4933:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3725,"nodeType":"UserDefinedTypeName","pathNode":{"id":3724,"name":"RecoverError","nameLocations":["4933:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"4933:12:17"},"referencedDeclaration":3564,"src":"4933:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:17","nodeType":"VariableDeclaration","scope":3742,"src":"4953:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3734,"initialValue":{"arguments":[{"id":3730,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"4984:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3731,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"4990:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3732,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"4993:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3729,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3630,3710,3818],"referencedDeclaration":3710,"src":"4973:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:17"},{"expression":{"arguments":[{"id":3736,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"5018:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"id":3737,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"5025:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3735,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"5006:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3564_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3739,"nodeType":"ExpressionStatement","src":"5006:28:17"},{"expression":{"id":3740,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"5051:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3721,"id":3741,"nodeType":"Return","src":"5044:16:17"}]},"documentation":{"id":3711,"nodeType":"StructuredDocumentation","src":"4696:116:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:17","nodeType":"FunctionDefinition","parameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"hash","nameLocation":"4842:4:17","nodeType":"VariableDeclaration","scope":3743,"src":"4834:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3715,"mutability":"mutable","name":"r","nameLocation":"4856:1:17","nodeType":"VariableDeclaration","scope":3743,"src":"4848:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3717,"mutability":"mutable","name":"vs","nameLocation":"4867:2:17","nodeType":"VariableDeclaration","scope":3743,"src":"4859:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:17"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3743,"src":"4894:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3719,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:17"},"scope":3904,"src":"4817:250:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"5382:1372:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3764,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"6278:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:17","typeDescriptions":{}}},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"6266:164:17","trueBody":{"id":3777,"nodeType":"Block","src":"6351:79:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:17","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3772,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"6385:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3563,"src":"6385:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"id":3774,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"6417:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3761,"id":3776,"nodeType":"Return","src":"6365:54:17"}]}},{"assignments":[3780],"declarations":[{"constant":false,"id":3780,"mutability":"mutable","name":"signer","nameLocation":"6532:6:17","nodeType":"VariableDeclaration","scope":3817,"src":"6524:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3779,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3787,"initialValue":{"arguments":[{"id":3782,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"6551:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3783,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3748,"src":"6557:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"6560:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3785,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"6563:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3781,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"6579:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:17","typeDescriptions":{}}},"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3807,"nodeType":"IfStatement","src":"6575:113:17","trueBody":{"id":3806,"nodeType":"Block","src":"6601:87:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3794,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:17","typeDescriptions":{}}},"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3798,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"6635:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"6635:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:17","typeDescriptions":{}}},"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3761,"id":3805,"nodeType":"Return","src":"6615:62:17"}]}},{"expression":{"components":[{"id":3808,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"6706:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3809,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"6714:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3560,"src":"6714:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:17","typeDescriptions":{}}},"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3761,"id":3816,"nodeType":"Return","src":"6698:49:17"}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"5073:125:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:17","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"hash","nameLocation":"5240:4:17","nodeType":"VariableDeclaration","scope":3818,"src":"5232:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3748,"mutability":"mutable","name":"v","nameLocation":"5260:1:17","nodeType":"VariableDeclaration","scope":3818,"src":"5254:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3747,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"r","nameLocation":"5279:1:17","nodeType":"VariableDeclaration","scope":3818,"src":"5271:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3752,"mutability":"mutable","name":"s","nameLocation":"5298:1:17","nodeType":"VariableDeclaration","scope":3818,"src":"5290:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:17"},"returnParameters":{"id":3761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:17","nodeType":"VariableDeclaration","scope":3818,"src":"5329:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3754,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3758,"mutability":"mutable","name":"err","nameLocation":"5361:3:17","nodeType":"VariableDeclaration","scope":3818,"src":"5348:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3757,"nodeType":"UserDefinedTypeName","pathNode":{"id":3756,"name":"RecoverError","nameLocations":["5348:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"5348:12:17"},"referencedDeclaration":3564,"src":"5348:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3760,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:17","nodeType":"VariableDeclaration","scope":3818,"src":"5366:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:17"},"scope":3904,"src":"5203:1551:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"6981:166:17","statements":[{"assignments":[3833,3836,3838],"declarations":[{"constant":false,"id":3833,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:17","nodeType":"VariableDeclaration","scope":3853,"src":"6992:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3832,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"error","nameLocation":"7024:5:17","nodeType":"VariableDeclaration","scope":3853,"src":"7011:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3835,"nodeType":"UserDefinedTypeName","pathNode":{"id":3834,"name":"RecoverError","nameLocations":["7011:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"7011:12:17"},"referencedDeclaration":3564,"src":"7011:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:17","nodeType":"VariableDeclaration","scope":3853,"src":"7031:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3845,"initialValue":{"arguments":[{"id":3840,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"7062:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3841,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"7068:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3842,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"7071:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3843,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"7074:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3839,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3630,3710,3818],"referencedDeclaration":3818,"src":"7051:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:17"},{"expression":{"arguments":[{"id":3847,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"7098:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},{"id":3848,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"7105:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3846,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"7086:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3564_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3850,"nodeType":"ExpressionStatement","src":"7086:28:17"},{"expression":{"id":3851,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"7131:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3831,"id":3852,"nodeType":"Return","src":"7124:16:17"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"6760:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:17","nodeType":"FunctionDefinition","parameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"hash","nameLocation":"6912:4:17","nodeType":"VariableDeclaration","scope":3854,"src":"6904:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"v","nameLocation":"6924:1:17","nodeType":"VariableDeclaration","scope":3854,"src":"6918:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3822,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3825,"mutability":"mutable","name":"r","nameLocation":"6935:1:17","nodeType":"VariableDeclaration","scope":3854,"src":"6927:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3827,"mutability":"mutable","name":"s","nameLocation":"6946:1:17","nodeType":"VariableDeclaration","scope":3854,"src":"6938:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:17"},"returnParameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3854,"src":"6972:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3829,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:17"},"scope":3904,"src":"6887:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3902,"nodeType":"Block","src":"7352:460:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3863,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"7366:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3864,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7375:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3560,"src":"7375:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3869,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"7462:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3870,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7471:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3561,"src":"7471:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3877,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"7567:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3878,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7576:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3562,"src":"7576:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3889,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3858,"src":"7701:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3890,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"7710:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3563,"src":"7710:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3898,"nodeType":"IfStatement","src":"7697:109:17","trueBody":{"id":3897,"nodeType":"Block","src":"7742:64:17","statements":[{"errorCall":{"arguments":[{"id":3894,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"7786:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3893,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"7763:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3896,"nodeType":"RevertStatement","src":"7756:39:17"}]}},"id":3899,"nodeType":"IfStatement","src":"7563:243:17","trueBody":{"id":3888,"nodeType":"Block","src":"7613:78:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3884,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3860,"src":"7670:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:17","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3881,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"7634:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"RevertStatement","src":"7627:53:17"}]}},"id":3900,"nodeType":"IfStatement","src":"7458:348:17","trueBody":{"id":3876,"nodeType":"Block","src":"7502:55:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3873,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"7523:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3875,"nodeType":"RevertStatement","src":"7516:30:17"}]}},"id":3901,"nodeType":"IfStatement","src":"7362:444:17","trueBody":{"id":3868,"nodeType":"Block","src":"7397:55:17","statements":[{"functionReturnParameters":3862,"id":3867,"nodeType":"Return","src":"7411:7:17"}]}}]},"documentation":{"id":3855,"nodeType":"StructuredDocumentation","src":"7153:122:17","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3903,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:17","nodeType":"FunctionDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3858,"mutability":"mutable","name":"error","nameLocation":"7314:5:17","nodeType":"VariableDeclaration","scope":3903,"src":"7301:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3857,"nodeType":"UserDefinedTypeName","pathNode":{"id":3856,"name":"RecoverError","nameLocations":["7301:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3564,"src":"7301:12:17"},"referencedDeclaration":3564,"src":"7301:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3860,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:17","nodeType":"VariableDeclaration","scope":3903,"src":"7321:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:17"},"returnParameters":{"id":3862,"nodeType":"ParameterList","parameters":[],"src":"7352:0:17"},"scope":3904,"src":"7280:532:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3905,"src":"344:7470:17","usedErrors":[3567,3572,3577],"usedEvents":[]}],"src":"112:7703:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4131],"IERC5267":[403],"MessageHashUtils":[4217],"ShortString":[1819],"ShortStrings":[2030]},"id":4132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3906,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3908,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":4218,"src":"139:56:18","symbolAliases":[{"foreign":{"id":3907,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"147:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":2031,"src":"196:62:18","symbolAliases":[{"foreign":{"id":3909,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2030,"src":"204:12:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3910,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"218:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4132,"sourceUnit":404,"src":"259:55:18","symbolAliases":[{"foreign":{"id":3912,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"267:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3915,"name":"IERC5267","nameLocations":["1988:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":403,"src":"1988:8:18"},"id":3916,"nodeType":"InheritanceSpecifier","src":"1988:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3914,"nodeType":"StructuredDocumentation","src":"316:1643:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4131,"linearizedBaseContracts":[4131,403],"name":"EIP712","nameLocation":"1978:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3918,"libraryName":{"id":3917,"name":"ShortStrings","nameLocations":["2009:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2030,"src":"2009:12:18"},"nodeType":"UsingForDirective","src":"2003:25:18"},{"constant":true,"id":3923,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:18","nodeType":"VariableDeclaration","scope":4131,"src":"2034:140:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3920,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3925,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:18","nodeType":"VariableDeclaration","scope":4131,"src":"2373:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3927,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:18","nodeType":"VariableDeclaration","scope":4131,"src":"2427:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3929,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:18","nodeType":"VariableDeclaration","scope":4131,"src":"2473:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3928,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3931,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:18","nodeType":"VariableDeclaration","scope":4131,"src":"2517:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3933,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:18","nodeType":"VariableDeclaration","scope":4131,"src":"2560:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3936,"mutability":"immutable","name":"_name","nameLocation":"2637:5:18","nodeType":"VariableDeclaration","scope":4131,"src":"2607:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":3935,"nodeType":"UserDefinedTypeName","pathNode":{"id":3934,"name":"ShortString","nameLocations":["2607:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"2607:11:18"},"referencedDeclaration":1819,"src":"2607:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3939,"mutability":"immutable","name":"_version","nameLocation":"2678:8:18","nodeType":"VariableDeclaration","scope":4131,"src":"2648:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"},"typeName":{"id":3938,"nodeType":"UserDefinedTypeName","pathNode":{"id":3937,"name":"ShortString","nameLocations":["2648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":1819,"src":"2648:11:18"},"referencedDeclaration":1819,"src":"2648:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3941,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:18","nodeType":"VariableDeclaration","scope":4131,"src":"2742:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3940,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3943,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:18","nodeType":"VariableDeclaration","scope":4131,"src":"2826:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3942,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4000,"nodeType":"Block","src":"3483:376:18","statements":[{"expression":{"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3951,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"3493:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3954,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"3532:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3952,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"3501:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1971,"src":"3501:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1819_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"src":"3493:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"id":3957,"nodeType":"ExpressionStatement","src":"3493:53:18"},{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3958,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"3556:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3961,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"3601:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3959,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"3567:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1971,"src":"3567:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1819_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"src":"3556:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"id":3964,"nodeType":"ExpressionStatement","src":"3556:62:18"},{"expression":{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"3628:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3969,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"3658:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3967,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:18","typeDescriptions":{}}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3973,"nodeType":"ExpressionStatement","src":"3628:36:18"},{"expression":{"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3974,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"3674:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3978,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"3707:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3976,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:18","typeDescriptions":{}}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3975,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3982,"nodeType":"ExpressionStatement","src":"3674:42:18"},{"expression":{"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"3727:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3984,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3987,"nodeType":"ExpressionStatement","src":"3727:30:18"},{"expression":{"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3988,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"3767:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3989,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"3792:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3992,"nodeType":"ExpressionStatement","src":"3767:48:18"},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"3825:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3996,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}],"id":3995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3994,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:18","typeDescriptions":{}}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3999,"nodeType":"ExpressionStatement","src":"3825:27:18"}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"2864:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4001,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"name","nameLocation":"3454:4:18","nodeType":"VariableDeclaration","scope":4001,"src":"3440:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3945,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"version","nameLocation":"3474:7:18","nodeType":"VariableDeclaration","scope":4001,"src":"3460:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3947,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:18"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[],"src":"3483:0:18"},"scope":4131,"src":"3428:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"4007:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4009,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}],"id":4008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4007,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:18","typeDescriptions":{}}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4011,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"4038:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4013,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4015,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"4070:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4024,"nodeType":"Block","src":"4146:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4021,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"4167:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4006,"id":4023,"nodeType":"Return","src":"4160:30:18"}]},"id":4025,"nodeType":"IfStatement","src":"4017:184:18","trueBody":{"id":4020,"nodeType":"Block","src":"4086:54:18","statements":[{"expression":{"id":4018,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"4107:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4006,"id":4019,"nodeType":"Return","src":"4100:29:18"}]}}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"3865:75:18","text":" @dev Returns the domain separator for the current chain."},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:18","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[],"src":"3972:2:18"},"returnParameters":{"id":4006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4027,"src":"3998:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4004,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:18"},"scope":4131,"src":"3945:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"4277:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":4035,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"4315:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4036,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"4326:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4037,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"4339:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4038,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4042,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}],"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:18","typeDescriptions":{}}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4033,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4032,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4031,"id":4046,"nodeType":"Return","src":"4287:98:18"}]},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:18","nodeType":"FunctionDefinition","parameters":{"id":4028,"nodeType":"ParameterList","parameters":[],"src":"4243:2:18"},"returnParameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4048,"src":"4268:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4029,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:18"},"scope":4131,"src":"4213:179:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4063,"nodeType":"Block","src":"5103:90:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4058,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"5153:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4060,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"5175:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4056,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"5120:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4217_$","typeString":"type(library MessageHashUtils)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4216,"src":"5120:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4055,"id":4062,"nodeType":"Return","src":"5113:73:18"}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"4398:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:18","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:18","nodeType":"VariableDeclaration","scope":4064,"src":"5043:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:18"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4064,"src":"5094:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4053,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:18"},"scope":4131,"src":"5017:176:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[402],"body":{"id":4105,"nodeType":"Block","src":"5571:229:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4084,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5632:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4086,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"5659:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4088,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4092,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4131","typeString":"contract EIP712"}],"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4090,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:18","typeDescriptions":{}}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:18","typeDescriptions":{}}},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4099,"nodeType":"ArrayTypeName","src":"5771:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4082,"id":4104,"nodeType":"Return","src":"5581:212:18"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"5199:39:18","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4106,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:18","nodeType":"FunctionDefinition","parameters":{"id":4066,"nodeType":"ParameterList","parameters":[],"src":"5264:2:18"},"returnParameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"fields","nameLocation":"5348:6:18","nodeType":"VariableDeclaration","scope":4106,"src":"5341:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4067,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"name","nameLocation":"5382:4:18","nodeType":"VariableDeclaration","scope":4106,"src":"5368:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4069,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"version","nameLocation":"5414:7:18","nodeType":"VariableDeclaration","scope":4106,"src":"5400:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4071,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4074,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:18","nodeType":"VariableDeclaration","scope":4106,"src":"5435:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:18","nodeType":"VariableDeclaration","scope":4106,"src":"5464:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4075,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4078,"mutability":"mutable","name":"salt","nameLocation":"5511:4:18","nodeType":"VariableDeclaration","scope":4106,"src":"5503:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4077,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4081,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:18","nodeType":"VariableDeclaration","scope":4106,"src":"5529:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4079,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ArrayTypeName","src":"5529:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:18"},"scope":4131,"src":"5243:557:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4117,"nodeType":"Block","src":"6181:65:18","statements":[{"expression":{"arguments":[{"id":4114,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"6225:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4112,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3936,"src":"6198:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1998,"src":"6198:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1819_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4111,"id":4116,"nodeType":"Return","src":"6191:48:18"}]},"documentation":{"id":4107,"nodeType":"StructuredDocumentation","src":"5806:256:18","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4118,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:18","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[],"src":"6140:2:18"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4118,"src":"6166:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4109,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:18"},"scope":4131,"src":"6120:126:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4129,"nodeType":"Block","src":"6636:71:18","statements":[{"expression":{"arguments":[{"id":4126,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6683:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4124,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"6653:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1819","typeString":"ShortString"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":1998,"src":"6653:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1819_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1819_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4123,"id":4128,"nodeType":"Return","src":"6646:54:18"}]},"documentation":{"id":4119,"nodeType":"StructuredDocumentation","src":"6252:262:18","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4130,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:18","nodeType":"FunctionDefinition","parameters":{"id":4120,"nodeType":"ParameterList","parameters":[],"src":"6595:2:18"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4130,"src":"6621:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4121,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:18"},"scope":4131,"src":"6572:135:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4132,"src":"1960:4749:18","usedErrors":[1827,1829],"usedEvents":[383]}],"src":"113:6597:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4217],"Strings":[3556]},"id":4218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4133,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4218,"sourceUnit":3557,"src":"149:39:19","symbolAliases":[{"foreign":{"id":4134,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"157:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4136,"nodeType":"StructuredDocumentation","src":"190:330:19","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4217,"linearizedBaseContracts":[4217],"name":"MessageHashUtils","nameLocation":"529:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":4145,"nodeType":"Block","src":"1339:341:19","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:19"},"nodeType":"YulFunctionCall","src":"1388:48:19"},"nodeType":"YulExpressionStatement","src":"1388:48:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:19","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:19"},"nodeType":"YulFunctionCall","src":"1490:25:19"},"nodeType":"YulExpressionStatement","src":"1490:25:19"},{"nodeType":"YulAssignment","src":"1569:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:19"},"nodeType":"YulFunctionCall","src":"1579:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4142,"isOffset":false,"isSlot":false,"src":"1569:6:19","valueSize":1},{"declaration":4139,"isOffset":false,"isSlot":false,"src":"1503:11:19","valueSize":1}],"flags":["memory-safe"],"id":4144,"nodeType":"InlineAssembly","src":"1349:325:19"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"552:690:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:19","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:19","nodeType":"VariableDeclaration","scope":4146,"src":"1279:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:19"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"digest","nameLocation":"1331:6:19","nodeType":"VariableDeclaration","scope":4146,"src":"1323:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:19"},"scope":4217,"src":"1247:433:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4171,"nodeType":"Block","src":"2257:143:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4163,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"2366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:19","memberName":"length","nodeType":"MemberAccess","src":"2366:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4161,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"2349:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3556_$","typeString":"type(library Strings)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2268,"src":"2349:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4159,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:19","typeDescriptions":{}}},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4167,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"2384:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4155,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:19","typeDescriptions":{}}},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4154,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4153,"id":4170,"nodeType":"Return","src":"2267:126:19"}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"1686:480:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4172,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:19","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"message","nameLocation":"2216:7:19","nodeType":"VariableDeclaration","scope":4172,"src":"2203:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4148,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:19"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4172,"src":"2248:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:19"},"scope":4217,"src":"2171:229:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4191,"nodeType":"Block","src":"2854:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4186,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4175,"src":"2910:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4187,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"2921:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4183,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4182,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4181,"id":4190,"nodeType":"Return","src":"2864:63:19"}]},"documentation":{"id":4173,"nodeType":"StructuredDocumentation","src":"2406:332:19","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:19","nodeType":"FunctionDefinition","parameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"validator","nameLocation":"2792:9:19","nodeType":"VariableDeclaration","scope":4192,"src":"2784:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4174,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"data","nameLocation":"2816:4:19","nodeType":"VariableDeclaration","scope":4192,"src":"2803:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4176,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:19"},"returnParameters":{"id":4181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4192,"src":"2845:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:19"},"scope":4217,"src":"2743:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4203,"nodeType":"Block","src":"3216:216:19","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:19","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:19","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:19"},"nodeType":"YulFunctionCall","src":"3265:24:19"},"nodeType":"YulExpressionStatement","src":"3265:24:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:19","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:19","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:19"},"nodeType":"YulFunctionCall","src":"3315:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:19"},"nodeType":"YulFunctionCall","src":"3302:32:19"},"nodeType":"YulExpressionStatement","src":"3302:32:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:19","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:19"},"nodeType":"YulFunctionCall","src":"3347:25:19"},"nodeType":"YulExpressionStatement","src":"3347:25:19"},{"nodeType":"YulAssignment","src":"3385:31:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:19","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:19","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:19"},"nodeType":"YulFunctionCall","src":"3395:21:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4200,"isOffset":false,"isSlot":false,"src":"3385:6:19","valueSize":1},{"declaration":4197,"isOffset":false,"isSlot":false,"src":"3360:11:19","valueSize":1},{"declaration":4195,"isOffset":false,"isSlot":false,"src":"3323:9:19","valueSize":1}],"flags":["memory-safe"],"id":4202,"nodeType":"InlineAssembly","src":"3226:200:19"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"2940:129:19","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4204,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:19","nodeType":"FunctionDefinition","parameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"validator","nameLocation":"3132:9:19","nodeType":"VariableDeclaration","scope":4204,"src":"3124:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4194,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4197,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:19","nodeType":"VariableDeclaration","scope":4204,"src":"3151:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:19"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"digest","nameLocation":"3208:6:19","nodeType":"VariableDeclaration","scope":4204,"src":"3200:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:19"},"scope":4217,"src":"3074:358:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4215,"nodeType":"Block","src":"3983:265:19","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:19"},"nodeType":"YulFunctionCall","src":"4043:11:19"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:19"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:19"},"nodeType":"YulFunctionCall","src":"4067:23:19"},"nodeType":"YulExpressionStatement","src":"4067:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:19"},"nodeType":"YulFunctionCall","src":"4110:14:19"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:19"},"nodeType":"YulFunctionCall","src":"4103:39:19"},"nodeType":"YulExpressionStatement","src":"4103:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:19"},"nodeType":"YulFunctionCall","src":"4162:14:19"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:19"},"nodeType":"YulFunctionCall","src":"4155:34:19"},"nodeType":"YulExpressionStatement","src":"4155:34:19"},{"nodeType":"YulAssignment","src":"4202:30:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:19"},"nodeType":"YulFunctionCall","src":"4212:20:19"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4212,"isOffset":false,"isSlot":false,"src":"4202:6:19","valueSize":1},{"declaration":4207,"isOffset":false,"isSlot":false,"src":"4126:15:19","valueSize":1},{"declaration":4209,"isOffset":false,"isSlot":false,"src":"4178:10:19","valueSize":1}],"flags":["memory-safe"],"id":4214,"nodeType":"InlineAssembly","src":"3993:249:19"}]},"documentation":{"id":4205,"nodeType":"StructuredDocumentation","src":"3438:431:19","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4216,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:19","nodeType":"FunctionDefinition","parameters":{"id":4210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4207,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:19","nodeType":"VariableDeclaration","scope":4216,"src":"3899:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4209,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:19","nodeType":"VariableDeclaration","scope":4216,"src":"3924:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:19"},"returnParameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"digest","nameLocation":"3975:6:19","nodeType":"VariableDeclaration","scope":4216,"src":"3967:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:19"},"scope":4217,"src":"3874:374:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4218,"src":"521:3729:19","usedErrors":[],"usedEvents":[]}],"src":"123:4128:19"},"id":19},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4241],"IERC165":[4253]},"id":4242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4219,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4242,"sourceUnit":4254,"src":"140:38:20","symbolAliases":[{"foreign":{"id":4220,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"148:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4223,"name":"IERC165","nameLocations":["688:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":4253,"src":"688:7:20"},"id":4224,"nodeType":"InheritanceSpecifier","src":"688:7:20"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4222,"nodeType":"StructuredDocumentation","src":"180:479:20","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4241,"linearizedBaseContracts":[4241,4253],"name":"ERC165","nameLocation":"678:6:20","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4252],"body":{"id":4239,"nodeType":"Block","src":"845:64:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4232,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"862:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4234,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"882:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4253_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4253_$","typeString":"type(contract IERC165)"}],"id":4233,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4253","typeString":"type(contract IERC165)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:20","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4231,"id":4238,"nodeType":"Return","src":"855:47:20"}]},"documentation":{"id":4225,"nodeType":"StructuredDocumentation","src":"702:56:20","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":4240,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:20","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:20","nodeType":"VariableDeclaration","scope":4240,"src":"790:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4226,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:20"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4240,"src":"839:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4229,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:20"},"scope":4241,"src":"763:146:20","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4242,"src":"660:251:20","usedErrors":[],"usedEvents":[]}],"src":"114:798:20"},"id":20},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4253]},"id":4254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4243,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4244,"nodeType":"StructuredDocumentation","src":"141:280:21","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4253,"linearizedBaseContracts":[4253],"name":"IERC165","nameLocation":"432:7:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"446:340:21","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4252,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:21","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:21","nodeType":"VariableDeclaration","scope":4252,"src":"818:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4246,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:21"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4252,"src":"861:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4249,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:21"},"scope":4253,"src":"791:76:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4254,"src":"422:447:21","usedErrors":[],"usedEvents":[]}],"src":"115:755:21"},"id":21},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5874],"Panic":[1813],"SafeCast":[7639]},"id":5875,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4255,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5875,"sourceUnit":1814,"src":"129:35:22","symbolAliases":[{"foreign":{"id":4256,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"137:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5875,"sourceUnit":7640,"src":"165:40:22","symbolAliases":[{"foreign":{"id":4258,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4260,"nodeType":"StructuredDocumentation","src":"207:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5874,"linearizedBaseContracts":[5874],"name":"Math","nameLocation":"289:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4265,"members":[{"id":4261,"name":"Floor","nameLocation":"324:5:22","nodeType":"EnumValue","src":"324:5:22"},{"id":4262,"name":"Ceil","nameLocation":"367:4:22","nodeType":"EnumValue","src":"367:4:22"},{"id":4263,"name":"Trunc","nameLocation":"409:5:22","nodeType":"EnumValue","src":"409:5:22"},{"id":4264,"name":"Expand","nameLocation":"439:6:22","nodeType":"EnumValue","src":"439:6:22"}],"name":"Rounding","nameLocation":"305:8:22","nodeType":"EnumDefinition","src":"300:169:22"},{"body":{"id":4278,"nodeType":"Block","src":"731:112:22","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:22","statements":[{"nodeType":"YulAssignment","src":"780:16:22","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:22"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:22"},"nodeType":"YulFunctionCall","src":"787:9:22"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:22"}]},{"nodeType":"YulAssignment","src":"809:18:22","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:22"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:22"},"nodeType":"YulFunctionCall","src":"817:10:22"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4268,"isOffset":false,"isSlot":false,"src":"791:1:22","valueSize":1},{"declaration":4268,"isOffset":false,"isSlot":false,"src":"825:1:22","valueSize":1},{"declaration":4270,"isOffset":false,"isSlot":false,"src":"794:1:22","valueSize":1},{"declaration":4273,"isOffset":false,"isSlot":false,"src":"809:4:22","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"780:3:22","valueSize":1},{"declaration":4275,"isOffset":false,"isSlot":false,"src":"820:3:22","valueSize":1}],"flags":["memory-safe"],"id":4277,"nodeType":"InlineAssembly","src":"741:96:22"}]},"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"475:163:22","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:22","nodeType":"FunctionDefinition","parameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"a","nameLocation":"667:1:22","nodeType":"VariableDeclaration","scope":4279,"src":"659:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4270,"mutability":"mutable","name":"b","nameLocation":"678:1:22","nodeType":"VariableDeclaration","scope":4279,"src":"670:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:22"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"high","nameLocation":"712:4:22","nodeType":"VariableDeclaration","scope":4279,"src":"704:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4272,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4275,"mutability":"mutable","name":"low","nameLocation":"726:3:22","nodeType":"VariableDeclaration","scope":4279,"src":"718:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4274,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:22"},"scope":5874,"src":"643:200:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4292,"nodeType":"Block","src":"1115:462:22","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:22","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:22"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:22"},"nodeType":"YulFunctionCall","src":"1474:6:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:22"},"nodeType":"YulFunctionCall","src":"1461:20:22"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:22","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:22","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:22"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:22"},"nodeType":"YulFunctionCall","src":"1501:9:22"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:22"}]},{"nodeType":"YulAssignment","src":"1523:38:22","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:22"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:22"},"nodeType":"YulFunctionCall","src":"1535:12:22"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:22"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:22"},"nodeType":"YulFunctionCall","src":"1549:11:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:22"},"nodeType":"YulFunctionCall","src":"1531:30:22"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4282,"isOffset":false,"isSlot":false,"src":"1468:1:22","valueSize":1},{"declaration":4282,"isOffset":false,"isSlot":false,"src":"1505:1:22","valueSize":1},{"declaration":4284,"isOffset":false,"isSlot":false,"src":"1471:1:22","valueSize":1},{"declaration":4284,"isOffset":false,"isSlot":false,"src":"1508:1:22","valueSize":1},{"declaration":4287,"isOffset":false,"isSlot":false,"src":"1523:4:22","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"1494:3:22","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"1543:3:22","valueSize":1},{"declaration":4289,"isOffset":false,"isSlot":false,"src":"1556:3:22","valueSize":1}],"flags":["memory-safe"],"id":4291,"nodeType":"InlineAssembly","src":"1412:159:22"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"849:173:22","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4293,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:22","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"a","nameLocation":"1051:1:22","nodeType":"VariableDeclaration","scope":4293,"src":"1043:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"b","nameLocation":"1062:1:22","nodeType":"VariableDeclaration","scope":4293,"src":"1054:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:22"},"returnParameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"high","nameLocation":"1096:4:22","nodeType":"VariableDeclaration","scope":4293,"src":"1088:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4289,"mutability":"mutable","name":"low","nameLocation":"1110:3:22","nodeType":"VariableDeclaration","scope":4293,"src":"1102:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:22"},"scope":5874,"src":"1027:550:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4327,"nodeType":"Block","src":"1784:149:22","statements":[{"id":4326,"nodeType":"UncheckedBlock","src":"1794:133:22","statements":[{"assignments":[4306],"declarations":[{"constant":false,"id":4306,"mutability":"mutable","name":"c","nameLocation":"1826:1:22","nodeType":"VariableDeclaration","scope":4326,"src":"1818:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4310,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"1830:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4308,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"1834:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:22"},{"expression":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"1849:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"1859:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4296,"src":"1864:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4316,"nodeType":"ExpressionStatement","src":"1849:16:22"},{"expression":{"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"1879:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"1888:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4321,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"1908:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4319,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"1892:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"1892:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4325,"nodeType":"ExpressionStatement","src":"1879:37:22"}]}]},"documentation":{"id":4294,"nodeType":"StructuredDocumentation","src":"1583:105:22","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4328,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:22","nodeType":"FunctionDefinition","parameters":{"id":4299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"a","nameLocation":"1717:1:22","nodeType":"VariableDeclaration","scope":4328,"src":"1709:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4298,"mutability":"mutable","name":"b","nameLocation":"1728:1:22","nodeType":"VariableDeclaration","scope":4328,"src":"1720:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:22"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"success","nameLocation":"1759:7:22","nodeType":"VariableDeclaration","scope":4328,"src":"1754:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4300,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4303,"mutability":"mutable","name":"result","nameLocation":"1776:6:22","nodeType":"VariableDeclaration","scope":4328,"src":"1768:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:22"},"scope":5874,"src":"1693:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4362,"nodeType":"Block","src":"2143:149:22","statements":[{"id":4361,"nodeType":"UncheckedBlock","src":"2153:133:22","statements":[{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"c","nameLocation":"2185:1:22","nodeType":"VariableDeclaration","scope":4361,"src":"2177:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4345,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"2189:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"2193:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:22"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"2208:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"2218:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4348,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"2223:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4351,"nodeType":"ExpressionStatement","src":"2208:16:22"},{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4338,"src":"2238:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4353,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"2247:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"2267:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4354,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"2251:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"2251:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"2238:37:22"}]}]},"documentation":{"id":4329,"nodeType":"StructuredDocumentation","src":"1939:108:22","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:22","nodeType":"FunctionDefinition","parameters":{"id":4334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"a","nameLocation":"2076:1:22","nodeType":"VariableDeclaration","scope":4363,"src":"2068:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4333,"mutability":"mutable","name":"b","nameLocation":"2087:1:22","nodeType":"VariableDeclaration","scope":4363,"src":"2079:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:22"},"returnParameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4336,"mutability":"mutable","name":"success","nameLocation":"2118:7:22","nodeType":"VariableDeclaration","scope":4363,"src":"2113:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4335,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4338,"mutability":"mutable","name":"result","nameLocation":"2135:6:22","nodeType":"VariableDeclaration","scope":4363,"src":"2127:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:22"},"scope":5874,"src":"2052:240:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4392,"nodeType":"Block","src":"2505:391:22","statements":[{"id":4391,"nodeType":"UncheckedBlock","src":"2515:375:22","statements":[{"assignments":[4376],"declarations":[{"constant":false,"id":4376,"mutability":"mutable","name":"c","nameLocation":"2547:1:22","nodeType":"VariableDeclaration","scope":4391,"src":"2539:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4380,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4377,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"2551:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4378,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"2555:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:22"},{"AST":{"nodeType":"YulBlock","src":"2595:188:22","statements":[{"nodeType":"YulAssignment","src":"2727:42:22","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:22"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:22"},"nodeType":"YulFunctionCall","src":"2744:9:22"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:22"},"nodeType":"YulFunctionCall","src":"2741:16:22"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:22"},"nodeType":"YulFunctionCall","src":"2759:9:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:22"},"nodeType":"YulFunctionCall","src":"2738:31:22"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4366,"isOffset":false,"isSlot":false,"src":"2751:1:22","valueSize":1},{"declaration":4366,"isOffset":false,"isSlot":false,"src":"2766:1:22","valueSize":1},{"declaration":4368,"isOffset":false,"isSlot":false,"src":"2755:1:22","valueSize":1},{"declaration":4376,"isOffset":false,"isSlot":false,"src":"2748:1:22","valueSize":1},{"declaration":4371,"isOffset":false,"isSlot":false,"src":"2727:7:22","valueSize":1}],"flags":["memory-safe"],"id":4381,"nodeType":"InlineAssembly","src":"2570:213:22"},{"expression":{"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2842:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"2851:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4386,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"2871:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4384,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"2855:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"2855:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4390,"nodeType":"ExpressionStatement","src":"2842:37:22"}]}]},"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"2298:111:22","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4393,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:22","nodeType":"FunctionDefinition","parameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"a","nameLocation":"2438:1:22","nodeType":"VariableDeclaration","scope":4393,"src":"2430:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"b","nameLocation":"2449:1:22","nodeType":"VariableDeclaration","scope":4393,"src":"2441:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:22"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4371,"mutability":"mutable","name":"success","nameLocation":"2480:7:22","nodeType":"VariableDeclaration","scope":4393,"src":"2475:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4370,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"result","nameLocation":"2497:6:22","nodeType":"VariableDeclaration","scope":4393,"src":"2489:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:22"},"scope":5874,"src":"2414:482:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"3111:231:22","statements":[{"id":4412,"nodeType":"UncheckedBlock","src":"3121:215:22","statements":[{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4405,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"3145:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"3155:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"nodeType":"ExpressionStatement","src":"3145:15:22"},{"AST":{"nodeType":"YulBlock","src":"3199:127:22","statements":[{"nodeType":"YulAssignment","src":"3293:19:22","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:22"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:22"},"nodeType":"YulFunctionCall","src":"3303:9:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4396,"isOffset":false,"isSlot":false,"src":"3307:1:22","valueSize":1},{"declaration":4398,"isOffset":false,"isSlot":false,"src":"3310:1:22","valueSize":1},{"declaration":4403,"isOffset":false,"isSlot":false,"src":"3293:6:22","valueSize":1}],"flags":["memory-safe"],"id":4411,"nodeType":"InlineAssembly","src":"3174:152:22"}]}]},"documentation":{"id":4394,"nodeType":"StructuredDocumentation","src":"2902:113:22","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:22","nodeType":"FunctionDefinition","parameters":{"id":4399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4396,"mutability":"mutable","name":"a","nameLocation":"3044:1:22","nodeType":"VariableDeclaration","scope":4414,"src":"3036:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4398,"mutability":"mutable","name":"b","nameLocation":"3055:1:22","nodeType":"VariableDeclaration","scope":4414,"src":"3047:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:22"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"success","nameLocation":"3086:7:22","nodeType":"VariableDeclaration","scope":4414,"src":"3081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4400,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"result","nameLocation":"3103:6:22","nodeType":"VariableDeclaration","scope":4414,"src":"3095:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:22"},"scope":5874,"src":"3020:322:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4434,"nodeType":"Block","src":"3567:231:22","statements":[{"id":4433,"nodeType":"UncheckedBlock","src":"3577:215:22","statements":[{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4426,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"3601:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3611:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4431,"nodeType":"ExpressionStatement","src":"3601:15:22"},{"AST":{"nodeType":"YulBlock","src":"3655:127:22","statements":[{"nodeType":"YulAssignment","src":"3749:19:22","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:22"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:22"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:22"},"nodeType":"YulFunctionCall","src":"3759:9:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4417,"isOffset":false,"isSlot":false,"src":"3763:1:22","valueSize":1},{"declaration":4419,"isOffset":false,"isSlot":false,"src":"3766:1:22","valueSize":1},{"declaration":4424,"isOffset":false,"isSlot":false,"src":"3749:6:22","valueSize":1}],"flags":["memory-safe"],"id":4432,"nodeType":"InlineAssembly","src":"3630:152:22"}]}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"3348:123:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4435,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:22","nodeType":"FunctionDefinition","parameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"a","nameLocation":"3500:1:22","nodeType":"VariableDeclaration","scope":4435,"src":"3492:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"b","nameLocation":"3511:1:22","nodeType":"VariableDeclaration","scope":4435,"src":"3503:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:22"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4422,"mutability":"mutable","name":"success","nameLocation":"3542:7:22","nodeType":"VariableDeclaration","scope":4435,"src":"3537:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4421,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4424,"mutability":"mutable","name":"result","nameLocation":"3559:6:22","nodeType":"VariableDeclaration","scope":4435,"src":"3551:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:22"},"scope":5874,"src":"3476:322:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4464,"nodeType":"Block","src":"3989:122:22","statements":[{"assignments":[4446,4448],"declarations":[{"constant":false,"id":4446,"mutability":"mutable","name":"success","nameLocation":"4005:7:22","nodeType":"VariableDeclaration","scope":4464,"src":"4000:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4445,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4448,"mutability":"mutable","name":"result","nameLocation":"4022:6:22","nodeType":"VariableDeclaration","scope":4464,"src":"4014:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4453,"initialValue":{"arguments":[{"id":4450,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"4039:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4440,"src":"4042:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4449,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"4032:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:22"},{"expression":{"arguments":[{"id":4455,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4446,"src":"4069:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4456,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"4078:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4457,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:22","memberName":"max","nodeType":"MemberAccess","src":"4086:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4454,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"4061:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4444,"id":4463,"nodeType":"Return","src":"4054:50:22"}]},"documentation":{"id":4436,"nodeType":"StructuredDocumentation","src":"3804:103:22","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4465,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:22","nodeType":"FunctionDefinition","parameters":{"id":4441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"a","nameLocation":"3943:1:22","nodeType":"VariableDeclaration","scope":4465,"src":"3935:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4440,"mutability":"mutable","name":"b","nameLocation":"3954:1:22","nodeType":"VariableDeclaration","scope":4465,"src":"3946:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4439,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:22"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4465,"src":"3980:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:22"},"scope":5874,"src":"3912:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4484,"nodeType":"Block","src":"4294:73:22","statements":[{"assignments":[null,4476],"declarations":[null,{"constant":false,"id":4476,"mutability":"mutable","name":"result","nameLocation":"4315:6:22","nodeType":"VariableDeclaration","scope":4484,"src":"4307:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4475,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4481,"initialValue":{"arguments":[{"id":4478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"4332:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"4335:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4477,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4325:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:22"},{"expression":{"id":4482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"4354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4474,"id":4483,"nodeType":"Return","src":"4347:13:22"}]},"documentation":{"id":4466,"nodeType":"StructuredDocumentation","src":"4117:95:22","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4485,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:22","nodeType":"FunctionDefinition","parameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"a","nameLocation":"4248:1:22","nodeType":"VariableDeclaration","scope":4485,"src":"4240:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"b","nameLocation":"4259:1:22","nodeType":"VariableDeclaration","scope":4485,"src":"4251:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:22"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4485,"src":"4285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:22"},"scope":5874,"src":"4217:150:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4514,"nodeType":"Block","src":"4564:122:22","statements":[{"assignments":[4496,4498],"declarations":[{"constant":false,"id":4496,"mutability":"mutable","name":"success","nameLocation":"4580:7:22","nodeType":"VariableDeclaration","scope":4514,"src":"4575:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4495,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4498,"mutability":"mutable","name":"result","nameLocation":"4597:6:22","nodeType":"VariableDeclaration","scope":4514,"src":"4589:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4503,"initialValue":{"arguments":[{"id":4500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"4614:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4501,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"4617:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4499,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4393,"src":"4607:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:22"},{"expression":{"arguments":[{"id":4505,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"4644:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4653:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4508,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4507,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:22","memberName":"max","nodeType":"MemberAccess","src":"4661:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4504,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"4636:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4494,"id":4513,"nodeType":"Return","src":"4629:50:22"}]},"documentation":{"id":4486,"nodeType":"StructuredDocumentation","src":"4373:109:22","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:22","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"a","nameLocation":"4518:1:22","nodeType":"VariableDeclaration","scope":4515,"src":"4510:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4490,"mutability":"mutable","name":"b","nameLocation":"4529:1:22","nodeType":"VariableDeclaration","scope":4515,"src":"4521:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:22"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"4555:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:22"},"scope":5874,"src":"4487:199:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4541,"nodeType":"Block","src":"5158:207:22","statements":[{"id":4540,"nodeType":"UncheckedBlock","src":"5168:191:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4527,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"5306:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4528,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4520,"src":"5312:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"5316:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4534,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"5337:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"5321:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"5321:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4526,"id":4539,"nodeType":"Return","src":"5299:49:22"}]}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"4692:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4542,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:22","nodeType":"FunctionDefinition","parameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4518,"mutability":"mutable","name":"condition","nameLocation":"5093:9:22","nodeType":"VariableDeclaration","scope":4542,"src":"5088:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4517,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4520,"mutability":"mutable","name":"a","nameLocation":"5112:1:22","nodeType":"VariableDeclaration","scope":4542,"src":"5104:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4519,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4522,"mutability":"mutable","name":"b","nameLocation":"5123:1:22","nodeType":"VariableDeclaration","scope":4542,"src":"5115:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:22"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4542,"src":"5149:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:22"},"scope":5874,"src":"5071:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"5502:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4553,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"5527:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4554,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"5531:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4545,"src":"5534:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"5537:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4552,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"5519:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4551,"id":4559,"nodeType":"Return","src":"5512:27:22"}]},"documentation":{"id":4543,"nodeType":"StructuredDocumentation","src":"5371:59:22","text":" @dev Returns the largest of two numbers."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:22","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"a","nameLocation":"5456:1:22","nodeType":"VariableDeclaration","scope":4561,"src":"5448:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"b","nameLocation":"5467:1:22","nodeType":"VariableDeclaration","scope":4561,"src":"5459:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:22"},"returnParameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"5493:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:22"},"scope":5874,"src":"5435:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4579,"nodeType":"Block","src":"5684:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4572,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"5709:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"5713:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"5716:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"5719:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4571,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"5701:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4570,"id":4578,"nodeType":"Return","src":"5694:27:22"}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"5552:60:22","text":" @dev Returns the smallest of two numbers."},"id":4580,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:22","nodeType":"FunctionDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"a","nameLocation":"5638:1:22","nodeType":"VariableDeclaration","scope":4580,"src":"5630:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"b","nameLocation":"5649:1:22","nodeType":"VariableDeclaration","scope":4580,"src":"5641:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:22"},"returnParameters":{"id":4570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4580,"src":"5675:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4568,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:22"},"scope":5874,"src":"5617:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4602,"nodeType":"Block","src":"5912:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"5967:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"5971:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"5977:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4595,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"5981:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4589,"id":4601,"nodeType":"Return","src":"5959:28:22"}]},"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"5734:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4603,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:22","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4583,"mutability":"mutable","name":"a","nameLocation":"5866:1:22","nodeType":"VariableDeclaration","scope":4603,"src":"5858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4585,"mutability":"mutable","name":"b","nameLocation":"5877:1:22","nodeType":"VariableDeclaration","scope":4603,"src":"5869:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:22"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4603,"src":"5903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:22"},"scope":5874,"src":"5841:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4643,"nodeType":"Block","src":"6286:633:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4613,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"6300:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4624,"nodeType":"IfStatement","src":"6296:150:22","trueBody":{"id":4623,"nodeType":"Block","src":"6308:138:22","statements":[{"expression":{"arguments":[{"expression":{"id":4619,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"6412:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"6412:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4616,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"6400:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"6400:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4622,"nodeType":"ExpressionStatement","src":"6400:35:22"}]}},{"id":4642,"nodeType":"UncheckedBlock","src":"6829:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"6876:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4625,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"6860:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"6860:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4631,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"6887:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4634,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4635,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"6896:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4612,"id":4641,"nodeType":"Return","src":"6853:49:22"}]}]},"documentation":{"id":4604,"nodeType":"StructuredDocumentation","src":"6000:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4644,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:22","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"a","nameLocation":"6240:1:22","nodeType":"VariableDeclaration","scope":4644,"src":"6232:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4605,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"b","nameLocation":"6251:1:22","nodeType":"VariableDeclaration","scope":4644,"src":"6243:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:22"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4644,"src":"6277:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:22"},"scope":5874,"src":"6215:704:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4779,"nodeType":"Block","src":"7340:3585:22","statements":[{"id":4778,"nodeType":"UncheckedBlock","src":"7350:3569:22","statements":[{"assignments":[4657,4659],"declarations":[{"constant":false,"id":4657,"mutability":"mutable","name":"high","nameLocation":"7383:4:22","nodeType":"VariableDeclaration","scope":4778,"src":"7375:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4659,"mutability":"mutable","name":"low","nameLocation":"7397:3:22","nodeType":"VariableDeclaration","scope":4778,"src":"7389:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4664,"initialValue":{"arguments":[{"id":4661,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"7411:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4662,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"7414:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4660,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"7404:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4665,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"7498:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4673,"nodeType":"IfStatement","src":"7494:365:22","trueBody":{"id":4672,"nodeType":"Block","src":"7509:350:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4668,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"7827:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4669,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"7833:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4655,"id":4671,"nodeType":"Return","src":"7820:24:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"7969:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4675,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"7984:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4692,"nodeType":"IfStatement","src":"7965:142:22","trueBody":{"id":4691,"nodeType":"Block","src":"7990:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"8028:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4684,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"8046:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"8046:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4686,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"8070:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1776,"src":"8070:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4680,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"8020:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4677,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"8008:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"8008:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4690,"nodeType":"ExpressionStatement","src":"8008:84:22"}]}},{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:22","nodeType":"VariableDeclaration","scope":4778,"src":"8359:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4695,"nodeType":"VariableDeclarationStatement","src":"8359:17:22"},{"AST":{"nodeType":"YulBlock","src":"8415:283:22","statements":[{"nodeType":"YulAssignment","src":"8484:38:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:22"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:22"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:22"},"nodeType":"YulFunctionCall","src":"8497:25:22"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:22"}]},{"nodeType":"YulAssignment","src":"8604:37:22","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:22"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:22"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:22"},"nodeType":"YulFunctionCall","src":"8622:18:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:22"},"nodeType":"YulFunctionCall","src":"8612:29:22"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:22"}]},{"nodeType":"YulAssignment","src":"8658:26:22","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:22"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:22"},"nodeType":"YulFunctionCall","src":"8665:19:22"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4651,"isOffset":false,"isSlot":false,"src":"8510:11:22","valueSize":1},{"declaration":4657,"isOffset":false,"isSlot":false,"src":"8604:4:22","valueSize":1},{"declaration":4657,"isOffset":false,"isSlot":false,"src":"8616:4:22","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"8636:3:22","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"8658:3:22","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"8669:3:22","valueSize":1},{"declaration":4694,"isOffset":false,"isSlot":false,"src":"8484:9:22","valueSize":1},{"declaration":4694,"isOffset":false,"isSlot":false,"src":"8625:9:22","valueSize":1},{"declaration":4694,"isOffset":false,"isSlot":false,"src":"8674:9:22","valueSize":1},{"declaration":4647,"isOffset":false,"isSlot":false,"src":"8504:1:22","valueSize":1},{"declaration":4649,"isOffset":false,"isSlot":false,"src":"8507:1:22","valueSize":1}],"flags":["memory-safe"],"id":4696,"nodeType":"InlineAssembly","src":"8390:308:22"},{"assignments":[4698],"declarations":[{"constant":false,"id":4698,"mutability":"mutable","name":"twos","nameLocation":"8910:4:22","nodeType":"VariableDeclaration","scope":4778,"src":"8902:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4705,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4699,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"8917:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4701,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"8936:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4703,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:22"},{"AST":{"nodeType":"YulBlock","src":"8987:359:22","statements":[{"nodeType":"YulAssignment","src":"9052:37:22","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:22"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:22"},"nodeType":"YulFunctionCall","src":"9067:22:22"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:22"}]},{"nodeType":"YulAssignment","src":"9153:21:22","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:22"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:22"},"nodeType":"YulFunctionCall","src":"9160:14:22"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:22"}]},{"nodeType":"YulAssignment","src":"9293:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:22","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:22"},"nodeType":"YulFunctionCall","src":"9309:12:22"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:22"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:22"},"nodeType":"YulFunctionCall","src":"9305:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:22"},"nodeType":"YulFunctionCall","src":"9301:31:22"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9052:11:22","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"9071:11:22","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"9153:3:22","valueSize":1},{"declaration":4659,"isOffset":false,"isSlot":false,"src":"9164:3:22","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"9084:4:22","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"9169:4:22","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"9293:4:22","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"9316:4:22","valueSize":1},{"declaration":4698,"isOffset":false,"isSlot":false,"src":"9323:4:22","valueSize":1}],"flags":["memory-safe"],"id":4706,"nodeType":"InlineAssembly","src":"8962:384:22"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"9409:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"9416:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4709,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"9423:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"9409:18:22"},{"assignments":[4714],"declarations":[{"constant":false,"id":4714,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:22","nodeType":"VariableDeclaration","scope":4778,"src":"9762:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4721,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4716,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"9785:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:22"},{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4722,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10018:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4724,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"10033:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4725,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10047:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"10018:36:22"},{"expression":{"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10088:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"10103:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4733,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10117:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4737,"nodeType":"ExpressionStatement","src":"10088:36:22"},{"expression":{"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4738,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10160:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"10175:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4741,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10189:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4745,"nodeType":"ExpressionStatement","src":"10160:36:22"},{"expression":{"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4746,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10231:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4748,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"10246:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4749,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10260:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4753,"nodeType":"ExpressionStatement","src":"10231:36:22"},{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4754,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10304:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"10319:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4757,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10333:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"10304:36:22"},{"expression":{"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4762,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4764,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"10393:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4765,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10407:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4769,"nodeType":"ExpressionStatement","src":"10378:36:22"},{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4770,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"10859:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4771,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"10868:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4772,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"10874:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"nodeType":"ExpressionStatement","src":"10859:22:22"},{"expression":{"id":4776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"10902:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4655,"id":4777,"nodeType":"Return","src":"10895:13:22"}]}]},"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"6925:312:22","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4780,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:22","nodeType":"FunctionDefinition","parameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"x","nameLocation":"7266:1:22","nodeType":"VariableDeclaration","scope":4780,"src":"7258:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"y","nameLocation":"7277:1:22","nodeType":"VariableDeclaration","scope":4780,"src":"7269:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:22","nodeType":"VariableDeclaration","scope":4780,"src":"7280:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:22"},"returnParameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"result","nameLocation":"7332:6:22","nodeType":"VariableDeclaration","scope":4780,"src":"7324:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:22"},"scope":5874,"src":"7242:3683:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4816,"nodeType":"Block","src":"11164:128:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11188:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4797,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"11191:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4798,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"11194:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4795,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4780,4817],"referencedDeclaration":4780,"src":"11181:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4803,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"11242:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":4802,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"11225:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4265_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4806,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"11262:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4807,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"11265:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4808,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"11268:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4805,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4800,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"11209:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"11209:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4794,"id":4815,"nodeType":"Return","src":"11174:111:22"}]},"documentation":{"id":4781,"nodeType":"StructuredDocumentation","src":"10931:118:22","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4817,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:22","nodeType":"FunctionDefinition","parameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4783,"mutability":"mutable","name":"x","nameLocation":"11078:1:22","nodeType":"VariableDeclaration","scope":4817,"src":"11070:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"mutable","name":"y","nameLocation":"11089:1:22","nodeType":"VariableDeclaration","scope":4817,"src":"11081:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4787,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:22","nodeType":"VariableDeclaration","scope":4817,"src":"11092:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:22","nodeType":"VariableDeclaration","scope":4817,"src":"11113:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":4789,"nodeType":"UserDefinedTypeName","pathNode":{"id":4788,"name":"Rounding","nameLocations":["11113:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"11113:8:22"},"referencedDeclaration":4265,"src":"11113:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:22"},"returnParameters":{"id":4794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"11155:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:22"},"scope":5874,"src":"11054:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4866,"nodeType":"Block","src":"11500:245:22","statements":[{"id":4865,"nodeType":"UncheckedBlock","src":"11510:229:22","statements":[{"assignments":[4830,4832],"declarations":[{"constant":false,"id":4830,"mutability":"mutable","name":"high","nameLocation":"11543:4:22","nodeType":"VariableDeclaration","scope":4865,"src":"11535:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4829,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"low","nameLocation":"11557:3:22","nodeType":"VariableDeclaration","scope":4865,"src":"11549:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4837,"initialValue":{"arguments":[{"id":4834,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"11571:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4835,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"11574:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4833,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"11564:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4838,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"11594:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4840,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"11607:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4851,"nodeType":"IfStatement","src":"11590:86:22","trueBody":{"id":4850,"nodeType":"Block","src":"11610:66:22","statements":[{"expression":{"arguments":[{"expression":{"id":4846,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"11640:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1776,"src":"11640:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4843,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"11628:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"11628:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4849,"nodeType":"ExpressionStatement","src":"11628:33:22"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"11697:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4854,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"11712:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"11719:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4860,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"11726:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4828,"id":4864,"nodeType":"Return","src":"11689:39:22"}]}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"11298:111:22","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4867,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:22","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"x","nameLocation":"11438:1:22","nodeType":"VariableDeclaration","scope":4867,"src":"11430:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4822,"mutability":"mutable","name":"y","nameLocation":"11449:1:22","nodeType":"VariableDeclaration","scope":4867,"src":"11441:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4824,"mutability":"mutable","name":"n","nameLocation":"11458:1:22","nodeType":"VariableDeclaration","scope":4867,"src":"11452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4823,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:22"},"returnParameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"result","nameLocation":"11492:6:22","nodeType":"VariableDeclaration","scope":4867,"src":"11484:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4826,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:22"},"scope":5874,"src":"11414:331:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4905,"nodeType":"Block","src":"11963:113:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4883,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"11987:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4884,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"11990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4885,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"11993:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4882,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4867,4906],"referencedDeclaration":4867,"src":"11980:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4890,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4877,"src":"12031:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":4889,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"12014:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4265_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4893,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"12051:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4894,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"12054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4896,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"12062:1:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4892,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4887,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"11998:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"11998:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4881,"id":4904,"nodeType":"Return","src":"11973:96:22"}]},"documentation":{"id":4868,"nodeType":"StructuredDocumentation","src":"11751:109:22","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4906,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:22","nodeType":"FunctionDefinition","parameters":{"id":4878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"x","nameLocation":"11889:1:22","nodeType":"VariableDeclaration","scope":4906,"src":"11881:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4872,"mutability":"mutable","name":"y","nameLocation":"11900:1:22","nodeType":"VariableDeclaration","scope":4906,"src":"11892:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"n","nameLocation":"11909:1:22","nodeType":"VariableDeclaration","scope":4906,"src":"11903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4873,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4877,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:22","nodeType":"VariableDeclaration","scope":4906,"src":"11912:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":4876,"nodeType":"UserDefinedTypeName","pathNode":{"id":4875,"name":"Rounding","nameLocations":["11912:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"11912:8:22"},"referencedDeclaration":4265,"src":"11912:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:22"},"returnParameters":{"id":4881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4906,"src":"11954:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4879,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:22"},"scope":5874,"src":"11865:211:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5002,"nodeType":"Block","src":"12710:1849:22","statements":[{"id":5001,"nodeType":"UncheckedBlock","src":"12720:1833:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4916,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"12748:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4921,"nodeType":"IfStatement","src":"12744:20:22","trueBody":{"expression":{"hexValue":"30","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4915,"id":4920,"nodeType":"Return","src":"12756:8:22"}},{"assignments":[4923],"declarations":[{"constant":false,"id":4923,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:22","nodeType":"VariableDeclaration","scope":5001,"src":"13235:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4927,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4909,"src":"13255:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4925,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"13259:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:22"},{"assignments":[4929],"declarations":[{"constant":false,"id":4929,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:22","nodeType":"VariableDeclaration","scope":5001,"src":"13274:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4928,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4931,"initialValue":{"id":4930,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"13288:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:22"},{"assignments":[4933],"declarations":[{"constant":false,"id":4933,"mutability":"mutable","name":"x","nameLocation":"13432:1:22","nodeType":"VariableDeclaration","scope":5001,"src":"13425:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4932,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4935,"initialValue":{"hexValue":"30","id":4934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:22"},{"assignments":[4937],"declarations":[{"constant":false,"id":4937,"mutability":"mutable","name":"y","nameLocation":"13458:1:22","nodeType":"VariableDeclaration","scope":5001,"src":"13451:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4936,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4939,"initialValue":{"hexValue":"31","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:22"},{"body":{"id":4976,"nodeType":"Block","src":"13501:882:22","statements":[{"assignments":[4944],"declarations":[{"constant":false,"id":4944,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:22","nodeType":"VariableDeclaration","scope":4976,"src":"13519:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4948,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"13538:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4946,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"13544:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:22"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4949,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"13573:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4950,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"13578:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4951,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4952,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"13678:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4953,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"13923:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"13929:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4955,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"13941:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4960,"nodeType":"ExpressionStatement","src":"13572:395:22"},{"expression":{"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4961,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"13987:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4962,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"13990:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4963,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4964,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"14072:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"14326:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4966,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"14330:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4969,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"14341:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4967,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:22","typeDescriptions":{}}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4975,"nodeType":"ExpressionStatement","src":"13986:382:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"13485:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4977,"nodeType":"WhileStatement","src":"13478:905:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"14401:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4983,"nodeType":"IfStatement","src":"14397:22:22","trueBody":{"expression":{"hexValue":"30","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4915,"id":4982,"nodeType":"Return","src":"14411:8:22"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4985,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"14470:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4988,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4911,"src":"14477:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:22","subExpression":{"id":4991,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"14490:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:22","typeDescriptions":{}}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4997,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"14502:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:22","typeDescriptions":{}}},"id":4998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4984,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"14462:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4915,"id":5000,"nodeType":"Return","src":"14455:50:22"}]}]},"documentation":{"id":4907,"nodeType":"StructuredDocumentation","src":"12082:553:22","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5003,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:22","nodeType":"FunctionDefinition","parameters":{"id":4912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4909,"mutability":"mutable","name":"a","nameLocation":"12664:1:22","nodeType":"VariableDeclaration","scope":5003,"src":"12656:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4911,"mutability":"mutable","name":"n","nameLocation":"12675:1:22","nodeType":"VariableDeclaration","scope":5003,"src":"12667:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4910,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:22"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5003,"src":"12701:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4913,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:22"},"scope":5874,"src":"12640:1919:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5023,"nodeType":"Block","src":"15159:82:22","statements":[{"id":5022,"nodeType":"UncheckedBlock","src":"15169:66:22","statements":[{"expression":{"arguments":[{"id":5015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5006,"src":"15212:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5016,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"15215:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5019,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"15222:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5013,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"15200:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5874_$","typeString":"type(library Math)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:22","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5060,"src":"15200:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5012,"id":5021,"nodeType":"Return","src":"15193:31:22"}]}]},"documentation":{"id":5004,"nodeType":"StructuredDocumentation","src":"14565:514:22","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5024,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:22","nodeType":"FunctionDefinition","parameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5006,"mutability":"mutable","name":"a","nameLocation":"15113:1:22","nodeType":"VariableDeclaration","scope":5024,"src":"15105:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5005,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5008,"mutability":"mutable","name":"p","nameLocation":"15124:1:22","nodeType":"VariableDeclaration","scope":5024,"src":"15116:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5007,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:22"},"returnParameters":{"id":5012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5024,"src":"15150:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:22"},"scope":5874,"src":"15084:157:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5059,"nodeType":"Block","src":"16011:174:22","statements":[{"assignments":[5037,5039],"declarations":[{"constant":false,"id":5037,"mutability":"mutable","name":"success","nameLocation":"16027:7:22","nodeType":"VariableDeclaration","scope":5059,"src":"16022:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5036,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5039,"mutability":"mutable","name":"result","nameLocation":"16044:6:22","nodeType":"VariableDeclaration","scope":5059,"src":"16036:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5045,"initialValue":{"arguments":[{"id":5041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"16064:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5042,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"16067:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5043,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"16070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5040,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5084,5166],"referencedDeclaration":5084,"src":"16054:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:22"},{"condition":{"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:22","subExpression":{"id":5046,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5037,"src":"16087:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5056,"nodeType":"IfStatement","src":"16082:74:22","trueBody":{"id":5055,"nodeType":"Block","src":"16096:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5051,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"16122:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"16122:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5048,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"16110:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"16110:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5054,"nodeType":"ExpressionStatement","src":"16110:35:22"}]}},{"expression":{"id":5057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"16172:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5035,"id":5058,"nodeType":"Return","src":"16165:13:22"}]},"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"15247:678:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:22","nodeType":"FunctionDefinition","parameters":{"id":5032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"b","nameLocation":"15954:1:22","nodeType":"VariableDeclaration","scope":5060,"src":"15946:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5026,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"e","nameLocation":"15965:1:22","nodeType":"VariableDeclaration","scope":5060,"src":"15957:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5028,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5031,"mutability":"mutable","name":"m","nameLocation":"15976:1:22","nodeType":"VariableDeclaration","scope":5060,"src":"15968:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5030,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:22"},"returnParameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5060,"src":"16002:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:22"},"scope":5874,"src":"15930:255:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5083,"nodeType":"Block","src":"17039:1493:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"17053:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5081,"nodeType":"IfStatement","src":"17049:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5073,"id":5080,"nodeType":"Return","src":"17061:17:22"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:22","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:22"},"nodeType":"YulFunctionCall","src":"17138:11:22"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:22"},"nodeType":"YulFunctionCall","src":"18050:17:22"},"nodeType":"YulExpressionStatement","src":"18050:17:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:22"},"nodeType":"YulFunctionCall","src":"18087:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:22"},"nodeType":"YulFunctionCall","src":"18080:28:22"},"nodeType":"YulExpressionStatement","src":"18080:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:22"},"nodeType":"YulFunctionCall","src":"18128:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:22"},"nodeType":"YulFunctionCall","src":"18121:28:22"},"nodeType":"YulExpressionStatement","src":"18121:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:22"},"nodeType":"YulFunctionCall","src":"18169:14:22"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:22"},"nodeType":"YulFunctionCall","src":"18162:25:22"},"nodeType":"YulExpressionStatement","src":"18162:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:22"},"nodeType":"YulFunctionCall","src":"18207:14:22"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:22"},"nodeType":"YulFunctionCall","src":"18200:25:22"},"nodeType":"YulExpressionStatement","src":"18200:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:22"},"nodeType":"YulFunctionCall","src":"18245:14:22"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:22"},"nodeType":"YulFunctionCall","src":"18238:25:22"},"nodeType":"YulExpressionStatement","src":"18238:25:22"},{"nodeType":"YulAssignment","src":"18425:57:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:22"},"nodeType":"YulFunctionCall","src":"18447:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:22","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:22","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:22","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:22"},"nodeType":"YulFunctionCall","src":"18436:46:22"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:22"}]},{"nodeType":"YulAssignment","src":"18495:21:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:22"},"nodeType":"YulFunctionCall","src":"18505:11:22"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5063,"isOffset":false,"isSlot":false,"src":"18185:1:22","valueSize":1},{"declaration":5065,"isOffset":false,"isSlot":false,"src":"18223:1:22","valueSize":1},{"declaration":5067,"isOffset":false,"isSlot":false,"src":"18261:1:22","valueSize":1},{"declaration":5072,"isOffset":false,"isSlot":false,"src":"18495:6:22","valueSize":1},{"declaration":5070,"isOffset":false,"isSlot":false,"src":"18425:7:22","valueSize":1}],"flags":["memory-safe"],"id":5082,"nodeType":"InlineAssembly","src":"17088:1438:22"}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"16191:738:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5084,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:22","nodeType":"FunctionDefinition","parameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"b","nameLocation":"16961:1:22","nodeType":"VariableDeclaration","scope":5084,"src":"16953:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5065,"mutability":"mutable","name":"e","nameLocation":"16972:1:22","nodeType":"VariableDeclaration","scope":5084,"src":"16964:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5064,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5067,"mutability":"mutable","name":"m","nameLocation":"16983:1:22","nodeType":"VariableDeclaration","scope":5084,"src":"16975:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:22"},"returnParameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"success","nameLocation":"17014:7:22","nodeType":"VariableDeclaration","scope":5084,"src":"17009:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5069,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5072,"mutability":"mutable","name":"result","nameLocation":"17031:6:22","nodeType":"VariableDeclaration","scope":5084,"src":"17023:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:22"},"scope":5874,"src":"16934:1598:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5119,"nodeType":"Block","src":"18729:179:22","statements":[{"assignments":[5097,5099],"declarations":[{"constant":false,"id":5097,"mutability":"mutable","name":"success","nameLocation":"18745:7:22","nodeType":"VariableDeclaration","scope":5119,"src":"18740:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5096,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5099,"mutability":"mutable","name":"result","nameLocation":"18767:6:22","nodeType":"VariableDeclaration","scope":5119,"src":"18754:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5098,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5105,"initialValue":{"arguments":[{"id":5101,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5087,"src":"18787:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5102,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"18790:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5103,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5091,"src":"18793:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5100,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5084,5166],"referencedDeclaration":5166,"src":"18777:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:22"},{"condition":{"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:22","subExpression":{"id":5106,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"18810:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5116,"nodeType":"IfStatement","src":"18805:74:22","trueBody":{"id":5115,"nodeType":"Block","src":"18819:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":5111,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"18845:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"18845:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5108,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"18833:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1813_$","typeString":"type(library Panic)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1812,"src":"18833:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5114,"nodeType":"ExpressionStatement","src":"18833:35:22"}]}},{"expression":{"id":5117,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5099,"src":"18895:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5095,"id":5118,"nodeType":"Return","src":"18888:13:22"}]},"documentation":{"id":5085,"nodeType":"StructuredDocumentation","src":"18538:85:22","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5120,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:22","nodeType":"FunctionDefinition","parameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"b","nameLocation":"18657:1:22","nodeType":"VariableDeclaration","scope":5120,"src":"18644:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5086,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5089,"mutability":"mutable","name":"e","nameLocation":"18673:1:22","nodeType":"VariableDeclaration","scope":5120,"src":"18660:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5088,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5091,"mutability":"mutable","name":"m","nameLocation":"18689:1:22","nodeType":"VariableDeclaration","scope":5120,"src":"18676:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5090,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:22"},"returnParameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5120,"src":"18715:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5093,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:22"},"scope":5874,"src":"18628:280:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"19162:771:22","statements":[{"condition":{"arguments":[{"id":5135,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"19187:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5134,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"19176:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5144,"nodeType":"IfStatement","src":"19172:47:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5138,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5133,"id":5143,"nodeType":"Return","src":"19191:28:22"}},{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:22","nodeType":"VariableDeclaration","scope":5165,"src":"19230:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5145,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5149,"initialValue":{"expression":{"id":5147,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"19245:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:22","memberName":"length","nodeType":"MemberAccess","src":"19245:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:22"},{"expression":{"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5150,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5132,"src":"19335:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"19361:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:22","memberName":"length","nodeType":"MemberAccess","src":"19361:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5155,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"19371:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:22","memberName":"length","nodeType":"MemberAccess","src":"19371:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5157,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"19381:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5158,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"19387:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5159,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"19390:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5160,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5127,"src":"19393:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5151,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5163,"nodeType":"ExpressionStatement","src":"19335:60:22"},{"AST":{"nodeType":"YulBlock","src":"19431:496:22","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:22","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:22"},"nodeType":"YulFunctionCall","src":"19460:17:22"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:22","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:22"},"nodeType":"YulFunctionCall","src":"19589:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:22","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:22"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:22"},"nodeType":"YulFunctionCall","src":"19611:13:22"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:22"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:22"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:22"},"nodeType":"YulFunctionCall","src":"19578:62:22"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:22"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:22"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:22"},"nodeType":"YulFunctionCall","src":"19789:20:22"},"nodeType":"YulExpressionStatement","src":"19789:20:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:22","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:22"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:22"},"nodeType":"YulFunctionCall","src":"19898:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:22"},"nodeType":"YulFunctionCall","src":"19885:32:22"},"nodeType":"YulExpressionStatement","src":"19885:32:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":5146,"isOffset":false,"isSlot":false,"src":"19635:4:22","valueSize":1},{"declaration":5146,"isOffset":false,"isSlot":false,"src":"19804:4:22","valueSize":1},{"declaration":5146,"isOffset":false,"isSlot":false,"src":"19911:4:22","valueSize":1},{"declaration":5132,"isOffset":false,"isSlot":false,"src":"19464:6:22","valueSize":1},{"declaration":5132,"isOffset":false,"isSlot":false,"src":"19617:6:22","valueSize":1},{"declaration":5132,"isOffset":false,"isSlot":false,"src":"19796:6:22","valueSize":1},{"declaration":5130,"isOffset":false,"isSlot":false,"src":"19567:7:22","valueSize":1}],"flags":["memory-safe"],"id":5164,"nodeType":"InlineAssembly","src":"19406:521:22"}]},"documentation":{"id":5121,"nodeType":"StructuredDocumentation","src":"18914:88:22","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:22","nodeType":"FunctionDefinition","parameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"b","nameLocation":"19048:1:22","nodeType":"VariableDeclaration","scope":5166,"src":"19035:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5122,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5125,"mutability":"mutable","name":"e","nameLocation":"19072:1:22","nodeType":"VariableDeclaration","scope":5166,"src":"19059:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5124,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5127,"mutability":"mutable","name":"m","nameLocation":"19096:1:22","nodeType":"VariableDeclaration","scope":5166,"src":"19083:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5126,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:22"},"returnParameters":{"id":5133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5130,"mutability":"mutable","name":"success","nameLocation":"19132:7:22","nodeType":"VariableDeclaration","scope":5166,"src":"19127:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5129,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5132,"mutability":"mutable","name":"result","nameLocation":"19154:6:22","nodeType":"VariableDeclaration","scope":5166,"src":"19141:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5131,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:22"},"scope":5874,"src":"19007:926:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5198,"nodeType":"Block","src":"20088:176:22","statements":[{"body":{"id":5194,"nodeType":"Block","src":"20145:92:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5185,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"20163:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5187,"indexExpression":{"id":5186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"20173:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5193,"nodeType":"IfStatement","src":"20159:68:22","trueBody":{"id":5192,"nodeType":"Block","src":"20182:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5173,"id":5191,"nodeType":"Return","src":"20200:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"20118:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5179,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"20122:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:22","memberName":"length","nodeType":"MemberAccess","src":"20122:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5195,"initializationExpression":{"assignments":[5175],"declarations":[{"constant":false,"id":5175,"mutability":"mutable","name":"i","nameLocation":"20111:1:22","nodeType":"VariableDeclaration","scope":5195,"src":"20103:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5177,"initialValue":{"hexValue":"30","id":5176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:22"},"loopExpression":{"expression":{"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:22","subExpression":{"id":5182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5175,"src":"20142:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5184,"nodeType":"ExpressionStatement","src":"20140:3:22"},"nodeType":"ForStatement","src":"20098:139:22"},{"expression":{"hexValue":"74727565","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5173,"id":5197,"nodeType":"Return","src":"20246:11:22"}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"19939:72:22","text":" @dev Returns whether the provided byte array is zero."},"id":5199,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:22","nodeType":"FunctionDefinition","parameters":{"id":5170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:22","nodeType":"VariableDeclaration","scope":5199,"src":"20036:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5168,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:22"},"returnParameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5199,"src":"20082:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5171,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:22"},"scope":5874,"src":"20016:248:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5417,"nodeType":"Block","src":"20624:5124:22","statements":[{"id":5416,"nodeType":"UncheckedBlock","src":"20634:5108:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"20728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5213,"nodeType":"IfStatement","src":"20724:53:22","trueBody":{"id":5212,"nodeType":"Block","src":"20736:41:22","statements":[{"expression":{"id":5210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"20761:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5206,"id":5211,"nodeType":"Return","src":"20754:8:22"}]}},{"assignments":[5215],"declarations":[{"constant":false,"id":5215,"mutability":"mutable","name":"aa","nameLocation":"21712:2:22","nodeType":"VariableDeclaration","scope":5416,"src":"21704:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5214,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5217,"initialValue":{"id":5216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"21717:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:22"},{"assignments":[5219],"declarations":[{"constant":false,"id":5219,"mutability":"mutable","name":"xn","nameLocation":"21740:2:22","nodeType":"VariableDeclaration","scope":5416,"src":"21732:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5218,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5221,"initialValue":{"hexValue":"31","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5222,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21765:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5237,"nodeType":"IfStatement","src":"21761:92:22","trueBody":{"id":5236,"nodeType":"Block","src":"21783:70:22","statements":[{"expression":{"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5228,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21801:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5231,"nodeType":"ExpressionStatement","src":"21801:10:22"},{"expression":{"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5232,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"21829:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5235,"nodeType":"ExpressionStatement","src":"21829:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5238,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21870:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5253,"nodeType":"IfStatement","src":"21866:90:22","trueBody":{"id":5252,"nodeType":"Block","src":"21887:69:22","statements":[{"expression":{"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5244,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21905:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5247,"nodeType":"ExpressionStatement","src":"21905:9:22"},{"expression":{"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5248,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"21932:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5251,"nodeType":"ExpressionStatement","src":"21932:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5254,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"21973:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5269,"nodeType":"IfStatement","src":"21969:90:22","trueBody":{"id":5268,"nodeType":"Block","src":"21990:69:22","statements":[{"expression":{"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5260,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22008:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5263,"nodeType":"ExpressionStatement","src":"22008:9:22"},{"expression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5264,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22035:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5267,"nodeType":"ExpressionStatement","src":"22035:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5270,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22076:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5285,"nodeType":"IfStatement","src":"22072:89:22","trueBody":{"id":5284,"nodeType":"Block","src":"22093:68:22","statements":[{"expression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5276,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22111:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5279,"nodeType":"ExpressionStatement","src":"22111:9:22"},{"expression":{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5280,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22138:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5283,"nodeType":"ExpressionStatement","src":"22138:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22178:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5301,"nodeType":"IfStatement","src":"22174:87:22","trueBody":{"id":5300,"nodeType":"Block","src":"22194:67:22","statements":[{"expression":{"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5292,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22212:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5295,"nodeType":"ExpressionStatement","src":"22212:8:22"},{"expression":{"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22238:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5299,"nodeType":"ExpressionStatement","src":"22238:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5302,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22278:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5317,"nodeType":"IfStatement","src":"22274:87:22","trueBody":{"id":5316,"nodeType":"Block","src":"22294:67:22","statements":[{"expression":{"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5308,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22312:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5311,"nodeType":"ExpressionStatement","src":"22312:8:22"},{"expression":{"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22338:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5315,"nodeType":"ExpressionStatement","src":"22338:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"22378:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5329,"nodeType":"IfStatement","src":"22374:61:22","trueBody":{"id":5328,"nodeType":"Block","src":"22394:41:22","statements":[{"expression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5324,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22412:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5327,"nodeType":"ExpressionStatement","src":"22412:8:22"}]}},{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5330,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22855:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5332,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"22865:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5334,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5338,"nodeType":"ExpressionStatement","src":"22855:18:22"},{"expression":{"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5339,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24760:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5340,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24766:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"24771:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24775:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5349,"nodeType":"ExpressionStatement","src":"24760:23:22"},{"expression":{"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5350,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24869:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24875:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"24880:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24884:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5360,"nodeType":"ExpressionStatement","src":"24869:23:22"},{"expression":{"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5361,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24980:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5362,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24986:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5363,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"24991:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"24995:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5371,"nodeType":"ExpressionStatement","src":"24980:23:22"},{"expression":{"id":5381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5372,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25089:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5373,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25095:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"25100:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25104:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5382,"nodeType":"ExpressionStatement","src":"25089:23:22"},{"expression":{"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5383,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25199:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5384,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25205:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"25210:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5386,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25214:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5393,"nodeType":"ExpressionStatement","src":"25199:23:22"},{"expression":{"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25309:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5395,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25315:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5396,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"25320:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5397,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25324:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5404,"nodeType":"ExpressionStatement","src":"25309:23:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5405,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25698:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25719:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"25724:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"25728:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5406,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"25703:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"25703:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5206,"id":5415,"nodeType":"Return","src":"25691:40:22"}]}]},"documentation":{"id":5200,"nodeType":"StructuredDocumentation","src":"20270:292:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:22","nodeType":"FunctionDefinition","parameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5202,"mutability":"mutable","name":"a","nameLocation":"20589:1:22","nodeType":"VariableDeclaration","scope":5418,"src":"20581:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5201,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:22"},"returnParameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5418,"src":"20615:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:22"},"scope":5874,"src":"20567:5181:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5451,"nodeType":"Block","src":"25921:171:22","statements":[{"id":5450,"nodeType":"UncheckedBlock","src":"25931:155:22","statements":[{"assignments":[5430],"declarations":[{"constant":false,"id":5430,"mutability":"mutable","name":"result","nameLocation":"25963:6:22","nodeType":"VariableDeclaration","scope":5450,"src":"25955:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5434,"initialValue":{"arguments":[{"id":5432,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"25977:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5431,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5418,5452],"referencedDeclaration":5418,"src":"25972:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"26000:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5439,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5424,"src":"26042:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":5438,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"26025:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4265_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"26055:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"26064:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"26073:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5436,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26009:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26009:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5428,"id":5449,"nodeType":"Return","src":"25993:82:22"}]}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"25754:86:22","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5452,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:22","nodeType":"FunctionDefinition","parameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"a","nameLocation":"25867:1:22","nodeType":"VariableDeclaration","scope":5452,"src":"25859:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5424,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:22","nodeType":"VariableDeclaration","scope":5452,"src":"25870:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":5423,"nodeType":"UserDefinedTypeName","pathNode":{"id":5422,"name":"Rounding","nameLocations":["25870:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"25870:8:22"},"referencedDeclaration":4265,"src":"25870:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:22"},"returnParameters":{"id":5428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5452,"src":"25912:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:22"},"scope":5874,"src":"25845:247:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5542,"nodeType":"Block","src":"26281:2334:22","statements":[{"expression":{"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5460,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26363:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"26383:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5461,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26367:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26367:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5470,"nodeType":"ExpressionStatement","src":"26363:64:22"},{"expression":{"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5471,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26503:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5474,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"26525:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5475,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26530:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5472,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26508:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26508:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5484,"nodeType":"ExpressionStatement","src":"26503:56:22"},{"expression":{"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5485,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26634:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5488,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"26656:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5489,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26661:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5486,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26639:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26639:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5498,"nodeType":"ExpressionStatement","src":"26634:48:22"},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5499,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26757:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5502,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"26779:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5503,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26784:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5500,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26762:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26762:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5512,"nodeType":"ExpressionStatement","src":"26757:44:22"},{"expression":{"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5513,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26874:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5516,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"26896:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5517,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26901:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5514,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26879:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26879:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5526,"nodeType":"ExpressionStatement","src":"26874:42:22"},{"expression":{"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5527,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"26988:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5530,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"27010:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5531,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"27015:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5528,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"26993:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"26993:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5540,"nodeType":"ExpressionStatement","src":"26988:41:22"},{"AST":{"nodeType":"YulBlock","src":"28490:119:22","statements":[{"nodeType":"YulAssignment","src":"28504:95:22","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:22"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:22"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:22"},"nodeType":"YulFunctionCall","src":"28520:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:22","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:22"},"nodeType":"YulFunctionCall","src":"28515:83:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:22"},"nodeType":"YulFunctionCall","src":"28509:90:22"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5458,"isOffset":false,"isSlot":false,"src":"28504:1:22","valueSize":1},{"declaration":5458,"isOffset":false,"isSlot":false,"src":"28512:1:22","valueSize":1},{"declaration":5458,"isOffset":false,"isSlot":false,"src":"28524:1:22","valueSize":1},{"declaration":5455,"isOffset":false,"isSlot":false,"src":"28527:1:22","valueSize":1}],"flags":["memory-safe"],"id":5541,"nodeType":"InlineAssembly","src":"28465:144:22"}]},"documentation":{"id":5453,"nodeType":"StructuredDocumentation","src":"26098:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5543,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:22","nodeType":"FunctionDefinition","parameters":{"id":5456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5455,"mutability":"mutable","name":"x","nameLocation":"26244:1:22","nodeType":"VariableDeclaration","scope":5543,"src":"26236:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5454,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:22"},"returnParameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"r","nameLocation":"26278:1:22","nodeType":"VariableDeclaration","scope":5543,"src":"26270:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:22"},"scope":5874,"src":"26222:2393:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5576,"nodeType":"Block","src":"28848:175:22","statements":[{"id":5575,"nodeType":"UncheckedBlock","src":"28858:159:22","statements":[{"assignments":[5555],"declarations":[{"constant":false,"id":5555,"mutability":"mutable","name":"result","nameLocation":"28890:6:22","nodeType":"VariableDeclaration","scope":5575,"src":"28882:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5554,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5559,"initialValue":{"arguments":[{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"28904:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5556,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5543,5577],"referencedDeclaration":5543,"src":"28899:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"28931:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5564,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5549,"src":"28973:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":5563,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"28956:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4265_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5567,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5555,"src":"28991:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"29000:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5561,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"28940:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"28940:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5553,"id":5574,"nodeType":"Return","src":"28924:82:22"}]}]},"documentation":{"id":5544,"nodeType":"StructuredDocumentation","src":"28621:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5577,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:22","nodeType":"FunctionDefinition","parameters":{"id":5550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"value","nameLocation":"28790:5:22","nodeType":"VariableDeclaration","scope":5577,"src":"28782:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5545,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5549,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:22","nodeType":"VariableDeclaration","scope":5577,"src":"28797:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":5548,"nodeType":"UserDefinedTypeName","pathNode":{"id":5547,"name":"Rounding","nameLocations":["28797:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"28797:8:22"},"referencedDeclaration":4265,"src":"28797:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:22"},"returnParameters":{"id":5553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5577,"src":"28839:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:22"},"scope":5874,"src":"28768:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"29216:854:22","statements":[{"assignments":[5586],"declarations":[{"constant":false,"id":5586,"mutability":"mutable","name":"result","nameLocation":"29234:6:22","nodeType":"VariableDeclaration","scope":5705,"src":"29226:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5588,"initialValue":{"hexValue":"30","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:22"},{"id":5702,"nodeType":"UncheckedBlock","src":"29254:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29282:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5605,"nodeType":"IfStatement","src":"29278:103:22","trueBody":{"id":5604,"nodeType":"Block","src":"29301:80:22","statements":[{"expression":{"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29319:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5599,"nodeType":"ExpressionStatement","src":"29319:17:22"},{"expression":{"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5600,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"29354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5603,"nodeType":"ExpressionStatement","src":"29354:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29398:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"29394:103:22","trueBody":{"id":5621,"nodeType":"Block","src":"29417:80:22","statements":[{"expression":{"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29435:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5616,"nodeType":"ExpressionStatement","src":"29435:17:22"},{"expression":{"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5617,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"29470:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5620,"nodeType":"ExpressionStatement","src":"29470:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29514:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5639,"nodeType":"IfStatement","src":"29510:103:22","trueBody":{"id":5638,"nodeType":"Block","src":"29533:80:22","statements":[{"expression":{"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29551:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5633,"nodeType":"ExpressionStatement","src":"29551:17:22"},{"expression":{"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5634,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"29586:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5637,"nodeType":"ExpressionStatement","src":"29586:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29630:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5656,"nodeType":"IfStatement","src":"29626:100:22","trueBody":{"id":5655,"nodeType":"Block","src":"29648:78:22","statements":[{"expression":{"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29666:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5650,"nodeType":"ExpressionStatement","src":"29666:16:22"},{"expression":{"id":5653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"29700:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5654,"nodeType":"ExpressionStatement","src":"29700:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5673,"nodeType":"IfStatement","src":"29739:100:22","trueBody":{"id":5672,"nodeType":"Block","src":"29761:78:22","statements":[{"expression":{"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29779:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5667,"nodeType":"ExpressionStatement","src":"29779:16:22"},{"expression":{"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5668,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"29813:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5671,"nodeType":"ExpressionStatement","src":"29813:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29856:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5690,"nodeType":"IfStatement","src":"29852:100:22","trueBody":{"id":5689,"nodeType":"Block","src":"29874:78:22","statements":[{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29892:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5684,"nodeType":"ExpressionStatement","src":"29892:16:22"},{"expression":{"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5685,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"29926:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5688,"nodeType":"ExpressionStatement","src":"29926:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5580,"src":"29969:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"IfStatement","src":"29965:66:22","trueBody":{"id":5700,"nodeType":"Block","src":"29987:44:22","statements":[{"expression":{"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"30005:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5699,"nodeType":"ExpressionStatement","src":"30005:11:22"}]}}]},{"expression":{"id":5703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"30057:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5584,"id":5704,"nodeType":"Return","src":"30050:13:22"}]},"documentation":{"id":5578,"nodeType":"StructuredDocumentation","src":"29029:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:22","nodeType":"FunctionDefinition","parameters":{"id":5581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5580,"mutability":"mutable","name":"value","nameLocation":"29177:5:22","nodeType":"VariableDeclaration","scope":5706,"src":"29169:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5579,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:22"},"returnParameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5706,"src":"29207:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:22"},"scope":5874,"src":"29154:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5739,"nodeType":"Block","src":"30305:177:22","statements":[{"id":5738,"nodeType":"UncheckedBlock","src":"30315:161:22","statements":[{"assignments":[5718],"declarations":[{"constant":false,"id":5718,"mutability":"mutable","name":"result","nameLocation":"30347:6:22","nodeType":"VariableDeclaration","scope":5738,"src":"30339:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5722,"initialValue":{"arguments":[{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5719,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5706,5740],"referencedDeclaration":5706,"src":"30356:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5723,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"30389:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5727,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5712,"src":"30431:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":5726,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"30414:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4265_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5718,"src":"30450:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"30459:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5724,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"30398:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"30398:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5716,"id":5737,"nodeType":"Return","src":"30382:83:22"}]}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"30076:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5740,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:22","nodeType":"FunctionDefinition","parameters":{"id":5713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"value","nameLocation":"30247:5:22","nodeType":"VariableDeclaration","scope":5740,"src":"30239:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5712,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:22","nodeType":"VariableDeclaration","scope":5740,"src":"30254:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":5711,"nodeType":"UserDefinedTypeName","pathNode":{"id":5710,"name":"Rounding","nameLocations":["30254:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"30254:8:22"},"referencedDeclaration":4265,"src":"30254:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:22"},"returnParameters":{"id":5716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5740,"src":"30296:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5714,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:22"},"scope":5874,"src":"30224:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5816,"nodeType":"Block","src":"30800:675:22","statements":[{"expression":{"id":5757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5748,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"30882:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5751,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"30902:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5749,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"30886:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"30886:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5758,"nodeType":"ExpressionStatement","src":"30882:64:22"},{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5759,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31022:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"31044:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5763,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31049:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5765,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5760,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"31027:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"31027:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:22","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5772,"nodeType":"ExpressionStatement","src":"31022:56:22"},{"expression":{"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5773,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31153:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5776,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"31175:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5777,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31180:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5774,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"31158:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"31158:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:22","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5786,"nodeType":"ExpressionStatement","src":"31153:48:22"},{"expression":{"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5787,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31276:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"31298:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5791,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31303:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5788,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"31281:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"31281:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5800,"nodeType":"ExpressionStatement","src":"31276:44:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5801,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31426:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5807,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"31453:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5808,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"31458:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5805,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"31436:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"31436:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5747,"id":5815,"nodeType":"Return","src":"31418:50:22"}]},"documentation":{"id":5741,"nodeType":"StructuredDocumentation","src":"30488:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5817,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:22","nodeType":"FunctionDefinition","parameters":{"id":5744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5743,"mutability":"mutable","name":"x","nameLocation":"30763:1:22","nodeType":"VariableDeclaration","scope":5817,"src":"30755:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:22"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5746,"mutability":"mutable","name":"r","nameLocation":"30797:1:22","nodeType":"VariableDeclaration","scope":5817,"src":"30789:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:22"},"scope":5874,"src":"30739:736:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5853,"nodeType":"Block","src":"31712:184:22","statements":[{"id":5852,"nodeType":"UncheckedBlock","src":"31722:168:22","statements":[{"assignments":[5829],"declarations":[{"constant":false,"id":5829,"mutability":"mutable","name":"result","nameLocation":"31754:6:22","nodeType":"VariableDeclaration","scope":5852,"src":"31746:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5828,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5833,"initialValue":{"arguments":[{"id":5831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"31770:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5817,5854],"referencedDeclaration":5817,"src":"31763:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"31797:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5838,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"31839:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":5837,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5873,"src":"31822:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4265_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5820,"src":"31873:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5835,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"31806:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"31806:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5827,"id":5851,"nodeType":"Return","src":"31790:89:22"}]}]},"documentation":{"id":5818,"nodeType":"StructuredDocumentation","src":"31481:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5854,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:22","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"value","nameLocation":"31654:5:22","nodeType":"VariableDeclaration","scope":5854,"src":"31646:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5823,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:22","nodeType":"VariableDeclaration","scope":5854,"src":"31661:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":5822,"nodeType":"UserDefinedTypeName","pathNode":{"id":5821,"name":"Rounding","nameLocations":["31661:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"31661:8:22"},"referencedDeclaration":4265,"src":"31661:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:22"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5854,"src":"31703:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:22"},"scope":5874,"src":"31630:266:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5872,"nodeType":"Block","src":"32094:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5865,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"32117:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}],"id":5864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5863,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:22","typeDescriptions":{}}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5862,"id":5871,"nodeType":"Return","src":"32104:31:22"}]},"documentation":{"id":5855,"nodeType":"StructuredDocumentation","src":"31902:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5873,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:22","nodeType":"FunctionDefinition","parameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:22","nodeType":"VariableDeclaration","scope":5873,"src":"32046:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"},"typeName":{"id":5857,"nodeType":"UserDefinedTypeName","pathNode":{"id":5856,"name":"Rounding","nameLocations":["32046:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":4265,"src":"32046:8:22"},"referencedDeclaration":4265,"src":"32046:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4265","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:22"},"returnParameters":{"id":5862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5873,"src":"32088:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5860,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:22"},"scope":5874,"src":"32020:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5875,"src":"281:31863:22","usedErrors":[],"usedEvents":[]}],"src":"103:32042:22"},"id":22},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7639]},"id":7640,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5876,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"218:550:23","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7639,"linearizedBaseContracts":[7639],"name":"SafeCast","nameLocation":"777:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"792:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5884,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:23","nodeType":"ErrorDefinition","parameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"bits","nameLocation":"908:4:23","nodeType":"VariableDeclaration","scope":5884,"src":"902:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5879,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5882,"mutability":"mutable","name":"value","nameLocation":"922:5:23","nodeType":"VariableDeclaration","scope":5884,"src":"914:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:23"},"src":"865:64:23"},{"documentation":{"id":5885,"nodeType":"StructuredDocumentation","src":"935:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5889,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:23","nodeType":"ErrorDefinition","parameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"value","nameLocation":"1056:5:23","nodeType":"VariableDeclaration","scope":5889,"src":"1049:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5886,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:23"},"src":"1015:48:23"},{"documentation":{"id":5890,"nodeType":"StructuredDocumentation","src":"1069:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5896,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:23","nodeType":"ErrorDefinition","parameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"bits","nameLocation":"1183:4:23","nodeType":"VariableDeclaration","scope":5896,"src":"1177:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5891,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5894,"mutability":"mutable","name":"value","nameLocation":"1196:5:23","nodeType":"VariableDeclaration","scope":5896,"src":"1189:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5893,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:23"},"src":"1141:62:23"},{"documentation":{"id":5897,"nodeType":"StructuredDocumentation","src":"1209:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5901,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:23","nodeType":"ErrorDefinition","parameters":{"id":5900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5899,"mutability":"mutable","name":"value","nameLocation":"1331:5:23","nodeType":"VariableDeclaration","scope":5901,"src":"1323:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:23"},"src":"1289:49:23"},{"body":{"id":5928,"nodeType":"Block","src":"1695:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"1709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5911,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:23","memberName":"max","nodeType":"MemberAccess","src":"1717:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5922,"nodeType":"IfStatement","src":"1705:105:23","trueBody":{"id":5921,"nodeType":"Block","src":"1736:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"1793:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5916,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"1757:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5920,"nodeType":"RevertStatement","src":"1750:49:23"}]}},{"expression":{"arguments":[{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5923,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:23","typeDescriptions":{}}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5908,"id":5927,"nodeType":"Return","src":"1819:21:23"}]},"documentation":{"id":5902,"nodeType":"StructuredDocumentation","src":"1344:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:23","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"value","nameLocation":"1656:5:23","nodeType":"VariableDeclaration","scope":5929,"src":"1648:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:23"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5929,"src":"1686:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5906,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:23"},"scope":7639,"src":"1629:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5956,"nodeType":"Block","src":"2204:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2218:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5939,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:23","memberName":"max","nodeType":"MemberAccess","src":"2226:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5950,"nodeType":"IfStatement","src":"2214:105:23","trueBody":{"id":5949,"nodeType":"Block","src":"2245:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2302:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5944,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"2266:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5948,"nodeType":"RevertStatement","src":"2259:49:23"}]}},{"expression":{"arguments":[{"id":5953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"2343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5951,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:23","typeDescriptions":{}}},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5936,"id":5955,"nodeType":"Return","src":"2328:21:23"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"1853:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5957,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:23","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"value","nameLocation":"2165:5:23","nodeType":"VariableDeclaration","scope":5957,"src":"2157:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5931,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:23"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5957,"src":"2195:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5934,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:23"},"scope":7639,"src":"2138:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5984,"nodeType":"Block","src":"2713:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"2727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5967,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:23","memberName":"max","nodeType":"MemberAccess","src":"2735:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5978,"nodeType":"IfStatement","src":"2723:105:23","trueBody":{"id":5977,"nodeType":"Block","src":"2754:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"2811:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5972,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"2775:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5976,"nodeType":"RevertStatement","src":"2768:49:23"}]}},{"expression":{"arguments":[{"id":5981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"2852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5979,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:23","typeDescriptions":{}}},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5964,"id":5983,"nodeType":"Return","src":"2837:21:23"}]},"documentation":{"id":5958,"nodeType":"StructuredDocumentation","src":"2362:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5985,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"value","nameLocation":"2674:5:23","nodeType":"VariableDeclaration","scope":5985,"src":"2666:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:23"},"returnParameters":{"id":5964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5985,"src":"2704:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5962,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:23"},"scope":7639,"src":"2647:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6012,"nodeType":"Block","src":"3222:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"3236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5995,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:23","memberName":"max","nodeType":"MemberAccess","src":"3244:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6006,"nodeType":"IfStatement","src":"3232:105:23","trueBody":{"id":6005,"nodeType":"Block","src":"3263:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"3320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6000,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"3284:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6004,"nodeType":"RevertStatement","src":"3277:49:23"}]}},{"expression":{"arguments":[{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"3361:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6007,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:23","typeDescriptions":{}}},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5992,"id":6011,"nodeType":"Return","src":"3346:21:23"}]},"documentation":{"id":5986,"nodeType":"StructuredDocumentation","src":"2871:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6013,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:23","nodeType":"FunctionDefinition","parameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"value","nameLocation":"3183:5:23","nodeType":"VariableDeclaration","scope":6013,"src":"3175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5987,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:23"},"returnParameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6013,"src":"3213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5990,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:23"},"scope":7639,"src":"3156:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6040,"nodeType":"Block","src":"3731:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6023,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:23","memberName":"max","nodeType":"MemberAccess","src":"3753:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6034,"nodeType":"IfStatement","src":"3741:105:23","trueBody":{"id":6033,"nodeType":"Block","src":"3772:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"3829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6028,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"3793:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6032,"nodeType":"RevertStatement","src":"3786:49:23"}]}},{"expression":{"arguments":[{"id":6037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6035,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:23","typeDescriptions":{}}},"id":6038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6020,"id":6039,"nodeType":"Return","src":"3855:21:23"}]},"documentation":{"id":6014,"nodeType":"StructuredDocumentation","src":"3380:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6041,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:23","nodeType":"FunctionDefinition","parameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"value","nameLocation":"3692:5:23","nodeType":"VariableDeclaration","scope":6041,"src":"3684:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6015,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:23"},"returnParameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6041,"src":"3722:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6018,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:23"},"scope":7639,"src":"3665:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6068,"nodeType":"Block","src":"4240:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"4254:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6051,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6050,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:23","memberName":"max","nodeType":"MemberAccess","src":"4262:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6062,"nodeType":"IfStatement","src":"4250:105:23","trueBody":{"id":6061,"nodeType":"Block","src":"4281:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6056,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"4302:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6060,"nodeType":"RevertStatement","src":"4295:49:23"}]}},{"expression":{"arguments":[{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6044,"src":"4379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6063,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:23","typeDescriptions":{}}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6048,"id":6067,"nodeType":"Return","src":"4364:21:23"}]},"documentation":{"id":6042,"nodeType":"StructuredDocumentation","src":"3889:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6069,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:23","nodeType":"FunctionDefinition","parameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"value","nameLocation":"4201:5:23","nodeType":"VariableDeclaration","scope":6069,"src":"4193:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:23"},"returnParameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6069,"src":"4231:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6046,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:23"},"scope":7639,"src":"4174:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6096,"nodeType":"Block","src":"4749:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"4763:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6079,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:23","memberName":"max","nodeType":"MemberAccess","src":"4771:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6090,"nodeType":"IfStatement","src":"4759:105:23","trueBody":{"id":6089,"nodeType":"Block","src":"4790:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"4847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6084,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"4811:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6088,"nodeType":"RevertStatement","src":"4804:49:23"}]}},{"expression":{"arguments":[{"id":6093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6072,"src":"4888:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6091,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:23","typeDescriptions":{}}},"id":6094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6076,"id":6095,"nodeType":"Return","src":"4873:21:23"}]},"documentation":{"id":6070,"nodeType":"StructuredDocumentation","src":"4398:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:23","nodeType":"FunctionDefinition","parameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"value","nameLocation":"4710:5:23","nodeType":"VariableDeclaration","scope":6097,"src":"4702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:23"},"returnParameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6097,"src":"4740:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6074,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:23"},"scope":7639,"src":"4683:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6124,"nodeType":"Block","src":"5258:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"5272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6107,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:23","memberName":"max","nodeType":"MemberAccess","src":"5280:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6118,"nodeType":"IfStatement","src":"5268:105:23","trueBody":{"id":6117,"nodeType":"Block","src":"5299:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"5356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6112,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"5320:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6116,"nodeType":"RevertStatement","src":"5313:49:23"}]}},{"expression":{"arguments":[{"id":6121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"5397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6119,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:23","typeDescriptions":{}}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6104,"id":6123,"nodeType":"Return","src":"5382:21:23"}]},"documentation":{"id":6098,"nodeType":"StructuredDocumentation","src":"4907:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:23","nodeType":"FunctionDefinition","parameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"value","nameLocation":"5219:5:23","nodeType":"VariableDeclaration","scope":6125,"src":"5211:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6099,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:23"},"returnParameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6125,"src":"5249:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6102,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:23"},"scope":7639,"src":"5192:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6152,"nodeType":"Block","src":"5767:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"5781:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6135,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:23","memberName":"max","nodeType":"MemberAccess","src":"5789:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6146,"nodeType":"IfStatement","src":"5777:105:23","trueBody":{"id":6145,"nodeType":"Block","src":"5808:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"5865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6140,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"5829:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6144,"nodeType":"RevertStatement","src":"5822:49:23"}]}},{"expression":{"arguments":[{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"5906:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6147,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:23","typeDescriptions":{}}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6132,"id":6151,"nodeType":"Return","src":"5891:21:23"}]},"documentation":{"id":6126,"nodeType":"StructuredDocumentation","src":"5416:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6153,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:23","nodeType":"FunctionDefinition","parameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"value","nameLocation":"5728:5:23","nodeType":"VariableDeclaration","scope":6153,"src":"5720:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:23"},"returnParameters":{"id":6132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6153,"src":"5758:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6130,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:23"},"scope":7639,"src":"5701:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6180,"nodeType":"Block","src":"6276:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"6290:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6163,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:23","memberName":"max","nodeType":"MemberAccess","src":"6298:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6174,"nodeType":"IfStatement","src":"6286:105:23","trueBody":{"id":6173,"nodeType":"Block","src":"6317:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"6374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6168,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"6338:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6172,"nodeType":"RevertStatement","src":"6331:49:23"}]}},{"expression":{"arguments":[{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6156,"src":"6415:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6175,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:23","typeDescriptions":{}}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6160,"id":6179,"nodeType":"Return","src":"6400:21:23"}]},"documentation":{"id":6154,"nodeType":"StructuredDocumentation","src":"5925:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6181,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:23","nodeType":"FunctionDefinition","parameters":{"id":6157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6156,"mutability":"mutable","name":"value","nameLocation":"6237:5:23","nodeType":"VariableDeclaration","scope":6181,"src":"6229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6155,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:23"},"returnParameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6181,"src":"6267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6158,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:23"},"scope":7639,"src":"6210:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6208,"nodeType":"Block","src":"6785:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"6799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6191,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:23","memberName":"max","nodeType":"MemberAccess","src":"6807:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6202,"nodeType":"IfStatement","src":"6795:105:23","trueBody":{"id":6201,"nodeType":"Block","src":"6826:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"6883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6196,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"6847:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6200,"nodeType":"RevertStatement","src":"6840:49:23"}]}},{"expression":{"arguments":[{"id":6205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"6924:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6203,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:23","typeDescriptions":{}}},"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6188,"id":6207,"nodeType":"Return","src":"6909:21:23"}]},"documentation":{"id":6182,"nodeType":"StructuredDocumentation","src":"6434:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6209,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:23","nodeType":"FunctionDefinition","parameters":{"id":6185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6184,"mutability":"mutable","name":"value","nameLocation":"6746:5:23","nodeType":"VariableDeclaration","scope":6209,"src":"6738:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6183,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:23"},"returnParameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6209,"src":"6776:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6186,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:23"},"scope":7639,"src":"6719:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6236,"nodeType":"Block","src":"7294:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"7308:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6219,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:23","memberName":"max","nodeType":"MemberAccess","src":"7316:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6230,"nodeType":"IfStatement","src":"7304:105:23","trueBody":{"id":6229,"nodeType":"Block","src":"7335:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"7392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"7356:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6228,"nodeType":"RevertStatement","src":"7349:49:23"}]}},{"expression":{"arguments":[{"id":6233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6212,"src":"7433:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6231,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:23","typeDescriptions":{}}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6216,"id":6235,"nodeType":"Return","src":"7418:21:23"}]},"documentation":{"id":6210,"nodeType":"StructuredDocumentation","src":"6943:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:23","nodeType":"FunctionDefinition","parameters":{"id":6213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6212,"mutability":"mutable","name":"value","nameLocation":"7255:5:23","nodeType":"VariableDeclaration","scope":6237,"src":"7247:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6211,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:23"},"returnParameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6237,"src":"7285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6214,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:23"},"scope":7639,"src":"7228:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6264,"nodeType":"Block","src":"7803:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"7817:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6247,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:23","memberName":"max","nodeType":"MemberAccess","src":"7825:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6258,"nodeType":"IfStatement","src":"7813:105:23","trueBody":{"id":6257,"nodeType":"Block","src":"7844:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"7901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"7865:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6256,"nodeType":"RevertStatement","src":"7858:49:23"}]}},{"expression":{"arguments":[{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6240,"src":"7942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6259,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:23","typeDescriptions":{}}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6244,"id":6263,"nodeType":"Return","src":"7927:21:23"}]},"documentation":{"id":6238,"nodeType":"StructuredDocumentation","src":"7452:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:23","nodeType":"FunctionDefinition","parameters":{"id":6241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6240,"mutability":"mutable","name":"value","nameLocation":"7764:5:23","nodeType":"VariableDeclaration","scope":6265,"src":"7756:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6239,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:23"},"returnParameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6265,"src":"7794:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6242,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:23"},"scope":7639,"src":"7737:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6292,"nodeType":"Block","src":"8312:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"8326:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6275,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:23","memberName":"max","nodeType":"MemberAccess","src":"8334:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6286,"nodeType":"IfStatement","src":"8322:105:23","trueBody":{"id":6285,"nodeType":"Block","src":"8353:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"8410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"8374:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6284,"nodeType":"RevertStatement","src":"8367:49:23"}]}},{"expression":{"arguments":[{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"8451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6287,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:23","typeDescriptions":{}}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6272,"id":6291,"nodeType":"Return","src":"8436:21:23"}]},"documentation":{"id":6266,"nodeType":"StructuredDocumentation","src":"7961:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:23","nodeType":"FunctionDefinition","parameters":{"id":6269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"value","nameLocation":"8273:5:23","nodeType":"VariableDeclaration","scope":6293,"src":"8265:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6267,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:23"},"returnParameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6293,"src":"8303:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6270,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:23"},"scope":7639,"src":"8246:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6320,"nodeType":"Block","src":"8821:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"8835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6303,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:23","memberName":"max","nodeType":"MemberAccess","src":"8843:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6314,"nodeType":"IfStatement","src":"8831:105:23","trueBody":{"id":6313,"nodeType":"Block","src":"8862:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"8919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"8883:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6312,"nodeType":"RevertStatement","src":"8876:49:23"}]}},{"expression":{"arguments":[{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6315,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:23","typeDescriptions":{}}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6300,"id":6319,"nodeType":"Return","src":"8945:21:23"}]},"documentation":{"id":6294,"nodeType":"StructuredDocumentation","src":"8470:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:23","nodeType":"FunctionDefinition","parameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6296,"mutability":"mutable","name":"value","nameLocation":"8782:5:23","nodeType":"VariableDeclaration","scope":6321,"src":"8774:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6295,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:23"},"returnParameters":{"id":6300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6321,"src":"8812:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6298,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:23"},"scope":7639,"src":"8755:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6348,"nodeType":"Block","src":"9330:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"9344:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6331,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:23","memberName":"max","nodeType":"MemberAccess","src":"9352:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6342,"nodeType":"IfStatement","src":"9340:105:23","trueBody":{"id":6341,"nodeType":"Block","src":"9371:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"9428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"9392:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6340,"nodeType":"RevertStatement","src":"9385:49:23"}]}},{"expression":{"arguments":[{"id":6345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"9469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6343,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:23","typeDescriptions":{}}},"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6328,"id":6347,"nodeType":"Return","src":"9454:21:23"}]},"documentation":{"id":6322,"nodeType":"StructuredDocumentation","src":"8979:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:23","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"value","nameLocation":"9291:5:23","nodeType":"VariableDeclaration","scope":6349,"src":"9283:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6323,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:23"},"returnParameters":{"id":6328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6349,"src":"9321:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6326,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:23"},"scope":7639,"src":"9264:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6376,"nodeType":"Block","src":"9839:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"9853:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6359,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:23","memberName":"max","nodeType":"MemberAccess","src":"9861:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6370,"nodeType":"IfStatement","src":"9849:105:23","trueBody":{"id":6369,"nodeType":"Block","src":"9880:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"9937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"9901:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6368,"nodeType":"RevertStatement","src":"9894:49:23"}]}},{"expression":{"arguments":[{"id":6373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"9978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6371,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:23","typeDescriptions":{}}},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6356,"id":6375,"nodeType":"Return","src":"9963:21:23"}]},"documentation":{"id":6350,"nodeType":"StructuredDocumentation","src":"9488:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:23","nodeType":"FunctionDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"value","nameLocation":"9800:5:23","nodeType":"VariableDeclaration","scope":6377,"src":"9792:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:23"},"returnParameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6377,"src":"9830:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6354,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:23"},"scope":7639,"src":"9773:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6404,"nodeType":"Block","src":"10348:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6387,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:23","memberName":"max","nodeType":"MemberAccess","src":"10370:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6398,"nodeType":"IfStatement","src":"10358:105:23","trueBody":{"id":6397,"nodeType":"Block","src":"10389:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"10446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"10410:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6396,"nodeType":"RevertStatement","src":"10403:49:23"}]}},{"expression":{"arguments":[{"id":6401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"10487:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6399,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:23","typeDescriptions":{}}},"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6384,"id":6403,"nodeType":"Return","src":"10472:21:23"}]},"documentation":{"id":6378,"nodeType":"StructuredDocumentation","src":"9997:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:23","nodeType":"FunctionDefinition","parameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"value","nameLocation":"10309:5:23","nodeType":"VariableDeclaration","scope":6405,"src":"10301:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6379,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:23"},"returnParameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6405,"src":"10339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6382,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:23"},"scope":7639,"src":"10282:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6432,"nodeType":"Block","src":"10857:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6415,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:23","memberName":"max","nodeType":"MemberAccess","src":"10879:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6426,"nodeType":"IfStatement","src":"10867:105:23","trueBody":{"id":6425,"nodeType":"Block","src":"10898:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"10955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"10919:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6424,"nodeType":"RevertStatement","src":"10912:49:23"}]}},{"expression":{"arguments":[{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6408,"src":"10996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6427,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:23","typeDescriptions":{}}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6412,"id":6431,"nodeType":"Return","src":"10981:21:23"}]},"documentation":{"id":6406,"nodeType":"StructuredDocumentation","src":"10506:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:23","nodeType":"FunctionDefinition","parameters":{"id":6409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6408,"mutability":"mutable","name":"value","nameLocation":"10818:5:23","nodeType":"VariableDeclaration","scope":6433,"src":"10810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6407,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:23"},"returnParameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6433,"src":"10848:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6410,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:23"},"scope":7639,"src":"10791:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6460,"nodeType":"Block","src":"11360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"11374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6443,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:23","memberName":"max","nodeType":"MemberAccess","src":"11382:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6454,"nodeType":"IfStatement","src":"11370:103:23","trueBody":{"id":6453,"nodeType":"Block","src":"11400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"11456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"11421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6452,"nodeType":"RevertStatement","src":"11414:48:23"}]}},{"expression":{"arguments":[{"id":6457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"11496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6455,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:23","typeDescriptions":{}}},"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6440,"id":6459,"nodeType":"Return","src":"11482:20:23"}]},"documentation":{"id":6434,"nodeType":"StructuredDocumentation","src":"11015:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6436,"mutability":"mutable","name":"value","nameLocation":"11322:5:23","nodeType":"VariableDeclaration","scope":6461,"src":"11314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6435,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:23"},"returnParameters":{"id":6440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6461,"src":"11352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6438,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:23"},"scope":7639,"src":"11296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6488,"nodeType":"Block","src":"11860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"11874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6471,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:23","memberName":"max","nodeType":"MemberAccess","src":"11882:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6482,"nodeType":"IfStatement","src":"11870:103:23","trueBody":{"id":6481,"nodeType":"Block","src":"11900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"11956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"11921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6480,"nodeType":"RevertStatement","src":"11914:48:23"}]}},{"expression":{"arguments":[{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"11996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6483,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:23","typeDescriptions":{}}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6468,"id":6487,"nodeType":"Return","src":"11982:20:23"}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"11515:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"value","nameLocation":"11822:5:23","nodeType":"VariableDeclaration","scope":6489,"src":"11814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6463,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:23"},"returnParameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6489,"src":"11852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6466,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:23"},"scope":7639,"src":"11796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6516,"nodeType":"Block","src":"12360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"12374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6499,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:23","memberName":"max","nodeType":"MemberAccess","src":"12382:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6510,"nodeType":"IfStatement","src":"12370:103:23","trueBody":{"id":6509,"nodeType":"Block","src":"12400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"12456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6508,"nodeType":"RevertStatement","src":"12414:48:23"}]}},{"expression":{"arguments":[{"id":6513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"12496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6511,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:23","typeDescriptions":{}}},"id":6514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6496,"id":6515,"nodeType":"Return","src":"12482:20:23"}]},"documentation":{"id":6490,"nodeType":"StructuredDocumentation","src":"12015:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"value","nameLocation":"12322:5:23","nodeType":"VariableDeclaration","scope":6517,"src":"12314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6491,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:23"},"returnParameters":{"id":6496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6517,"src":"12352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6494,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:23"},"scope":7639,"src":"12296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6544,"nodeType":"Block","src":"12860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"12874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6527,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:23","memberName":"max","nodeType":"MemberAccess","src":"12882:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6538,"nodeType":"IfStatement","src":"12870:103:23","trueBody":{"id":6537,"nodeType":"Block","src":"12900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"12956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6532,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6536,"nodeType":"RevertStatement","src":"12914:48:23"}]}},{"expression":{"arguments":[{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"12996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6539,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:23","typeDescriptions":{}}},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6524,"id":6543,"nodeType":"Return","src":"12982:20:23"}]},"documentation":{"id":6518,"nodeType":"StructuredDocumentation","src":"12515:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6520,"mutability":"mutable","name":"value","nameLocation":"12822:5:23","nodeType":"VariableDeclaration","scope":6545,"src":"12814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:23"},"returnParameters":{"id":6524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6545,"src":"12852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6522,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:23"},"scope":7639,"src":"12796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6572,"nodeType":"Block","src":"13360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"13374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6555,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6554,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:23","memberName":"max","nodeType":"MemberAccess","src":"13382:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6566,"nodeType":"IfStatement","src":"13370:103:23","trueBody":{"id":6565,"nodeType":"Block","src":"13400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"13456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6560,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6564,"nodeType":"RevertStatement","src":"13414:48:23"}]}},{"expression":{"arguments":[{"id":6569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6548,"src":"13496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6567,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:23","typeDescriptions":{}}},"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6552,"id":6571,"nodeType":"Return","src":"13482:20:23"}]},"documentation":{"id":6546,"nodeType":"StructuredDocumentation","src":"13015:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6573,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6548,"mutability":"mutable","name":"value","nameLocation":"13322:5:23","nodeType":"VariableDeclaration","scope":6573,"src":"13314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6547,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:23"},"returnParameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6573,"src":"13352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6550,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:23"},"scope":7639,"src":"13296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6600,"nodeType":"Block","src":"13860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"13874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6583,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6582,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:23","memberName":"max","nodeType":"MemberAccess","src":"13882:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6594,"nodeType":"IfStatement","src":"13870:103:23","trueBody":{"id":6593,"nodeType":"Block","src":"13900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"13956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6588,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"13921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6592,"nodeType":"RevertStatement","src":"13914:48:23"}]}},{"expression":{"arguments":[{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"13996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6595,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:23","typeDescriptions":{}}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6580,"id":6599,"nodeType":"Return","src":"13982:20:23"}]},"documentation":{"id":6574,"nodeType":"StructuredDocumentation","src":"13515:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6576,"mutability":"mutable","name":"value","nameLocation":"13822:5:23","nodeType":"VariableDeclaration","scope":6601,"src":"13814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6575,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:23"},"returnParameters":{"id":6580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6601,"src":"13852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6578,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:23"},"scope":7639,"src":"13796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6628,"nodeType":"Block","src":"14360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"14374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6611,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6610,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:23","memberName":"max","nodeType":"MemberAccess","src":"14382:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6622,"nodeType":"IfStatement","src":"14370:103:23","trueBody":{"id":6621,"nodeType":"Block","src":"14400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"14456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6616,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"14421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6620,"nodeType":"RevertStatement","src":"14414:48:23"}]}},{"expression":{"arguments":[{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"14496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6623,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:23","typeDescriptions":{}}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6608,"id":6627,"nodeType":"Return","src":"14482:20:23"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"14015:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6629,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"value","nameLocation":"14322:5:23","nodeType":"VariableDeclaration","scope":6629,"src":"14314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6603,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:23"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6629,"src":"14352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6606,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:23"},"scope":7639,"src":"14296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6656,"nodeType":"Block","src":"14860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"14874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6639,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6638,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:23","memberName":"max","nodeType":"MemberAccess","src":"14882:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"IfStatement","src":"14870:103:23","trueBody":{"id":6649,"nodeType":"Block","src":"14900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"14956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6644,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"14921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6648,"nodeType":"RevertStatement","src":"14914:48:23"}]}},{"expression":{"arguments":[{"id":6653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"14996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6651,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:23","typeDescriptions":{}}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6636,"id":6655,"nodeType":"Return","src":"14982:20:23"}]},"documentation":{"id":6630,"nodeType":"StructuredDocumentation","src":"14515:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6657,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"value","nameLocation":"14822:5:23","nodeType":"VariableDeclaration","scope":6657,"src":"14814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:23"},"returnParameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6657,"src":"14852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6634,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:23"},"scope":7639,"src":"14796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6684,"nodeType":"Block","src":"15360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"15374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6667,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:23","memberName":"max","nodeType":"MemberAccess","src":"15382:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6678,"nodeType":"IfStatement","src":"15370:103:23","trueBody":{"id":6677,"nodeType":"Block","src":"15400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"15456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6672,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"15421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6676,"nodeType":"RevertStatement","src":"15414:48:23"}]}},{"expression":{"arguments":[{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"15496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6679,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:23","typeDescriptions":{}}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6664,"id":6683,"nodeType":"Return","src":"15482:20:23"}]},"documentation":{"id":6658,"nodeType":"StructuredDocumentation","src":"15015:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6685,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6660,"mutability":"mutable","name":"value","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":6685,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6659,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:23"},"returnParameters":{"id":6664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6685,"src":"15352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6662,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:23"},"scope":7639,"src":"15296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6712,"nodeType":"Block","src":"15860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"15874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6695,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6694,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:23","memberName":"max","nodeType":"MemberAccess","src":"15882:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6706,"nodeType":"IfStatement","src":"15870:103:23","trueBody":{"id":6705,"nodeType":"Block","src":"15900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"15956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6700,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"15921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6704,"nodeType":"RevertStatement","src":"15914:48:23"}]}},{"expression":{"arguments":[{"id":6709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6688,"src":"15996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6707,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:23","typeDescriptions":{}}},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6692,"id":6711,"nodeType":"Return","src":"15982:20:23"}]},"documentation":{"id":6686,"nodeType":"StructuredDocumentation","src":"15515:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6713,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:23","nodeType":"FunctionDefinition","parameters":{"id":6689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6688,"mutability":"mutable","name":"value","nameLocation":"15822:5:23","nodeType":"VariableDeclaration","scope":6713,"src":"15814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6687,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:23"},"returnParameters":{"id":6692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6713,"src":"15852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6690,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:23"},"scope":7639,"src":"15796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6740,"nodeType":"Block","src":"16360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"16374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6723,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6722,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:23","memberName":"max","nodeType":"MemberAccess","src":"16382:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6734,"nodeType":"IfStatement","src":"16370:103:23","trueBody":{"id":6733,"nodeType":"Block","src":"16400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"16456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6728,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"16421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6732,"nodeType":"RevertStatement","src":"16414:48:23"}]}},{"expression":{"arguments":[{"id":6737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"16496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6735,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:23","typeDescriptions":{}}},"id":6738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6720,"id":6739,"nodeType":"Return","src":"16482:20:23"}]},"documentation":{"id":6714,"nodeType":"StructuredDocumentation","src":"16015:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6741,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:23","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"value","nameLocation":"16322:5:23","nodeType":"VariableDeclaration","scope":6741,"src":"16314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:23"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6741,"src":"16352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6718,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:23"},"scope":7639,"src":"16296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6768,"nodeType":"Block","src":"16854:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"16868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6751,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6750,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:23","memberName":"max","nodeType":"MemberAccess","src":"16876:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6762,"nodeType":"IfStatement","src":"16864:101:23","trueBody":{"id":6761,"nodeType":"Block","src":"16893:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"16948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6756,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"16914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6760,"nodeType":"RevertStatement","src":"16907:47:23"}]}},{"expression":{"arguments":[{"id":6765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"16987:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6763,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:23","typeDescriptions":{}}},"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6748,"id":6767,"nodeType":"Return","src":"16974:19:23"}]},"documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"16515:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6769,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:23","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"value","nameLocation":"16817:5:23","nodeType":"VariableDeclaration","scope":6769,"src":"16809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6743,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:23"},"returnParameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6769,"src":"16847:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6746,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:23"},"scope":7639,"src":"16792:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6791,"nodeType":"Block","src":"17236:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"17250:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6785,"nodeType":"IfStatement","src":"17246:81:23","trueBody":{"id":6784,"nodeType":"Block","src":"17261:66:23","statements":[{"errorCall":{"arguments":[{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"17310:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6780,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"17282:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6783,"nodeType":"RevertStatement","src":"17275:41:23"}]}},{"expression":{"arguments":[{"id":6788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"17351:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6786,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:23","typeDescriptions":{}}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6776,"id":6790,"nodeType":"Return","src":"17336:21:23"}]},"documentation":{"id":6770,"nodeType":"StructuredDocumentation","src":"17006:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:23","nodeType":"FunctionDefinition","parameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"value","nameLocation":"17197:5:23","nodeType":"VariableDeclaration","scope":6792,"src":"17190:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6771,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:23"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6792,"src":"17227:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6774,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:23"},"scope":7639,"src":"17171:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6817,"nodeType":"Block","src":"17761:150:23","statements":[{"expression":{"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6800,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"17771:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"17791:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6801,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:23","typeDescriptions":{}}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6806,"nodeType":"ExpressionStatement","src":"17771:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6807,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6798,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"17825:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6816,"nodeType":"IfStatement","src":"17807:98:23","trueBody":{"id":6815,"nodeType":"Block","src":"17832:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"17888:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6810,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"17853:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6814,"nodeType":"RevertStatement","src":"17846:48:23"}]}}]},"documentation":{"id":6793,"nodeType":"StructuredDocumentation","src":"17370:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6818,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:23","nodeType":"FunctionDefinition","parameters":{"id":6796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6795,"mutability":"mutable","name":"value","nameLocation":"17712:5:23","nodeType":"VariableDeclaration","scope":6818,"src":"17705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6794,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:23"},"returnParameters":{"id":6799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6798,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:23","nodeType":"VariableDeclaration","scope":6818,"src":"17742:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6797,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:23"},"scope":7639,"src":"17687:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6843,"nodeType":"Block","src":"18308:150:23","statements":[{"expression":{"id":6831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6826,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"18318:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"18338:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6827,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:23","typeDescriptions":{}}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6832,"nodeType":"ExpressionStatement","src":"18318:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6833,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"18358:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"18372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6842,"nodeType":"IfStatement","src":"18354:98:23","trueBody":{"id":6841,"nodeType":"Block","src":"18379:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6821,"src":"18435:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6836,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"18400:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6840,"nodeType":"RevertStatement","src":"18393:48:23"}]}}]},"documentation":{"id":6819,"nodeType":"StructuredDocumentation","src":"17917:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6844,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:23","nodeType":"FunctionDefinition","parameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"value","nameLocation":"18259:5:23","nodeType":"VariableDeclaration","scope":6844,"src":"18252:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6820,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:23"},"returnParameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6824,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:23","nodeType":"VariableDeclaration","scope":6844,"src":"18289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6823,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:23"},"scope":7639,"src":"18234:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6869,"nodeType":"Block","src":"18855:150:23","statements":[{"expression":{"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"18865:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"18885:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6853,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:23","typeDescriptions":{}}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6858,"nodeType":"ExpressionStatement","src":"18865:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"18905:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"18919:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6868,"nodeType":"IfStatement","src":"18901:98:23","trueBody":{"id":6867,"nodeType":"Block","src":"18926:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6847,"src":"18982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6862,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"18947:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6866,"nodeType":"RevertStatement","src":"18940:48:23"}]}}]},"documentation":{"id":6845,"nodeType":"StructuredDocumentation","src":"18464:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6870,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:23","nodeType":"FunctionDefinition","parameters":{"id":6848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6847,"mutability":"mutable","name":"value","nameLocation":"18806:5:23","nodeType":"VariableDeclaration","scope":6870,"src":"18799:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6846,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:23"},"returnParameters":{"id":6851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:23","nodeType":"VariableDeclaration","scope":6870,"src":"18836:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6849,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:23"},"scope":7639,"src":"18781:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6895,"nodeType":"Block","src":"19402:150:23","statements":[{"expression":{"id":6883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"19412:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"19432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6879,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:23","typeDescriptions":{}}},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6884,"nodeType":"ExpressionStatement","src":"19412:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6885,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"19452:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"19466:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6894,"nodeType":"IfStatement","src":"19448:98:23","trueBody":{"id":6893,"nodeType":"Block","src":"19473:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"19529:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6888,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"19494:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6892,"nodeType":"RevertStatement","src":"19487:48:23"}]}}]},"documentation":{"id":6871,"nodeType":"StructuredDocumentation","src":"19011:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6896,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:23","nodeType":"FunctionDefinition","parameters":{"id":6874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6873,"mutability":"mutable","name":"value","nameLocation":"19353:5:23","nodeType":"VariableDeclaration","scope":6896,"src":"19346:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6872,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:23"},"returnParameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6876,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:23","nodeType":"VariableDeclaration","scope":6896,"src":"19383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6875,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:23"},"scope":7639,"src":"19328:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6921,"nodeType":"Block","src":"19949:150:23","statements":[{"expression":{"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"19959:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"19979:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6905,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:23","typeDescriptions":{}}},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6910,"nodeType":"ExpressionStatement","src":"19959:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6911,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6902,"src":"19999:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"20013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6920,"nodeType":"IfStatement","src":"19995:98:23","trueBody":{"id":6919,"nodeType":"Block","src":"20020:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6899,"src":"20076:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6914,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"20041:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6918,"nodeType":"RevertStatement","src":"20034:48:23"}]}}]},"documentation":{"id":6897,"nodeType":"StructuredDocumentation","src":"19558:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6922,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:23","nodeType":"FunctionDefinition","parameters":{"id":6900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6899,"mutability":"mutable","name":"value","nameLocation":"19900:5:23","nodeType":"VariableDeclaration","scope":6922,"src":"19893:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6898,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:23"},"returnParameters":{"id":6903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6902,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:23","nodeType":"VariableDeclaration","scope":6922,"src":"19930:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6901,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:23"},"scope":7639,"src":"19875:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6947,"nodeType":"Block","src":"20496:150:23","statements":[{"expression":{"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"20506:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"20526:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6931,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:23","typeDescriptions":{}}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6936,"nodeType":"ExpressionStatement","src":"20506:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6937,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"20546:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"20560:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6946,"nodeType":"IfStatement","src":"20542:98:23","trueBody":{"id":6945,"nodeType":"Block","src":"20567:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6925,"src":"20623:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6940,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"20588:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6944,"nodeType":"RevertStatement","src":"20581:48:23"}]}}]},"documentation":{"id":6923,"nodeType":"StructuredDocumentation","src":"20105:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6948,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:23","nodeType":"FunctionDefinition","parameters":{"id":6926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6925,"mutability":"mutable","name":"value","nameLocation":"20447:5:23","nodeType":"VariableDeclaration","scope":6948,"src":"20440:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6924,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:23"},"returnParameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:23","nodeType":"VariableDeclaration","scope":6948,"src":"20477:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6927,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:23"},"scope":7639,"src":"20422:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6973,"nodeType":"Block","src":"21043:150:23","statements":[{"expression":{"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"21053:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"21073:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6957,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:23","typeDescriptions":{}}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6962,"nodeType":"ExpressionStatement","src":"21053:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6963,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6954,"src":"21093:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"21107:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6972,"nodeType":"IfStatement","src":"21089:98:23","trueBody":{"id":6971,"nodeType":"Block","src":"21114:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6951,"src":"21170:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6966,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"21135:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6970,"nodeType":"RevertStatement","src":"21128:48:23"}]}}]},"documentation":{"id":6949,"nodeType":"StructuredDocumentation","src":"20652:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6974,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:23","nodeType":"FunctionDefinition","parameters":{"id":6952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6951,"mutability":"mutable","name":"value","nameLocation":"20994:5:23","nodeType":"VariableDeclaration","scope":6974,"src":"20987:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6950,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:23"},"returnParameters":{"id":6955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6954,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:23","nodeType":"VariableDeclaration","scope":6974,"src":"21024:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6953,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:23"},"scope":7639,"src":"20969:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6999,"nodeType":"Block","src":"21590:150:23","statements":[{"expression":{"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"21600:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"21620:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6983,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:23","typeDescriptions":{}}},"id":6986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6988,"nodeType":"ExpressionStatement","src":"21600:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6989,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6980,"src":"21640:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"21654:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6998,"nodeType":"IfStatement","src":"21636:98:23","trueBody":{"id":6997,"nodeType":"Block","src":"21661:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"21717:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6992,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"21682:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6996,"nodeType":"RevertStatement","src":"21675:48:23"}]}}]},"documentation":{"id":6975,"nodeType":"StructuredDocumentation","src":"21199:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7000,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:23","nodeType":"FunctionDefinition","parameters":{"id":6978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6977,"mutability":"mutable","name":"value","nameLocation":"21541:5:23","nodeType":"VariableDeclaration","scope":7000,"src":"21534:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6976,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:23"},"returnParameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6980,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:23","nodeType":"VariableDeclaration","scope":7000,"src":"21571:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6979,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:23"},"scope":7639,"src":"21516:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7025,"nodeType":"Block","src":"22137:150:23","statements":[{"expression":{"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"22147:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"22167:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7009,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:23","typeDescriptions":{}}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7014,"nodeType":"ExpressionStatement","src":"22147:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7015,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7006,"src":"22187:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"22201:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7024,"nodeType":"IfStatement","src":"22183:98:23","trueBody":{"id":7023,"nodeType":"Block","src":"22208:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"22264:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7018,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"22229:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7022,"nodeType":"RevertStatement","src":"22222:48:23"}]}}]},"documentation":{"id":7001,"nodeType":"StructuredDocumentation","src":"21746:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7026,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:23","nodeType":"FunctionDefinition","parameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"value","nameLocation":"22088:5:23","nodeType":"VariableDeclaration","scope":7026,"src":"22081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7002,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:23"},"returnParameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:23","nodeType":"VariableDeclaration","scope":7026,"src":"22118:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7005,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:23"},"scope":7639,"src":"22063:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7051,"nodeType":"Block","src":"22684:150:23","statements":[{"expression":{"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"22694:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"22714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7035,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:23","typeDescriptions":{}}},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7040,"nodeType":"ExpressionStatement","src":"22694:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"22734:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"22748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7050,"nodeType":"IfStatement","src":"22730:98:23","trueBody":{"id":7049,"nodeType":"Block","src":"22755:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7029,"src":"22811:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7044,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"22776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7048,"nodeType":"RevertStatement","src":"22769:48:23"}]}}]},"documentation":{"id":7027,"nodeType":"StructuredDocumentation","src":"22293:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7052,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:23","nodeType":"FunctionDefinition","parameters":{"id":7030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7029,"mutability":"mutable","name":"value","nameLocation":"22635:5:23","nodeType":"VariableDeclaration","scope":7052,"src":"22628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7028,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:23"},"returnParameters":{"id":7033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:23","nodeType":"VariableDeclaration","scope":7052,"src":"22665:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7031,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:23"},"scope":7639,"src":"22610:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7077,"nodeType":"Block","src":"23231:150:23","statements":[{"expression":{"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"23241:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"23261:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7061,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:23","typeDescriptions":{}}},"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7066,"nodeType":"ExpressionStatement","src":"23241:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7067,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7058,"src":"23281:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"23295:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7076,"nodeType":"IfStatement","src":"23277:98:23","trueBody":{"id":7075,"nodeType":"Block","src":"23302:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"23358:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7070,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"23323:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7074,"nodeType":"RevertStatement","src":"23316:48:23"}]}}]},"documentation":{"id":7053,"nodeType":"StructuredDocumentation","src":"22840:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7078,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:23","nodeType":"FunctionDefinition","parameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7055,"mutability":"mutable","name":"value","nameLocation":"23182:5:23","nodeType":"VariableDeclaration","scope":7078,"src":"23175:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7054,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:23"},"returnParameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7058,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:23","nodeType":"VariableDeclaration","scope":7078,"src":"23212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7057,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:23"},"scope":7639,"src":"23157:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7103,"nodeType":"Block","src":"23778:150:23","statements":[{"expression":{"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"23788:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"23808:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7087,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:23","typeDescriptions":{}}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7092,"nodeType":"ExpressionStatement","src":"23788:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7093,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"23828:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"23842:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7102,"nodeType":"IfStatement","src":"23824:98:23","trueBody":{"id":7101,"nodeType":"Block","src":"23849:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7081,"src":"23905:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7096,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"23870:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7100,"nodeType":"RevertStatement","src":"23863:48:23"}]}}]},"documentation":{"id":7079,"nodeType":"StructuredDocumentation","src":"23387:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7104,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:23","nodeType":"FunctionDefinition","parameters":{"id":7082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7081,"mutability":"mutable","name":"value","nameLocation":"23729:5:23","nodeType":"VariableDeclaration","scope":7104,"src":"23722:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7080,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:23"},"returnParameters":{"id":7085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7084,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:23","nodeType":"VariableDeclaration","scope":7104,"src":"23759:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7083,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:23"},"scope":7639,"src":"23704:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7129,"nodeType":"Block","src":"24325:150:23","statements":[{"expression":{"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"24335:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"24355:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7113,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:23","typeDescriptions":{}}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7118,"nodeType":"ExpressionStatement","src":"24335:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7119,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"24375:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"24389:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7128,"nodeType":"IfStatement","src":"24371:98:23","trueBody":{"id":7127,"nodeType":"Block","src":"24396:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"24452:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7122,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24417:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7126,"nodeType":"RevertStatement","src":"24410:48:23"}]}}]},"documentation":{"id":7105,"nodeType":"StructuredDocumentation","src":"23934:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7130,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:23","nodeType":"FunctionDefinition","parameters":{"id":7108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7107,"mutability":"mutable","name":"value","nameLocation":"24276:5:23","nodeType":"VariableDeclaration","scope":7130,"src":"24269:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7106,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:23"},"returnParameters":{"id":7111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7110,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:23","nodeType":"VariableDeclaration","scope":7130,"src":"24306:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7109,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:23"},"scope":7639,"src":"24251:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7155,"nodeType":"Block","src":"24872:150:23","statements":[{"expression":{"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"24882:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"24902:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7139,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:23","typeDescriptions":{}}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7144,"nodeType":"ExpressionStatement","src":"24882:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7145,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"24922:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"24936:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7154,"nodeType":"IfStatement","src":"24918:98:23","trueBody":{"id":7153,"nodeType":"Block","src":"24943:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"24999:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7148,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"24964:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"RevertStatement","src":"24957:48:23"}]}}]},"documentation":{"id":7131,"nodeType":"StructuredDocumentation","src":"24481:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7156,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:23","nodeType":"FunctionDefinition","parameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7133,"mutability":"mutable","name":"value","nameLocation":"24823:5:23","nodeType":"VariableDeclaration","scope":7156,"src":"24816:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7132,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:23"},"returnParameters":{"id":7137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7136,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:23","nodeType":"VariableDeclaration","scope":7156,"src":"24853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7135,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:23"},"scope":7639,"src":"24798:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7181,"nodeType":"Block","src":"25419:150:23","statements":[{"expression":{"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"25429:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"25449:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7165,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:23","typeDescriptions":{}}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7170,"nodeType":"ExpressionStatement","src":"25429:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7171,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7162,"src":"25469:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"25483:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7180,"nodeType":"IfStatement","src":"25465:98:23","trueBody":{"id":7179,"nodeType":"Block","src":"25490:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7159,"src":"25546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7174,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"25511:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7178,"nodeType":"RevertStatement","src":"25504:48:23"}]}}]},"documentation":{"id":7157,"nodeType":"StructuredDocumentation","src":"25028:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7182,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:23","nodeType":"FunctionDefinition","parameters":{"id":7160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7159,"mutability":"mutable","name":"value","nameLocation":"25370:5:23","nodeType":"VariableDeclaration","scope":7182,"src":"25363:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7158,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:23"},"returnParameters":{"id":7163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7162,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:23","nodeType":"VariableDeclaration","scope":7182,"src":"25400:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7161,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:23"},"scope":7639,"src":"25345:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7207,"nodeType":"Block","src":"25966:150:23","statements":[{"expression":{"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"25976:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"25996:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7191,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:23","typeDescriptions":{}}},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7196,"nodeType":"ExpressionStatement","src":"25976:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7188,"src":"26016:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"26030:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7206,"nodeType":"IfStatement","src":"26012:98:23","trueBody":{"id":7205,"nodeType":"Block","src":"26037:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"26093:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7200,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26058:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7204,"nodeType":"RevertStatement","src":"26051:48:23"}]}}]},"documentation":{"id":7183,"nodeType":"StructuredDocumentation","src":"25575:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7208,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:23","nodeType":"FunctionDefinition","parameters":{"id":7186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7185,"mutability":"mutable","name":"value","nameLocation":"25917:5:23","nodeType":"VariableDeclaration","scope":7208,"src":"25910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7184,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:23"},"returnParameters":{"id":7189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7188,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:23","nodeType":"VariableDeclaration","scope":7208,"src":"25947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7187,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:23"},"scope":7639,"src":"25892:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7233,"nodeType":"Block","src":"26513:150:23","statements":[{"expression":{"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"26523:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"26543:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7217,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:23","typeDescriptions":{}}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7222,"nodeType":"ExpressionStatement","src":"26523:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7223,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"26563:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"26577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7232,"nodeType":"IfStatement","src":"26559:98:23","trueBody":{"id":7231,"nodeType":"Block","src":"26584:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"26640:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7226,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"26605:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7230,"nodeType":"RevertStatement","src":"26598:48:23"}]}}]},"documentation":{"id":7209,"nodeType":"StructuredDocumentation","src":"26122:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7234,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:23","nodeType":"FunctionDefinition","parameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7211,"mutability":"mutable","name":"value","nameLocation":"26464:5:23","nodeType":"VariableDeclaration","scope":7234,"src":"26457:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7210,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:23"},"returnParameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:23","nodeType":"VariableDeclaration","scope":7234,"src":"26494:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7213,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:23"},"scope":7639,"src":"26439:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7259,"nodeType":"Block","src":"27060:150:23","statements":[{"expression":{"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"27070:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27090:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7243,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:23","typeDescriptions":{}}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7248,"nodeType":"ExpressionStatement","src":"27070:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7249,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7240,"src":"27110:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27124:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7258,"nodeType":"IfStatement","src":"27106:98:23","trueBody":{"id":7257,"nodeType":"Block","src":"27131:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7237,"src":"27187:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7252,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27152:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7256,"nodeType":"RevertStatement","src":"27145:48:23"}]}}]},"documentation":{"id":7235,"nodeType":"StructuredDocumentation","src":"26669:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7260,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:23","nodeType":"FunctionDefinition","parameters":{"id":7238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7237,"mutability":"mutable","name":"value","nameLocation":"27011:5:23","nodeType":"VariableDeclaration","scope":7260,"src":"27004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7236,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:23"},"returnParameters":{"id":7241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7240,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:23","nodeType":"VariableDeclaration","scope":7260,"src":"27041:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7239,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:23"},"scope":7639,"src":"26986:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7285,"nodeType":"Block","src":"27607:150:23","statements":[{"expression":{"id":7273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"27617:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"27637:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7269,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:23","typeDescriptions":{}}},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7274,"nodeType":"ExpressionStatement","src":"27617:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7275,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7266,"src":"27657:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"27671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7284,"nodeType":"IfStatement","src":"27653:98:23","trueBody":{"id":7283,"nodeType":"Block","src":"27678:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"27734:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7278,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"27699:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7282,"nodeType":"RevertStatement","src":"27692:48:23"}]}}]},"documentation":{"id":7261,"nodeType":"StructuredDocumentation","src":"27216:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:23","nodeType":"FunctionDefinition","parameters":{"id":7264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"value","nameLocation":"27558:5:23","nodeType":"VariableDeclaration","scope":7286,"src":"27551:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7262,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:23"},"returnParameters":{"id":7267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7266,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:23","nodeType":"VariableDeclaration","scope":7286,"src":"27588:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7265,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:23"},"scope":7639,"src":"27533:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7311,"nodeType":"Block","src":"28147:148:23","statements":[{"expression":{"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"28157:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"28176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7295,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:23","typeDescriptions":{}}},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7300,"nodeType":"ExpressionStatement","src":"28157:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7301,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"28196:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"28210:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7310,"nodeType":"IfStatement","src":"28192:97:23","trueBody":{"id":7309,"nodeType":"Block","src":"28217:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7289,"src":"28272:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7304,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"28238:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7308,"nodeType":"RevertStatement","src":"28231:47:23"}]}}]},"documentation":{"id":7287,"nodeType":"StructuredDocumentation","src":"27763:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7312,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:23","nodeType":"FunctionDefinition","parameters":{"id":7290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7289,"mutability":"mutable","name":"value","nameLocation":"28099:5:23","nodeType":"VariableDeclaration","scope":7312,"src":"28092:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7288,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:23"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:23","nodeType":"VariableDeclaration","scope":7312,"src":"28129:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7291,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:23"},"scope":7639,"src":"28075:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7337,"nodeType":"Block","src":"28685:148:23","statements":[{"expression":{"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"28695:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"28714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7321,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:23","typeDescriptions":{}}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7326,"nodeType":"ExpressionStatement","src":"28695:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7327,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7318,"src":"28734:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"28748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7336,"nodeType":"IfStatement","src":"28730:97:23","trueBody":{"id":7335,"nodeType":"Block","src":"28755:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7315,"src":"28810:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7330,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"28776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7334,"nodeType":"RevertStatement","src":"28769:47:23"}]}}]},"documentation":{"id":7313,"nodeType":"StructuredDocumentation","src":"28301:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7338,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:23","nodeType":"FunctionDefinition","parameters":{"id":7316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7315,"mutability":"mutable","name":"value","nameLocation":"28637:5:23","nodeType":"VariableDeclaration","scope":7338,"src":"28630:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7314,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:23"},"returnParameters":{"id":7319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7318,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:23","nodeType":"VariableDeclaration","scope":7338,"src":"28667:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7317,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:23"},"scope":7639,"src":"28613:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7363,"nodeType":"Block","src":"29223:148:23","statements":[{"expression":{"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"29233:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"29252:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7347,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:23","typeDescriptions":{}}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7352,"nodeType":"ExpressionStatement","src":"29233:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7353,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"29272:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"29286:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7362,"nodeType":"IfStatement","src":"29268:97:23","trueBody":{"id":7361,"nodeType":"Block","src":"29293:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"29348:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7356,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"29314:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7360,"nodeType":"RevertStatement","src":"29307:47:23"}]}}]},"documentation":{"id":7339,"nodeType":"StructuredDocumentation","src":"28839:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7364,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:23","nodeType":"FunctionDefinition","parameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"value","nameLocation":"29175:5:23","nodeType":"VariableDeclaration","scope":7364,"src":"29168:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7340,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:23"},"returnParameters":{"id":7345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:23","nodeType":"VariableDeclaration","scope":7364,"src":"29205:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7343,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:23"},"scope":7639,"src":"29151:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7389,"nodeType":"Block","src":"29761:148:23","statements":[{"expression":{"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"29771:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"29790:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7373,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:23","typeDescriptions":{}}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7378,"nodeType":"ExpressionStatement","src":"29771:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7379,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7370,"src":"29810:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"29824:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7388,"nodeType":"IfStatement","src":"29806:97:23","trueBody":{"id":7387,"nodeType":"Block","src":"29831:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"29886:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7382,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"29852:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7386,"nodeType":"RevertStatement","src":"29845:47:23"}]}}]},"documentation":{"id":7365,"nodeType":"StructuredDocumentation","src":"29377:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7390,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:23","nodeType":"FunctionDefinition","parameters":{"id":7368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7367,"mutability":"mutable","name":"value","nameLocation":"29713:5:23","nodeType":"VariableDeclaration","scope":7390,"src":"29706:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7366,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:23"},"returnParameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7370,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:23","nodeType":"VariableDeclaration","scope":7390,"src":"29743:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7369,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:23"},"scope":7639,"src":"29689:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7415,"nodeType":"Block","src":"30299:148:23","statements":[{"expression":{"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"30309:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"30328:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7399,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:23","typeDescriptions":{}}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7404,"nodeType":"ExpressionStatement","src":"30309:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7405,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7396,"src":"30348:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7414,"nodeType":"IfStatement","src":"30344:97:23","trueBody":{"id":7413,"nodeType":"Block","src":"30369:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7393,"src":"30424:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7408,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"30390:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7412,"nodeType":"RevertStatement","src":"30383:47:23"}]}}]},"documentation":{"id":7391,"nodeType":"StructuredDocumentation","src":"29915:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7416,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:23","nodeType":"FunctionDefinition","parameters":{"id":7394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7393,"mutability":"mutable","name":"value","nameLocation":"30251:5:23","nodeType":"VariableDeclaration","scope":7416,"src":"30244:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7392,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:23"},"returnParameters":{"id":7397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7396,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:23","nodeType":"VariableDeclaration","scope":7416,"src":"30281:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7395,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:23"},"scope":7639,"src":"30227:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7441,"nodeType":"Block","src":"30837:148:23","statements":[{"expression":{"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"30847:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"30866:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7425,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:23","typeDescriptions":{}}},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7430,"nodeType":"ExpressionStatement","src":"30847:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7431,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7422,"src":"30886:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"30900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7440,"nodeType":"IfStatement","src":"30882:97:23","trueBody":{"id":7439,"nodeType":"Block","src":"30907:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"30962:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7434,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"30928:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7438,"nodeType":"RevertStatement","src":"30921:47:23"}]}}]},"documentation":{"id":7417,"nodeType":"StructuredDocumentation","src":"30453:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7442,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:23","nodeType":"FunctionDefinition","parameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"value","nameLocation":"30789:5:23","nodeType":"VariableDeclaration","scope":7442,"src":"30782:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7418,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:23"},"returnParameters":{"id":7423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7422,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:23","nodeType":"VariableDeclaration","scope":7442,"src":"30819:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7421,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:23"},"scope":7639,"src":"30765:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7467,"nodeType":"Block","src":"31375:148:23","statements":[{"expression":{"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"31385:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"31404:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7451,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:23","typeDescriptions":{}}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7456,"nodeType":"ExpressionStatement","src":"31385:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7457,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7448,"src":"31424:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"31438:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7466,"nodeType":"IfStatement","src":"31420:97:23","trueBody":{"id":7465,"nodeType":"Block","src":"31445:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"31500:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7460,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"31466:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7464,"nodeType":"RevertStatement","src":"31459:47:23"}]}}]},"documentation":{"id":7443,"nodeType":"StructuredDocumentation","src":"30991:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7468,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:23","nodeType":"FunctionDefinition","parameters":{"id":7446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7445,"mutability":"mutable","name":"value","nameLocation":"31327:5:23","nodeType":"VariableDeclaration","scope":7468,"src":"31320:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7444,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:23"},"returnParameters":{"id":7449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7448,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:23","nodeType":"VariableDeclaration","scope":7468,"src":"31357:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7447,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:23"},"scope":7639,"src":"31303:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7493,"nodeType":"Block","src":"31913:148:23","statements":[{"expression":{"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"31923:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"31942:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7477,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:23","typeDescriptions":{}}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7482,"nodeType":"ExpressionStatement","src":"31923:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7483,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7474,"src":"31962:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"31976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7492,"nodeType":"IfStatement","src":"31958:97:23","trueBody":{"id":7491,"nodeType":"Block","src":"31983:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7488,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"32038:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7486,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"32004:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7490,"nodeType":"RevertStatement","src":"31997:47:23"}]}}]},"documentation":{"id":7469,"nodeType":"StructuredDocumentation","src":"31529:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7494,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:23","nodeType":"FunctionDefinition","parameters":{"id":7472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7471,"mutability":"mutable","name":"value","nameLocation":"31865:5:23","nodeType":"VariableDeclaration","scope":7494,"src":"31858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7470,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:23"},"returnParameters":{"id":7475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7474,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:23","nodeType":"VariableDeclaration","scope":7494,"src":"31895:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7473,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:23"},"scope":7639,"src":"31841:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7519,"nodeType":"Block","src":"32451:148:23","statements":[{"expression":{"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"32461:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"32480:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7503,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:23","typeDescriptions":{}}},"id":7506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7508,"nodeType":"ExpressionStatement","src":"32461:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7500,"src":"32500:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"32514:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7518,"nodeType":"IfStatement","src":"32496:97:23","trueBody":{"id":7517,"nodeType":"Block","src":"32521:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7497,"src":"32576:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7512,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"32542:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7516,"nodeType":"RevertStatement","src":"32535:47:23"}]}}]},"documentation":{"id":7495,"nodeType":"StructuredDocumentation","src":"32067:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7520,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:23","nodeType":"FunctionDefinition","parameters":{"id":7498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7497,"mutability":"mutable","name":"value","nameLocation":"32403:5:23","nodeType":"VariableDeclaration","scope":7520,"src":"32396:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7496,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:23"},"returnParameters":{"id":7501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7500,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:23","nodeType":"VariableDeclaration","scope":7520,"src":"32433:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7499,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:23"},"scope":7639,"src":"32379:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7545,"nodeType":"Block","src":"32989:148:23","statements":[{"expression":{"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"32999:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"33018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7529,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:23","typeDescriptions":{}}},"id":7532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7534,"nodeType":"ExpressionStatement","src":"32999:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7535,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7526,"src":"33038:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"33052:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7544,"nodeType":"IfStatement","src":"33034:97:23","trueBody":{"id":7543,"nodeType":"Block","src":"33059:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7523,"src":"33114:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7538,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"33080:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7542,"nodeType":"RevertStatement","src":"33073:47:23"}]}}]},"documentation":{"id":7521,"nodeType":"StructuredDocumentation","src":"32605:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7546,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:23","nodeType":"FunctionDefinition","parameters":{"id":7524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7523,"mutability":"mutable","name":"value","nameLocation":"32941:5:23","nodeType":"VariableDeclaration","scope":7546,"src":"32934:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7522,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:23"},"returnParameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7526,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:23","nodeType":"VariableDeclaration","scope":7546,"src":"32971:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7525,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:23"},"scope":7639,"src":"32917:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7571,"nodeType":"Block","src":"33527:148:23","statements":[{"expression":{"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"33537:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"33556:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7555,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:23","typeDescriptions":{}}},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7560,"nodeType":"ExpressionStatement","src":"33537:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7561,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"33576:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"33590:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7570,"nodeType":"IfStatement","src":"33572:97:23","trueBody":{"id":7569,"nodeType":"Block","src":"33597:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"33652:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7564,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"33618:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7568,"nodeType":"RevertStatement","src":"33611:47:23"}]}}]},"documentation":{"id":7547,"nodeType":"StructuredDocumentation","src":"33143:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7572,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:23","nodeType":"FunctionDefinition","parameters":{"id":7550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7549,"mutability":"mutable","name":"value","nameLocation":"33479:5:23","nodeType":"VariableDeclaration","scope":7572,"src":"33472:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7548,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:23"},"returnParameters":{"id":7553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:23","nodeType":"VariableDeclaration","scope":7572,"src":"33509:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7551,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:23"},"scope":7639,"src":"33455:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7597,"nodeType":"Block","src":"34058:146:23","statements":[{"expression":{"id":7585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"34068:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"34086:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7581,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:23","typeDescriptions":{}}},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7586,"nodeType":"ExpressionStatement","src":"34068:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7587,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7578,"src":"34106:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"34120:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7596,"nodeType":"IfStatement","src":"34102:96:23","trueBody":{"id":7595,"nodeType":"Block","src":"34127:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"34181:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7590,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"34148:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7594,"nodeType":"RevertStatement","src":"34141:46:23"}]}}]},"documentation":{"id":7573,"nodeType":"StructuredDocumentation","src":"33681:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7598,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:23","nodeType":"FunctionDefinition","parameters":{"id":7576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7575,"mutability":"mutable","name":"value","nameLocation":"34011:5:23","nodeType":"VariableDeclaration","scope":7598,"src":"34004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7574,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:23"},"returnParameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7578,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:23","nodeType":"VariableDeclaration","scope":7598,"src":"34041:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7577,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:23"},"scope":7639,"src":"33988:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7627,"nodeType":"Block","src":"34444:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"34557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7610,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:23","memberName":"max","nodeType":"MemberAccess","src":"34573:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7607,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:23","typeDescriptions":{}}},"id":7614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7621,"nodeType":"IfStatement","src":"34553:105:23","trueBody":{"id":7620,"nodeType":"Block","src":"34592:66:23","statements":[{"errorCall":{"arguments":[{"id":7617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"34641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7616,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5901,"src":"34613:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7619,"nodeType":"RevertStatement","src":"34606:41:23"}]}},{"expression":{"arguments":[{"id":7624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"34681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7622,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:23","typeDescriptions":{}}},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7605,"id":7626,"nodeType":"Return","src":"34667:20:23"}]},"documentation":{"id":7599,"nodeType":"StructuredDocumentation","src":"34210:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7628,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:23","nodeType":"FunctionDefinition","parameters":{"id":7602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7601,"mutability":"mutable","name":"value","nameLocation":"34406:5:23","nodeType":"VariableDeclaration","scope":7628,"src":"34398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:23"},"returnParameters":{"id":7605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7628,"src":"34436:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7603,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:23"},"scope":7639,"src":"34380:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7637,"nodeType":"Block","src":"34853:87:23","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:23","statements":[{"nodeType":"YulAssignment","src":"34902:22:23","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:23"},"nodeType":"YulFunctionCall","src":"34914:9:23"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:23"},"nodeType":"YulFunctionCall","src":"34907:17:23"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7631,"isOffset":false,"isSlot":false,"src":"34921:1:23","valueSize":1},{"declaration":7634,"isOffset":false,"isSlot":false,"src":"34902:1:23","valueSize":1}],"flags":["memory-safe"],"id":7636,"nodeType":"InlineAssembly","src":"34863:71:23"}]},"documentation":{"id":7629,"nodeType":"StructuredDocumentation","src":"34700:90:23","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7638,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:23","nodeType":"FunctionDefinition","parameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7631,"mutability":"mutable","name":"b","nameLocation":"34816:1:23","nodeType":"VariableDeclaration","scope":7638,"src":"34811:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7630,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:23"},"returnParameters":{"id":7635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7634,"mutability":"mutable","name":"u","nameLocation":"34850:1:23","nodeType":"VariableDeclaration","scope":7638,"src":"34842:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7633,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:23"},"scope":7639,"src":"34795:145:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7640,"src":"769:34173:23","usedErrors":[5884,5889,5896,5901],"usedEvents":[]}],"src":"192:34751:23"},"id":23},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7639],"SignedMath":[7783]},"id":7784,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7641,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7643,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7784,"sourceUnit":7640,"src":"135:40:24","symbolAliases":[{"foreign":{"id":7642,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"143:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7644,"nodeType":"StructuredDocumentation","src":"177:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7783,"linearizedBaseContracts":[7783],"name":"SignedMath","nameLocation":"266:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":7673,"nodeType":"Block","src":"746:215:24","statements":[{"id":7672,"nodeType":"UncheckedBlock","src":"756:199:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7656,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"894:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7657,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7649,"src":"900:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7651,"src":"904:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7665,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"932:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7663,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7639,"src":"916:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7639_$","typeString":"type(library SafeCast)"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7638,"src":"916:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7661,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:24","typeDescriptions":{}}},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7655,"id":7671,"nodeType":"Return","src":"887:57:24"}]}]},"documentation":{"id":7645,"nodeType":"StructuredDocumentation","src":"283:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7674,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:24","nodeType":"FunctionDefinition","parameters":{"id":7652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7647,"mutability":"mutable","name":"condition","nameLocation":"684:9:24","nodeType":"VariableDeclaration","scope":7674,"src":"679:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7646,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7649,"mutability":"mutable","name":"a","nameLocation":"702:1:24","nodeType":"VariableDeclaration","scope":7674,"src":"695:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7648,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7651,"mutability":"mutable","name":"b","nameLocation":"712:1:24","nodeType":"VariableDeclaration","scope":7674,"src":"705:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7650,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:24"},"returnParameters":{"id":7655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7674,"src":"738:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7653,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:24"},"scope":7783,"src":"662:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7692,"nodeType":"Block","src":"1102:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"1127:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"1131:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7688,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7677,"src":"1134:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7689,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7679,"src":"1137:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7684,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"1119:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7683,"id":7691,"nodeType":"Return","src":"1112:27:24"}]},"documentation":{"id":7675,"nodeType":"StructuredDocumentation","src":"967:66:24","text":" @dev Returns the largest of two signed numbers."},"id":7693,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:24","nodeType":"FunctionDefinition","parameters":{"id":7680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"a","nameLocation":"1058:1:24","nodeType":"VariableDeclaration","scope":7693,"src":"1051:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7676,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7679,"mutability":"mutable","name":"b","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":7693,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7678,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:24"},"returnParameters":{"id":7683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7693,"src":"1094:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7681,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:24"},"scope":7783,"src":"1038:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7711,"nodeType":"Block","src":"1288:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"1313:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"1317:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7707,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7696,"src":"1320:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7708,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7698,"src":"1323:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7703,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7674,"src":"1305:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7702,"id":7710,"nodeType":"Return","src":"1298:27:24"}]},"documentation":{"id":7694,"nodeType":"StructuredDocumentation","src":"1152:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":7712,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:24","nodeType":"FunctionDefinition","parameters":{"id":7699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7696,"mutability":"mutable","name":"a","nameLocation":"1244:1:24","nodeType":"VariableDeclaration","scope":7712,"src":"1237:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7695,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7698,"mutability":"mutable","name":"b","nameLocation":"1254:1:24","nodeType":"VariableDeclaration","scope":7712,"src":"1247:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7697,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:24"},"returnParameters":{"id":7702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7712,"src":"1280:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7700,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:24"},"scope":7783,"src":"1224:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7755,"nodeType":"Block","src":"1537:162:24","statements":[{"assignments":[7723],"declarations":[{"constant":false,"id":7723,"mutability":"mutable","name":"x","nameLocation":"1606:1:24","nodeType":"VariableDeclaration","scope":7755,"src":"1599:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7722,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7736,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"1611:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7725,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"1615:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7728,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"1622:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7729,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"1626:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7737,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7742,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"1671:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{}}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7738,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:24","typeDescriptions":{}}},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7747,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"1685:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7748,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7717,"src":"1689:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7752,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7721,"id":7754,"nodeType":"Return","src":"1644:48:24"}]},"documentation":{"id":7713,"nodeType":"StructuredDocumentation","src":"1338:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7756,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:24","nodeType":"FunctionDefinition","parameters":{"id":7718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7715,"mutability":"mutable","name":"a","nameLocation":"1493:1:24","nodeType":"VariableDeclaration","scope":7756,"src":"1486:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7714,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7717,"mutability":"mutable","name":"b","nameLocation":"1503:1:24","nodeType":"VariableDeclaration","scope":7756,"src":"1496:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7716,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:24"},"returnParameters":{"id":7721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7756,"src":"1529:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7719,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:24"},"scope":7783,"src":"1469:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7781,"nodeType":"Block","src":"1843:767:24","statements":[{"id":7780,"nodeType":"UncheckedBlock","src":"1853:751:24","statements":[{"assignments":[7765],"declarations":[{"constant":false,"id":7765,"mutability":"mutable","name":"mask","nameLocation":"2424:4:24","nodeType":"VariableDeclaration","scope":7780,"src":"2417:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7764,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7769,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7766,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7759,"src":"2431:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7772,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7759,"src":"2576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7773,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"2580:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7776,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7765,"src":"2588:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7770,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:24","typeDescriptions":{}}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7763,"id":7779,"nodeType":"Return","src":"2560:33:24"}]}]},"documentation":{"id":7757,"nodeType":"StructuredDocumentation","src":"1705:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7782,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:24","nodeType":"FunctionDefinition","parameters":{"id":7760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7759,"mutability":"mutable","name":"n","nameLocation":"1808:1:24","nodeType":"VariableDeclaration","scope":7782,"src":"1801:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7758,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:24"},"returnParameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7782,"src":"1834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:24"},"scope":7783,"src":"1788:822:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7784,"src":"258:2354:24","usedErrors":[],"usedEvents":[]}],"src":"109:2504:24"},"id":24},"contracts/DexaCreator.sol":{"ast":{"absolutePath":"contracts/DexaCreator.sol","exportedSymbols":{"AccessControl":[295],"Context":[1693],"DexaCreator":[8121],"ERC165":[4241],"IAccessControl":[378],"Initializable":[808]},"id":8122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7785,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7786,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8122,"sourceUnit":296,"src":"58:58:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":7787,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8122,"sourceUnit":809,"src":"117:63:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7788,"name":"AccessControl","nameLocations":["206:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"206:13:25"},"id":7789,"nodeType":"InheritanceSpecifier","src":"206:13:25"},{"baseName":{"id":7790,"name":"Initializable","nameLocations":["221:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"221:13:25"},"id":7791,"nodeType":"InheritanceSpecifier","src":"221:13:25"}],"canonicalName":"DexaCreator","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8121,"linearizedBaseContracts":[8121,808,295,4241,4253,378,1693],"name":"DexaCreator","nameLocation":"191:11:25","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"8aeda25a","id":7796,"mutability":"constant","name":"CREATOR_ROLE","nameLocation":"265:12:25","nodeType":"VariableDeclaration","scope":8121,"src":"241:64:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"241:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"43524541544f525f524f4c45","id":7794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"290:14:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f","typeString":"literal_string \"CREATOR_ROLE\""},"value":"CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f","typeString":"literal_string \"CREATOR_ROLE\""}],"id":7793,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"280:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"280:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"980e3af8","id":7801,"mutability":"constant","name":"DEXA_CREATOR_ROLE","nameLocation":"335:17:25","nodeType":"VariableDeclaration","scope":8121,"src":"311:74:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"311:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f43524541544f525f524f4c45","id":7799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"365:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412","typeString":"literal_string \"DEXA_CREATOR_ROLE\""},"value":"DEXA_CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412","typeString":"literal_string \"DEXA_CREATOR_ROLE\""}],"id":7798,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"355:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"355:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2576bdea","id":7806,"mutability":"constant","name":"DEXA_FEEDS_ROLE","nameLocation":"415:15:25","nodeType":"VariableDeclaration","scope":8121,"src":"391:70:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"391:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f46454544535f524f4c45","id":7804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"443:17:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e","typeString":"literal_string \"DEXA_FEEDS_ROLE\""},"value":"DEXA_FEEDS_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e","typeString":"literal_string \"DEXA_FEEDS_ROLE\""}],"id":7803,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"433:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"433:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a720640e","id":7811,"mutability":"constant","name":"DEXA_MESSENGER_ROLE","nameLocation":"491:19:25","nodeType":"VariableDeclaration","scope":8121,"src":"467:78:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"467:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f4d455353454e4745525f524f4c45","id":7809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"523:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304","typeString":"literal_string \"DEXA_MESSENGER_ROLE\""},"value":"DEXA_MESSENGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304","typeString":"literal_string \"DEXA_MESSENGER_ROLE\""}],"id":7808,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"513:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"513:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"5e0118b6","id":7816,"mutability":"constant","name":"DEXA_STORAGE_ROLE","nameLocation":"575:17:25","nodeType":"VariableDeclaration","scope":8121,"src":"551:74:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"551:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f53544f524147455f524f4c45","id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"605:19:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e","typeString":"literal_string \"DEXA_STORAGE_ROLE\""},"value":"DEXA_STORAGE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e","typeString":"literal_string \"DEXA_STORAGE_ROLE\""}],"id":7813,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"595:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f22b9ab6","id":7819,"mutability":"constant","name":"ERROR_DUPLICATE_RESOURCE","nameLocation":"655:24:25","nodeType":"VariableDeclaration","scope":8121,"src":"632:75:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7817,"name":"string","nodeType":"ElementaryTypeName","src":"632:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5265736f7572636520616c726561647920657869737473","id":7818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"682:25:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_77922fe2359d620f3781bdfe3550b29424670d07c19435a5a7dda327707b3afa","typeString":"literal_string \"Resource already exists\""},"value":"Resource already exists"},"visibility":"public"},{"constant":true,"functionSelector":"362c3ab8","id":7822,"mutability":"constant","name":"ERROR_INVALID_PRICE","nameLocation":"736:19:25","nodeType":"VariableDeclaration","scope":8121,"src":"713:60:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7820,"name":"string","nodeType":"ElementaryTypeName","src":"713:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e76616c6964207072696365","id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"758:15:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"},"visibility":"public"},{"constant":true,"functionSelector":"fc23413a","id":7825,"mutability":"constant","name":"ERROR_INVALID_STRING","nameLocation":"802:20:25","nodeType":"VariableDeclaration","scope":8121,"src":"779:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7823,"name":"string","nodeType":"ElementaryTypeName","src":"779:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e76616c696420737472696e67","id":7824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"825:16:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b160238081206773c5bab1cdc2a87be66274c7fedcd3354587f71f7e7e5b0bb","typeString":"literal_string \"Invalid string\""},"value":"Invalid string"},"visibility":"public"},{"constant":true,"functionSelector":"ad4fb5cd","id":7828,"mutability":"constant","name":"ERROR_NOT_FOUND","nameLocation":"870:15:25","nodeType":"VariableDeclaration","scope":8121,"src":"847:61:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7826,"name":"string","nodeType":"ElementaryTypeName","src":"847:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5265736f75726365206e6f7420666f756e64","id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:20:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d39e6caf1f8c34c707a2a9080eedd88e4333823fa1b23a8e2a9a348004ce9660","typeString":"literal_string \"Resource not found\""},"value":"Resource not found"},"visibility":"public"},{"constant":true,"functionSelector":"5c107264","id":7831,"mutability":"constant","name":"ERROR_PROCESS_FAILED","nameLocation":"937:20:25","nodeType":"VariableDeclaration","scope":8121,"src":"914:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7829,"name":"string","nodeType":"ElementaryTypeName","src":"914:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"50726f63657373206661696c6564","id":7830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"960:16:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb71e143b54bde3929537107bdc086f922ede2ca67fb15f7bf50f237ac7a2a00","typeString":"literal_string \"Process failed\""},"value":"Process failed"},"visibility":"public"},{"constant":true,"functionSelector":"34b89fb7","id":7834,"mutability":"constant","name":"ERROR_UNAUTHORISED_ACCESS","nameLocation":"1005:25:25","nodeType":"VariableDeclaration","scope":8121,"src":"982:72:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7832,"name":"string","nodeType":"ElementaryTypeName","src":"982:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"556e617574686f726973656420616363657373","id":7833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1033:21:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_db40c0ff7f62168120bbfe6a2920affa7a236fbb74fa94c9878c953968a5459f","typeString":"literal_string \"Unauthorised access\""},"value":"Unauthorised access"},"visibility":"public"},{"constant":false,"functionSelector":"978bbdb9","id":7836,"mutability":"mutable","name":"feeRate","nameLocation":"1076:7:25","nodeType":"VariableDeclaration","scope":8121,"src":"1061:22:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"d82faa48","id":7838,"mutability":"mutable","name":"creatorCount","nameLocation":"1104:12:25","nodeType":"VariableDeclaration","scope":8121,"src":"1089:27:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"b77bf600","id":7840,"mutability":"mutable","name":"transactionCount","nameLocation":"1137:16:25","nodeType":"VariableDeclaration","scope":8121,"src":"1122:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1122:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":7842,"mutability":"mutable","name":"owner","nameLocation":"1174:5:25","nodeType":"VariableDeclaration","scope":8121,"src":"1159:20:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7841,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b7660cd3","id":7846,"mutability":"mutable","name":"_allowedTokens","nameLocation":"1218:14:25","nodeType":"VariableDeclaration","scope":8121,"src":"1186:46:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7845,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7843,"name":"address","nodeType":"ElementaryTypeName","src":"1194:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1186:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7844,"name":"bool","nodeType":"ElementaryTypeName","src":"1205:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"canonicalName":"DexaCreator.TransactionType","id":7851,"members":[{"id":7847,"name":"DEPOSIT","nameLocation":"1262:7:25","nodeType":"EnumValue","src":"1262:7:25"},{"id":7848,"name":"WITHDRAWAL","nameLocation":"1271:10:25","nodeType":"EnumValue","src":"1271:10:25"},{"id":7849,"name":"TRANSFER","nameLocation":"1283:8:25","nodeType":"EnumValue","src":"1283:8:25"},{"id":7850,"name":"TIP","nameLocation":"1293:3:25","nodeType":"EnumValue","src":"1293:3:25"}],"name":"TransactionType","nameLocation":"1244:15:25","nodeType":"EnumDefinition","src":"1239:59:25"},{"canonicalName":"DexaCreator.Creator","id":7877,"members":[{"constant":false,"id":7853,"mutability":"mutable","name":"name","nameLocation":"1336:4:25","nodeType":"VariableDeclaration","scope":7877,"src":"1329:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7852,"name":"string","nodeType":"ElementaryTypeName","src":"1329:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7855,"mutability":"mutable","name":"username","nameLocation":"1357:8:25","nodeType":"VariableDeclaration","scope":7877,"src":"1350:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7854,"name":"string","nodeType":"ElementaryTypeName","src":"1350:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7857,"mutability":"mutable","name":"wallet","nameLocation":"1391:6:25","nodeType":"VariableDeclaration","scope":7877,"src":"1375:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7856,"name":"address","nodeType":"ElementaryTypeName","src":"1375:15:25","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7859,"mutability":"mutable","name":"pfp","nameLocation":"1414:3:25","nodeType":"VariableDeclaration","scope":7877,"src":"1407:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7858,"name":"string","nodeType":"ElementaryTypeName","src":"1407:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7861,"mutability":"mutable","name":"banner","nameLocation":"1434:6:25","nodeType":"VariableDeclaration","scope":7877,"src":"1427:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7860,"name":"string","nodeType":"ElementaryTypeName","src":"1427:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7863,"mutability":"mutable","name":"bio","nameLocation":"1457:3:25","nodeType":"VariableDeclaration","scope":7877,"src":"1450:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7862,"name":"string","nodeType":"ElementaryTypeName","src":"1450:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7865,"mutability":"mutable","name":"website","nameLocation":"1477:7:25","nodeType":"VariableDeclaration","scope":7877,"src":"1470:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7864,"name":"string","nodeType":"ElementaryTypeName","src":"1470:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7867,"mutability":"mutable","name":"dexaURI","nameLocation":"1501:7:25","nodeType":"VariableDeclaration","scope":7877,"src":"1494:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7866,"name":"string","nodeType":"ElementaryTypeName","src":"1494:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7869,"mutability":"mutable","name":"createdAt","nameLocation":"1526:9:25","nodeType":"VariableDeclaration","scope":7877,"src":"1518:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1518:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7871,"mutability":"mutable","name":"updatedAt","nameLocation":"1553:9:25","nodeType":"VariableDeclaration","scope":7877,"src":"1545:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7870,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7874,"mutability":"mutable","name":"friends","nameLocation":"1582:7:25","nodeType":"VariableDeclaration","scope":7877,"src":"1572:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7872,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7873,"nodeType":"ArrayTypeName","src":"1572:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":7876,"mutability":"mutable","name":"isVerified","nameLocation":"1604:10:25","nodeType":"VariableDeclaration","scope":7877,"src":"1599:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7875,"name":"bool","nodeType":"ElementaryTypeName","src":"1599:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Creator","nameLocation":"1311:7:25","nodeType":"StructDefinition","scope":8121,"src":"1304:317:25","visibility":"public"},{"canonicalName":"DexaCreator.TokenBalance","id":7882,"members":[{"constant":false,"id":7879,"mutability":"mutable","name":"tokenAddress","nameLocation":"1665:12:25","nodeType":"VariableDeclaration","scope":7882,"src":"1657:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7878,"name":"address","nodeType":"ElementaryTypeName","src":"1657:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7881,"mutability":"mutable","name":"balance","nameLocation":"1695:7:25","nodeType":"VariableDeclaration","scope":7882,"src":"1687:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7880,"name":"uint256","nodeType":"ElementaryTypeName","src":"1687:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenBalance","nameLocation":"1634:12:25","nodeType":"StructDefinition","scope":8121,"src":"1627:82:25","visibility":"public"},{"canonicalName":"DexaCreator.Transaction","id":7900,"members":[{"constant":false,"id":7884,"mutability":"mutable","name":"txId","nameLocation":"1752:4:25","nodeType":"VariableDeclaration","scope":7900,"src":"1744:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7887,"mutability":"mutable","name":"txType","nameLocation":"1782:6:25","nodeType":"VariableDeclaration","scope":7900,"src":"1766:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TransactionType_$7851","typeString":"enum DexaCreator.TransactionType"},"typeName":{"id":7886,"nodeType":"UserDefinedTypeName","pathNode":{"id":7885,"name":"TransactionType","nameLocations":["1766:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":7851,"src":"1766:15:25"},"referencedDeclaration":7851,"src":"1766:15:25","typeDescriptions":{"typeIdentifier":"t_enum$_TransactionType_$7851","typeString":"enum DexaCreator.TransactionType"}},"visibility":"internal"},{"constant":false,"id":7889,"mutability":"mutable","name":"txFrom","nameLocation":"1814:6:25","nodeType":"VariableDeclaration","scope":7900,"src":"1798:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7888,"name":"address","nodeType":"ElementaryTypeName","src":"1798:15:25","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7891,"mutability":"mutable","name":"txTo","nameLocation":"1846:4:25","nodeType":"VariableDeclaration","scope":7900,"src":"1830:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7890,"name":"address","nodeType":"ElementaryTypeName","src":"1830:15:25","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7893,"mutability":"mutable","name":"txAmount","nameLocation":"1868:8:25","nodeType":"VariableDeclaration","scope":7900,"src":"1860:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1860:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7895,"mutability":"mutable","name":"txFee","nameLocation":"1894:5:25","nodeType":"VariableDeclaration","scope":7900,"src":"1886:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7897,"mutability":"mutable","name":"txDate","nameLocation":"1917:6:25","nodeType":"VariableDeclaration","scope":7900,"src":"1909:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7899,"mutability":"mutable","name":"tokenAddress","nameLocation":"1941:12:25","nodeType":"VariableDeclaration","scope":7900,"src":"1933:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7898,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Transaction","nameLocation":"1722:11:25","nodeType":"StructDefinition","scope":8121,"src":"1715:245:25","visibility":"public"},{"anonymous":false,"eventSelector":"21dd0ecdd49765309a51fb77b31ada340d3bf2d7b6cf11cda8c66234933e8fb7","id":7908,"name":"NewCreator","nameLocation":"1972:10:25","nodeType":"EventDefinition","parameters":{"id":7907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7902,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1999:7:25","nodeType":"VariableDeclaration","scope":7908,"src":"1983:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7901,"name":"address","nodeType":"ElementaryTypeName","src":"1983:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7904,"indexed":false,"mutability":"mutable","name":"displayName","nameLocation":"2015:11:25","nodeType":"VariableDeclaration","scope":7908,"src":"2008:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7903,"name":"string","nodeType":"ElementaryTypeName","src":"2008:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7906,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"2035:8:25","nodeType":"VariableDeclaration","scope":7908,"src":"2028:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7905,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1982:62:25"},"src":"1966:79:25"},{"anonymous":false,"eventSelector":"b350d0d3cc6f5cc474a2710606827715fbe5da00a0fd930d377f5455f5dc11cf","id":7914,"name":"BalanceCredited","nameLocation":"2056:15:25","nodeType":"EventDefinition","parameters":{"id":7913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7910,"indexed":true,"mutability":"mutable","name":"userAddress","nameLocation":"2088:11:25","nodeType":"VariableDeclaration","scope":7914,"src":"2072:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7909,"name":"address","nodeType":"ElementaryTypeName","src":"2072:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7912,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2109:6:25","nodeType":"VariableDeclaration","scope":7914,"src":"2101:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2071:45:25"},"src":"2050:67:25"},{"anonymous":false,"eventSelector":"ebaa7a52b533569bce0e101f939dbe7d1425254d6275eb4e0e66f7b5eff92f11","id":7920,"name":"BalanceDebited","nameLocation":"2128:14:25","nodeType":"EventDefinition","parameters":{"id":7919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7916,"indexed":true,"mutability":"mutable","name":"userAddress","nameLocation":"2159:11:25","nodeType":"VariableDeclaration","scope":7920,"src":"2143:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7915,"name":"address","nodeType":"ElementaryTypeName","src":"2143:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7918,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2180:6:25","nodeType":"VariableDeclaration","scope":7920,"src":"2172:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2172:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2142:45:25"},"src":"2122:66:25"},{"anonymous":false,"eventSelector":"d1ba4ac2e2a11b5101f6cb4d978f514a155b421e8ec396d2d9abaf0bb02917ee","id":7928,"name":"Transferred","nameLocation":"2199:11:25","nodeType":"EventDefinition","parameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7922,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2227:4:25","nodeType":"VariableDeclaration","scope":7928,"src":"2211:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7921,"name":"address","nodeType":"ElementaryTypeName","src":"2211:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7924,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2249:2:25","nodeType":"VariableDeclaration","scope":7928,"src":"2233:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7923,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7926,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2261:6:25","nodeType":"VariableDeclaration","scope":7928,"src":"2253:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2210:58:25"},"src":"2193:76:25"},{"anonymous":false,"eventSelector":"784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4","id":7932,"name":"TokenAdded","nameLocation":"2280:10:25","nodeType":"EventDefinition","parameters":{"id":7931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7930,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"2307:12:25","nodeType":"VariableDeclaration","scope":7932,"src":"2291:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7929,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2290:30:25"},"src":"2274:47:25"},{"anonymous":false,"eventSelector":"4cbf63661b9bca06bb1bc09ebdfb1a33aa8aff422f3eb30472e71f26719e2bcb","id":7938,"name":"TokenAddressAdded","nameLocation":"2332:17:25","nodeType":"EventDefinition","parameters":{"id":7937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7934,"indexed":true,"mutability":"mutable","name":"userAddress","nameLocation":"2366:11:25","nodeType":"VariableDeclaration","scope":7938,"src":"2350:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7933,"name":"address","nodeType":"ElementaryTypeName","src":"2350:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7936,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"2395:12:25","nodeType":"VariableDeclaration","scope":7938,"src":"2379:28:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7935,"name":"address","nodeType":"ElementaryTypeName","src":"2379:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2349:59:25"},"src":"2326:83:25"},{"body":{"id":7952,"nodeType":"Block","src":"2429:87:25","statements":[{"expression":{"arguments":[{"id":7942,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2450:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2470:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2474:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2470:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7941,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2439:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7946,"nodeType":"ExpressionStatement","src":"2439:42:25"},{"expression":{"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7947,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"2491:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7948,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2499:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2503:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2499:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2491:18:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7951,"nodeType":"ExpressionStatement","src":"2491:18:25"}]},"id":7953,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7939,"nodeType":"ParameterList","parameters":[],"src":"2426:2:25"},"returnParameters":{"id":7940,"nodeType":"ParameterList","parameters":[],"src":"2429:0:25"},"scope":8121,"src":"2415:101:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7965,"nodeType":"Block","src":"2581:55:25","statements":[{"expression":{"arguments":[{"id":7961,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2602:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7962,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7955,"src":"2622:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7960,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2591:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2591:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7964,"nodeType":"ExpressionStatement","src":"2591:38:25"}]},"functionSelector":"2ce70722","id":7966,"implemented":true,"kind":"function","modifiers":[{"id":7958,"kind":"modifierInvocation","modifierName":{"id":7957,"name":"initializer","nameLocations":["2569:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"2569:11:25"},"nodeType":"ModifierInvocation","src":"2569:11:25"}],"name":"init_dexa_base","nameLocation":"2531:14:25","nodeType":"FunctionDefinition","parameters":{"id":7956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"_admin","nameLocation":"2554:6:25","nodeType":"VariableDeclaration","scope":7966,"src":"2546:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7954,"name":"address","nodeType":"ElementaryTypeName","src":"2546:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2545:16:25"},"returnParameters":{"id":7959,"nodeType":"ParameterList","parameters":[],"src":"2581:0:25"},"scope":8121,"src":"2522:114:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7978,"nodeType":"Block","src":"2704:54:25","statements":[{"expression":{"arguments":[{"id":7974,"name":"DEXA_CREATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7801,"src":"2725:17:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7975,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7968,"src":"2744:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7973,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2714:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7977,"nodeType":"ExpressionStatement","src":"2714:37:25"}]},"functionSelector":"263ef5b9","id":7979,"implemented":true,"kind":"function","modifiers":[{"id":7971,"kind":"modifierInvocation","modifierName":{"id":7970,"name":"initializer","nameLocations":["2692:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":648,"src":"2692:11:25"},"nodeType":"ModifierInvocation","src":"2692:11:25"}],"name":"init_dexa_creator","nameLocation":"2651:17:25","nodeType":"FunctionDefinition","parameters":{"id":7969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7968,"mutability":"mutable","name":"_admin","nameLocation":"2677:6:25","nodeType":"VariableDeclaration","scope":7979,"src":"2669:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7967,"name":"address","nodeType":"ElementaryTypeName","src":"2669:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2668:16:25"},"returnParameters":{"id":7972,"nodeType":"ParameterList","parameters":[],"src":"2704:0:25"},"scope":8121,"src":"2642:116:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7999,"nodeType":"Block","src":"2863:112:25","statements":[{"expression":{"arguments":[{"id":7990,"name":"DEXA_FEEDS_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7806,"src":"2884:15:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7991,"name":"_dexaFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7981,"src":"2901:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7989,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2873:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2873:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7993,"nodeType":"ExpressionStatement","src":"2873:38:25"},{"expression":{"arguments":[{"id":7995,"name":"DEXA_MESSENGER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"2932:19:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7996,"name":"_dexaMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7983,"src":"2953:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7994,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2921:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2921:47:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7998,"nodeType":"ExpressionStatement","src":"2921:47:25"}]},"functionSelector":"847741a0","id":8000,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7986,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2843:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7987,"kind":"modifierInvocation","modifierName":{"id":7985,"name":"onlyRole","nameLocations":["2834:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"2834:8:25"},"nodeType":"ModifierInvocation","src":"2834:28:25"}],"name":"init_roles","nameLocation":"2773:10:25","nodeType":"FunctionDefinition","parameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7981,"mutability":"mutable","name":"_dexaFeed","nameLocation":"2792:9:25","nodeType":"VariableDeclaration","scope":8000,"src":"2784:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7980,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7983,"mutability":"mutable","name":"_dexaMessenger","nameLocation":"2811:14:25","nodeType":"VariableDeclaration","scope":8000,"src":"2803:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7982,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2783:43:25"},"returnParameters":{"id":7988,"nodeType":"ParameterList","parameters":[],"src":"2863:0:25"},"scope":8121,"src":"2764:211:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8051,"nodeType":"Block","src":"3091:317:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8012,"name":"displayName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"3115:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3109:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8010,"name":"bytes","nodeType":"ElementaryTypeName","src":"3109:5:25","typeDescriptions":{}}},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3109:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3128:6:25","memberName":"length","nodeType":"MemberAccess","src":"3109:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3137:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3109:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8017,"name":"ERROR_INVALID_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"3140:20:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8009,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3101:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3101:60:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8019,"nodeType":"ExpressionStatement","src":"3101:60:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8023,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"3185:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3179:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8021,"name":"bytes","nodeType":"ElementaryTypeName","src":"3179:5:25","typeDescriptions":{}}},"id":8024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3179:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:6:25","memberName":"length","nodeType":"MemberAccess","src":"3179:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3204:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3179:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8028,"name":"ERROR_INVALID_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7825,"src":"3207:20:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3171:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3171:57:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8030,"nodeType":"ExpressionStatement","src":"3171:57:25"},{"expression":{"arguments":[{"arguments":[{"id":8033,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"3257:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8032,"name":"isNameFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8062,"src":"3246:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory) view returns (bool)"}},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3246:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8035,"name":"ERROR_DUPLICATE_RESOURCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"3268:24:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8031,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3238:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8037,"nodeType":"ExpressionStatement","src":"3238:55:25"},{"expression":{"arguments":[{"id":8039,"name":"CREATOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7796,"src":"3315:12:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8040,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3329:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3333:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3329:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8038,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"3304:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8043,"nodeType":"ExpressionStatement","src":"3304:36:25"},{"eventCall":{"arguments":[{"expression":{"id":8045,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3367:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3371:6:25","memberName":"sender","nodeType":"MemberAccess","src":"3367:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8047,"name":"displayName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8002,"src":"3379:11:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8048,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"3392:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8044,"name":"NewCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"3356:10:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory)"}},"id":8049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:45:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8050,"nodeType":"EmitStatement","src":"3351:50:25"}]},"functionSelector":"a1c864e9","id":8052,"implemented":true,"kind":"function","modifiers":[],"name":"registerCreator","nameLocation":"2990:15:25","nodeType":"FunctionDefinition","parameters":{"id":8007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8002,"mutability":"mutable","name":"displayName","nameLocation":"3020:11:25","nodeType":"VariableDeclaration","scope":8052,"src":"3006:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8001,"name":"string","nodeType":"ElementaryTypeName","src":"3006:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8004,"mutability":"mutable","name":"username","nameLocation":"3047:8:25","nodeType":"VariableDeclaration","scope":8052,"src":"3033:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8003,"name":"string","nodeType":"ElementaryTypeName","src":"3033:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8006,"mutability":"mutable","name":"dexaProfile","nameLocation":"3071:11:25","nodeType":"VariableDeclaration","scope":8052,"src":"3057:25:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8005,"name":"string","nodeType":"ElementaryTypeName","src":"3057:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3005:78:25"},"returnParameters":{"id":8008,"nodeType":"ParameterList","parameters":[],"src":"3091:0:25"},"scope":8121,"src":"2981:427:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8061,"nodeType":"Block","src":"3485:66:25","statements":[{"expression":{"hexValue":"74727565","id":8059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3502:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8058,"id":8060,"nodeType":"Return","src":"3495:11:25"}]},"functionSelector":"08a1cd05","id":8062,"implemented":true,"kind":"function","modifiers":[],"name":"isNameFree","nameLocation":"3423:10:25","nodeType":"FunctionDefinition","parameters":{"id":8055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8054,"mutability":"mutable","name":"username","nameLocation":"3448:8:25","nodeType":"VariableDeclaration","scope":8062,"src":"3434:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8053,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3433:24:25"},"returnParameters":{"id":8058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8062,"src":"3479:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8056,"name":"bool","nodeType":"ElementaryTypeName","src":"3479:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3478:6:25"},"scope":8121,"src":"3414:137:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8098,"nodeType":"Block","src":"3653:172:25","statements":[{"body":{"id":8096,"nodeType":"Block","src":"3710:109:25","statements":[{"expression":{"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8082,"name":"_allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7846,"src":"3724:14:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8086,"indexExpression":{"baseExpression":{"id":8083,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"3739:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8085,"indexExpression":{"id":8084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"3752:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3739:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3724:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3758:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3724:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8089,"nodeType":"ExpressionStatement","src":"3724:38:25"},{"eventCall":{"arguments":[{"baseExpression":{"id":8091,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"3792:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8093,"indexExpression":{"id":8092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"3805:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3792:15:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8090,"name":"TokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"3781:10:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3781:27:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8095,"nodeType":"EmitStatement","src":"3776:32:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"3680:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8076,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"3684:12:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3697:6:25","memberName":"length","nodeType":"MemberAccess","src":"3684:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8097,"initializationExpression":{"assignments":[8072],"declarations":[{"constant":false,"id":8072,"mutability":"mutable","name":"i","nameLocation":"3673:1:25","nodeType":"VariableDeclaration","scope":8097,"src":"3668:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8071,"name":"uint","nodeType":"ElementaryTypeName","src":"3668:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8074,"initialValue":{"hexValue":"30","id":8073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3677:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3668:10:25"},"loopExpression":{"expression":{"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3705:3:25","subExpression":{"id":8079,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"3705:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8081,"nodeType":"ExpressionStatement","src":"3705:3:25"},"nodeType":"ForStatement","src":"3663:156:25"}]},"functionSelector":"89c72556","id":8099,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8068,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3633:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8069,"kind":"modifierInvocation","modifierName":{"id":8067,"name":"onlyRole","nameLocations":["3624:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3624:8:25"},"nodeType":"ModifierInvocation","src":"3624:28:25"}],"name":"addTokenToWhitelist","nameLocation":"3566:19:25","nodeType":"FunctionDefinition","parameters":{"id":8066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8065,"mutability":"mutable","name":"tokenAddress","nameLocation":"3603:12:25","nodeType":"VariableDeclaration","scope":8099,"src":"3586:29:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8063,"name":"address","nodeType":"ElementaryTypeName","src":"3586:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8064,"nodeType":"ArrayTypeName","src":"3586:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3585:31:25"},"returnParameters":{"id":8070,"nodeType":"ParameterList","parameters":[],"src":"3653:0:25"},"scope":8121,"src":"3557:268:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8111,"nodeType":"Block","src":"3906:35:25","statements":[{"expression":{"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8107,"name":"feeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7836,"src":"3916:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8108,"name":"_feeRate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8101,"src":"3926:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3916:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8110,"nodeType":"ExpressionStatement","src":"3916:18:25"}]},"functionSelector":"8beb60b6","id":8112,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8104,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"3886:18:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8105,"kind":"modifierInvocation","modifierName":{"id":8103,"name":"onlyRole","nameLocations":["3877:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"3877:8:25"},"nodeType":"ModifierInvocation","src":"3877:28:25"}],"name":"setAdminFee","nameLocation":"3840:11:25","nodeType":"FunctionDefinition","parameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8101,"mutability":"mutable","name":"_feeRate","nameLocation":"3860:8:25","nodeType":"VariableDeclaration","scope":8112,"src":"3852:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8100,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3851:18:25"},"returnParameters":{"id":8106,"nodeType":"ParameterList","parameters":[],"src":"3906:0:25"},"scope":8121,"src":"3831:110:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8115,"nodeType":"Block","src":"3974:2:25","statements":[]},"id":8116,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8113,"nodeType":"ParameterList","parameters":[],"src":"3954:2:25"},"returnParameters":{"id":8114,"nodeType":"ParameterList","parameters":[],"src":"3974:0:25"},"scope":8121,"src":"3947:29:25","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8119,"nodeType":"Block","src":"4009:2:25","statements":[]},"id":8120,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8117,"nodeType":"ParameterList","parameters":[],"src":"3989:2:25"},"returnParameters":{"id":8118,"nodeType":"ParameterList","parameters":[],"src":"4009:0:25"},"scope":8121,"src":"3981:30:25","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":8122,"src":"182:3831:25","usedErrors":[305,308,557,560],"usedEvents":[317,326,335,565,7908,7914,7920,7928,7932,7938]}],"src":"32:3982:25"},"id":25},"contracts/DexaFeeds.sol":{"ast":{"absolutePath":"contracts/DexaFeeds.sol","exportedSymbols":{"AccessControl":[295],"Context":[1693],"DexaCreator":[8121],"DexaFeeds":[8316],"ECDSA":[3904],"EIP712":[4131],"ERC165":[4241],"ERC20":[1323],"ERC20Burnable":[1447],"ERC20Permit":[1601],"FeedsToken":[8449],"IAccessControl":[378],"IERC20":[1401],"IERC20Errors":[445],"IERC20Metadata":[1627],"IERC20Permit":[1663],"Initializable":[808],"Nonces":[1761]},"id":8317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8123,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8124,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8317,"sourceUnit":296,"src":"58:58:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":8125,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8317,"sourceUnit":809,"src":"117:63:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/DexaCreator.sol","file":"./DexaCreator.sol","id":8126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8317,"sourceUnit":8122,"src":"181:27:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/FeedsToken.sol","file":"./FeedsToken.sol","id":8127,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8317,"sourceUnit":8450,"src":"209:26:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8128,"name":"AccessControl","nameLocations":["259:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"259:13:26"},"id":8129,"nodeType":"InheritanceSpecifier","src":"259:13:26"},{"baseName":{"id":8130,"name":"Initializable","nameLocations":["274:13:26"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"274:13:26"},"id":8131,"nodeType":"InheritanceSpecifier","src":"274:13:26"}],"canonicalName":"DexaFeeds","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8316,"linearizedBaseContracts":[8316,808,295,4241,4253,378,1693],"name":"DexaFeeds","nameLocation":"246:9:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"8aeda25a","id":8136,"mutability":"constant","name":"CREATOR_ROLE","nameLocation":"318:12:26","nodeType":"VariableDeclaration","scope":8316,"src":"294:64:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"294:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"43524541544f525f524f4c45","id":8134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"343:14:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f","typeString":"literal_string \"CREATOR_ROLE\""},"value":"CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f","typeString":"literal_string \"CREATOR_ROLE\""}],"id":8133,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"333:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"333:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"980e3af8","id":8141,"mutability":"constant","name":"DEXA_CREATOR_ROLE","nameLocation":"388:17:26","nodeType":"VariableDeclaration","scope":8316,"src":"364:74:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"364:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f43524541544f525f524f4c45","id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"418:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412","typeString":"literal_string \"DEXA_CREATOR_ROLE\""},"value":"DEXA_CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412","typeString":"literal_string \"DEXA_CREATOR_ROLE\""}],"id":8138,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"408:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"408:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2576bdea","id":8146,"mutability":"constant","name":"DEXA_FEEDS_ROLE","nameLocation":"468:15:26","nodeType":"VariableDeclaration","scope":8316,"src":"444:70:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8142,"name":"bytes32","nodeType":"ElementaryTypeName","src":"444:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f46454544535f524f4c45","id":8144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"496:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e","typeString":"literal_string \"DEXA_FEEDS_ROLE\""},"value":"DEXA_FEEDS_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e","typeString":"literal_string \"DEXA_FEEDS_ROLE\""}],"id":8143,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"486:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"486:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a720640e","id":8151,"mutability":"constant","name":"DEXA_MESSENGER_ROLE","nameLocation":"544:19:26","nodeType":"VariableDeclaration","scope":8316,"src":"520:78:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"520:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f4d455353454e4745525f524f4c45","id":8149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"576:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304","typeString":"literal_string \"DEXA_MESSENGER_ROLE\""},"value":"DEXA_MESSENGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304","typeString":"literal_string \"DEXA_MESSENGER_ROLE\""}],"id":8148,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"566:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"566:32:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"5e0118b6","id":8156,"mutability":"constant","name":"DEXA_STORAGE_ROLE","nameLocation":"628:17:26","nodeType":"VariableDeclaration","scope":8316,"src":"604:74:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"604:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f53544f524147455f524f4c45","id":8154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"658:19:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e","typeString":"literal_string \"DEXA_STORAGE_ROLE\""},"value":"DEXA_STORAGE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e","typeString":"literal_string \"DEXA_STORAGE_ROLE\""}],"id":8153,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"648:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"648:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f22b9ab6","id":8159,"mutability":"constant","name":"ERROR_DUPLICATE_RESOURCE","nameLocation":"708:24:26","nodeType":"VariableDeclaration","scope":8316,"src":"685:75:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8157,"name":"string","nodeType":"ElementaryTypeName","src":"685:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5265736f7572636520616c726561647920657869737473","id":8158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"735:25:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_77922fe2359d620f3781bdfe3550b29424670d07c19435a5a7dda327707b3afa","typeString":"literal_string \"Resource already exists\""},"value":"Resource already exists"},"visibility":"public"},{"constant":true,"functionSelector":"362c3ab8","id":8162,"mutability":"constant","name":"ERROR_INVALID_PRICE","nameLocation":"789:19:26","nodeType":"VariableDeclaration","scope":8316,"src":"766:60:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8160,"name":"string","nodeType":"ElementaryTypeName","src":"766:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e76616c6964207072696365","id":8161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"811:15:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"},"visibility":"public"},{"constant":true,"functionSelector":"fc23413a","id":8165,"mutability":"constant","name":"ERROR_INVALID_STRING","nameLocation":"855:20:26","nodeType":"VariableDeclaration","scope":8316,"src":"832:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8163,"name":"string","nodeType":"ElementaryTypeName","src":"832:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e76616c696420737472696e67","id":8164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"878:16:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b160238081206773c5bab1cdc2a87be66274c7fedcd3354587f71f7e7e5b0bb","typeString":"literal_string \"Invalid string\""},"value":"Invalid string"},"visibility":"public"},{"constant":true,"functionSelector":"ad4fb5cd","id":8168,"mutability":"constant","name":"ERROR_NOT_FOUND","nameLocation":"923:15:26","nodeType":"VariableDeclaration","scope":8316,"src":"900:61:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8166,"name":"string","nodeType":"ElementaryTypeName","src":"900:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5265736f75726365206e6f7420666f756e64","id":8167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"941:20:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d39e6caf1f8c34c707a2a9080eedd88e4333823fa1b23a8e2a9a348004ce9660","typeString":"literal_string \"Resource not found\""},"value":"Resource not found"},"visibility":"public"},{"constant":true,"functionSelector":"5c107264","id":8171,"mutability":"constant","name":"ERROR_PROCESS_FAILED","nameLocation":"990:20:26","nodeType":"VariableDeclaration","scope":8316,"src":"967:62:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8169,"name":"string","nodeType":"ElementaryTypeName","src":"967:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"50726f63657373206661696c6564","id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1013:16:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb71e143b54bde3929537107bdc086f922ede2ca67fb15f7bf50f237ac7a2a00","typeString":"literal_string \"Process failed\""},"value":"Process failed"},"visibility":"public"},{"constant":true,"functionSelector":"34b89fb7","id":8174,"mutability":"constant","name":"ERROR_UNAUTHORISED_ACCESS","nameLocation":"1058:25:26","nodeType":"VariableDeclaration","scope":8316,"src":"1035:72:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8172,"name":"string","nodeType":"ElementaryTypeName","src":"1035:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"556e617574686f726973656420616363657373","id":8173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1086:21:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_db40c0ff7f62168120bbfe6a2920affa7a236fbb74fa94c9878c953968a5459f","typeString":"literal_string \"Unauthorised access\""},"value":"Unauthorised access"},"visibility":"public"},{"constant":false,"functionSelector":"978bbdb9","id":8176,"mutability":"mutable","name":"feeRate","nameLocation":"1129:7:26","nodeType":"VariableDeclaration","scope":8316,"src":"1114:22:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"3e7a3e3e","id":8179,"mutability":"mutable","name":"dexaCreator","nameLocation":"1161:11:26","nodeType":"VariableDeclaration","scope":8316,"src":"1142:30:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"},"typeName":{"id":8178,"nodeType":"UserDefinedTypeName","pathNode":{"id":8177,"name":"DexaCreator","nameLocations":["1142:11:26"],"nodeType":"IdentifierPath","referencedDeclaration":8121,"src":"1142:11:26"},"referencedDeclaration":8121,"src":"1142:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"visibility":"public"},{"constant":false,"functionSelector":"caf601e1","id":8182,"mutability":"mutable","name":"feedsToken","nameLocation":"1196:10:26","nodeType":"VariableDeclaration","scope":8316,"src":"1178:28:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_FeedsToken_$8449","typeString":"contract FeedsToken"},"typeName":{"id":8181,"nodeType":"UserDefinedTypeName","pathNode":{"id":8180,"name":"FeedsToken","nameLocations":["1178:10:26"],"nodeType":"IdentifierPath","referencedDeclaration":8449,"src":"1178:10:26"},"referencedDeclaration":8449,"src":"1178:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_FeedsToken_$8449","typeString":"contract FeedsToken"}},"visibility":"public"},{"constant":false,"functionSelector":"b7660cd3","id":8186,"mutability":"mutable","name":"_allowedTokens","nameLocation":"1245:14:26","nodeType":"VariableDeclaration","scope":8316,"src":"1213:46:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8185,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8183,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1213:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8184,"name":"bool","nodeType":"ElementaryTypeName","src":"1232:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"2cc394885248eed3ead5f4f762a2c4a56a94e9a2580615a4d8add23bfb8803dc","id":8198,"name":"PostMinted","nameLocation":"1272:10:26","nodeType":"EventDefinition","parameters":{"id":8197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1299:7:26","nodeType":"VariableDeclaration","scope":8198,"src":"1283:23:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8187,"name":"address","nodeType":"ElementaryTypeName","src":"1283:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8190,"indexed":true,"mutability":"mutable","name":"postId","nameLocation":"1324:6:26","nodeType":"VariableDeclaration","scope":8198,"src":"1308:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8192,"indexed":false,"mutability":"mutable","name":"gnfdId","nameLocation":"1339:6:26","nodeType":"VariableDeclaration","scope":8198,"src":"1332:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8191,"name":"string","nodeType":"ElementaryTypeName","src":"1332:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8194,"indexed":false,"mutability":"mutable","name":"remintToken","nameLocation":"1355:11:26","nodeType":"VariableDeclaration","scope":8198,"src":"1347:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8193,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8196,"indexed":false,"mutability":"mutable","name":"remintPrice","nameLocation":"1376:11:26","nodeType":"VariableDeclaration","scope":8198,"src":"1368:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1368:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1282:106:26"},"src":"1266:123:26"},{"anonymous":false,"eventSelector":"d2e912b53f3381b61c4378f71b1e64a828bc699876e3c87b5292249f8386a4cf","id":8216,"name":"Tipped","nameLocation":"1400:6:26","nodeType":"EventDefinition","parameters":{"id":8215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8200,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1423:4:26","nodeType":"VariableDeclaration","scope":8216,"src":"1407:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8199,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8202,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1445:2:26","nodeType":"VariableDeclaration","scope":8216,"src":"1429:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8201,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8204,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1457:6:26","nodeType":"VariableDeclaration","scope":8216,"src":"1449:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8203,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8206,"indexed":true,"mutability":"mutable","name":"postId","nameLocation":"1481:6:26","nodeType":"VariableDeclaration","scope":8216,"src":"1465:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1465:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8208,"indexed":false,"mutability":"mutable","name":"offChainId","nameLocation":"1496:10:26","nodeType":"VariableDeclaration","scope":8216,"src":"1489:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8207,"name":"string","nodeType":"ElementaryTypeName","src":"1489:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8210,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1515:7:26","nodeType":"VariableDeclaration","scope":8216,"src":"1508:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8209,"name":"string","nodeType":"ElementaryTypeName","src":"1508:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8212,"indexed":false,"mutability":"mutable","name":"tippedToken","nameLocation":"1532:11:26","nodeType":"VariableDeclaration","scope":8216,"src":"1524:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8211,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8214,"indexed":false,"mutability":"mutable","name":"tipId","nameLocation":"1553:5:26","nodeType":"VariableDeclaration","scope":8216,"src":"1545:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1406:153:26"},"src":"1394:166:26"},{"anonymous":false,"eventSelector":"784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4","id":8220,"name":"TokenAdded","nameLocation":"1571:10:26","nodeType":"EventDefinition","parameters":{"id":8219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8218,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"1598:12:26","nodeType":"VariableDeclaration","scope":8220,"src":"1582:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8217,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1581:30:26"},"src":"1565:47:26"},{"body":{"id":8245,"nodeType":"Block","src":"1681:154:26","statements":[{"expression":{"arguments":[{"id":8228,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1702:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1722:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1722:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8227,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1691:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8232,"nodeType":"ExpressionStatement","src":"1691:42:26"},{"expression":{"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8233,"name":"dexaCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8179,"src":"1743:11:26","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8235,"name":"_dexaCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"1769:12:26","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8234,"name":"DexaCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"1757:11:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DexaCreator_$8121_$","typeString":"type(contract DexaCreator)"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"src":"1743:39:26","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"id":8238,"nodeType":"ExpressionStatement","src":"1743:39:26"},{"expression":{"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8239,"name":"feedsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8182,"src":"1792:10:26","typeDescriptions":{"typeIdentifier":"t_contract$_FeedsToken_$8449","typeString":"contract FeedsToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8241,"name":"_feedsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8224,"src":"1816:11:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8240,"name":"FeedsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"1805:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FeedsToken_$8449_$","typeString":"type(contract FeedsToken)"}},"id":8242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:23:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_FeedsToken_$8449","typeString":"contract FeedsToken"}},"src":"1792:36:26","typeDescriptions":{"typeIdentifier":"t_contract$_FeedsToken_$8449","typeString":"contract FeedsToken"}},"id":8244,"nodeType":"ExpressionStatement","src":"1792:36:26"}]},"id":8246,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8222,"mutability":"mutable","name":"_dexaCreator","nameLocation":"1646:12:26","nodeType":"VariableDeclaration","scope":8246,"src":"1630:28:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8221,"name":"address","nodeType":"ElementaryTypeName","src":"1630:15:26","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":8224,"mutability":"mutable","name":"_feedsToken","nameLocation":"1668:11:26","nodeType":"VariableDeclaration","scope":8246,"src":"1660:19:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8223,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:51:26"},"returnParameters":{"id":8226,"nodeType":"ParameterList","parameters":[],"src":"1681:0:26"},"scope":8316,"src":"1618:217:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8282,"nodeType":"Block","src":"1937:172:26","statements":[{"body":{"id":8280,"nodeType":"Block","src":"1994:109:26","statements":[{"expression":{"id":8272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8266,"name":"_allowedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"2008:14:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8270,"indexExpression":{"baseExpression":{"id":8267,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"2023:12:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8269,"indexExpression":{"id":8268,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"2036:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2023:15:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2008:31:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2042:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2008:38:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8273,"nodeType":"ExpressionStatement","src":"2008:38:26"},{"eventCall":{"arguments":[{"baseExpression":{"id":8275,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"2076:12:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8277,"indexExpression":{"id":8276,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"2089:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2076:15:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8274,"name":"TokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8220,"src":"2065:10:26","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2065:27:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8279,"nodeType":"EmitStatement","src":"2060:32:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8259,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"1964:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8260,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"1968:12:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1981:6:26","memberName":"length","nodeType":"MemberAccess","src":"1968:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1964:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8281,"initializationExpression":{"assignments":[8256],"declarations":[{"constant":false,"id":8256,"mutability":"mutable","name":"i","nameLocation":"1957:1:26","nodeType":"VariableDeclaration","scope":8281,"src":"1952:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8255,"name":"uint","nodeType":"ElementaryTypeName","src":"1952:4:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8258,"initialValue":{"hexValue":"30","id":8257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1952:10:26"},"loopExpression":{"expression":{"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1989:3:26","subExpression":{"id":8263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8256,"src":"1989:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8265,"nodeType":"ExpressionStatement","src":"1989:3:26"},"nodeType":"ForStatement","src":"1947:156:26"}]},"functionSelector":"89c72556","id":8283,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8252,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1917:18:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8253,"kind":"modifierInvocation","modifierName":{"id":8251,"name":"onlyRole","nameLocations":["1908:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"1908:8:26"},"nodeType":"ModifierInvocation","src":"1908:28:26"}],"name":"addTokenToWhitelist","nameLocation":"1850:19:26","nodeType":"FunctionDefinition","parameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"tokenAddress","nameLocation":"1887:12:26","nodeType":"VariableDeclaration","scope":8283,"src":"1870:29:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8247,"name":"address","nodeType":"ElementaryTypeName","src":"1870:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8248,"nodeType":"ArrayTypeName","src":"1870:9:26","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1869:31:26"},"returnParameters":{"id":8254,"nodeType":"ParameterList","parameters":[],"src":"1937:0:26"},"scope":8316,"src":"1841:268:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8314,"nodeType":"Block","src":"2209:178:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8295,"name":"commentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"2233:9:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2227:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8293,"name":"bytes","nodeType":"ElementaryTypeName","src":"2227:5:26","typeDescriptions":{}}},"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2227:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2244:6:26","memberName":"length","nodeType":"MemberAccess","src":"2227:23:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2253:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2227:27:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8300,"name":"ERROR_INVALID_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"2256:20:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8292,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2219:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8302,"nodeType":"ExpressionStatement","src":"2219:58:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8306,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"2301:7:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2295:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8304,"name":"bytes","nodeType":"ElementaryTypeName","src":"2295:5:26","typeDescriptions":{}}},"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2295:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2310:6:26","memberName":"length","nodeType":"MemberAccess","src":"2295:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2295:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8311,"name":"ERROR_INVALID_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"2322:20:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2287:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:56:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8313,"nodeType":"ExpressionStatement","src":"2287:56:26"}]},"functionSelector":"f8ebc039","id":8315,"implemented":true,"kind":"function","modifiers":[],"name":"commentOnPost","nameLocation":"2124:13:26","nodeType":"FunctionDefinition","parameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"postId","nameLocation":"2146:6:26","nodeType":"VariableDeclaration","scope":8315,"src":"2138:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"commentId","nameLocation":"2168:9:26","nodeType":"VariableDeclaration","scope":8315,"src":"2154:23:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8286,"name":"string","nodeType":"ElementaryTypeName","src":"2154:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8289,"mutability":"mutable","name":"content","nameLocation":"2193:7:26","nodeType":"VariableDeclaration","scope":8315,"src":"2179:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8288,"name":"string","nodeType":"ElementaryTypeName","src":"2179:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2137:64:26"},"returnParameters":{"id":8291,"nodeType":"ParameterList","parameters":[],"src":"2209:0:26"},"scope":8316,"src":"2115:272:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8317,"src":"237:2152:26","usedErrors":[305,308,557,560],"usedEvents":[317,326,335,565,8198,8216,8220]}],"src":"32:2358:26"},"id":26},"contracts/DexaMessenger.sol":{"ast":{"absolutePath":"contracts/DexaMessenger.sol","exportedSymbols":{"AccessControl":[295],"Context":[1693],"DexaCreator":[8121],"DexaMessenger":[8390],"ERC165":[4241],"IAccessControl":[378],"Initializable":[808]},"id":8391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8391,"sourceUnit":296,"src":"58:58:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":8320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8391,"sourceUnit":809,"src":"117:63:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/DexaCreator.sol","file":"./DexaCreator.sol","id":8321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8391,"sourceUnit":8122,"src":"181:27:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8322,"name":"AccessControl","nameLocations":["236:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"236:13:27"},"id":8323,"nodeType":"InheritanceSpecifier","src":"236:13:27"},{"baseName":{"id":8324,"name":"Initializable","nameLocations":["251:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":808,"src":"251:13:27"},"id":8325,"nodeType":"InheritanceSpecifier","src":"251:13:27"}],"canonicalName":"DexaMessenger","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8390,"linearizedBaseContracts":[8390,808,295,4241,4253,378,1693],"name":"DexaMessenger","nameLocation":"219:13:27","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"8aeda25a","id":8330,"mutability":"constant","name":"CREATOR_ROLE","nameLocation":"295:12:27","nodeType":"VariableDeclaration","scope":8390,"src":"271:64:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"271:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"43524541544f525f524f4c45","id":8328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"320:14:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f","typeString":"literal_string \"CREATOR_ROLE\""},"value":"CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f","typeString":"literal_string \"CREATOR_ROLE\""}],"id":8327,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"310:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"310:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"980e3af8","id":8335,"mutability":"constant","name":"DEXA_CREATOR_ROLE","nameLocation":"365:17:27","nodeType":"VariableDeclaration","scope":8390,"src":"341:74:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"341:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f43524541544f525f524f4c45","id":8333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"395:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412","typeString":"literal_string \"DEXA_CREATOR_ROLE\""},"value":"DEXA_CREATOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412","typeString":"literal_string \"DEXA_CREATOR_ROLE\""}],"id":8332,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"385:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"385:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"2576bdea","id":8340,"mutability":"constant","name":"DEXA_FEEDS_ROLE","nameLocation":"445:15:27","nodeType":"VariableDeclaration","scope":8390,"src":"421:70:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8336,"name":"bytes32","nodeType":"ElementaryTypeName","src":"421:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f46454544535f524f4c45","id":8338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"473:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e","typeString":"literal_string \"DEXA_FEEDS_ROLE\""},"value":"DEXA_FEEDS_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e","typeString":"literal_string \"DEXA_FEEDS_ROLE\""}],"id":8337,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"463:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"463:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"a720640e","id":8345,"mutability":"constant","name":"DEXA_MESSENGER_ROLE","nameLocation":"521:19:27","nodeType":"VariableDeclaration","scope":8390,"src":"497:78:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"497:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f4d455353454e4745525f524f4c45","id":8343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"553:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304","typeString":"literal_string \"DEXA_MESSENGER_ROLE\""},"value":"DEXA_MESSENGER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304","typeString":"literal_string \"DEXA_MESSENGER_ROLE\""}],"id":8342,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"543:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"543:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"5e0118b6","id":8350,"mutability":"constant","name":"DEXA_STORAGE_ROLE","nameLocation":"605:17:27","nodeType":"VariableDeclaration","scope":8390,"src":"581:74:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"581:7:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"444558415f53544f524147455f524f4c45","id":8348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"635:19:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e","typeString":"literal_string \"DEXA_STORAGE_ROLE\""},"value":"DEXA_STORAGE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e","typeString":"literal_string \"DEXA_STORAGE_ROLE\""}],"id":8347,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"625:9:27","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"625:30:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f22b9ab6","id":8353,"mutability":"constant","name":"ERROR_DUPLICATE_RESOURCE","nameLocation":"685:24:27","nodeType":"VariableDeclaration","scope":8390,"src":"662:75:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8351,"name":"string","nodeType":"ElementaryTypeName","src":"662:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5265736f7572636520616c726561647920657869737473","id":8352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"712:25:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_77922fe2359d620f3781bdfe3550b29424670d07c19435a5a7dda327707b3afa","typeString":"literal_string \"Resource already exists\""},"value":"Resource already exists"},"visibility":"public"},{"constant":true,"functionSelector":"362c3ab8","id":8356,"mutability":"constant","name":"ERROR_INVALID_PRICE","nameLocation":"766:19:27","nodeType":"VariableDeclaration","scope":8390,"src":"743:60:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8354,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e76616c6964207072696365","id":8355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"788:15:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"},"visibility":"public"},{"constant":true,"functionSelector":"fc23413a","id":8359,"mutability":"constant","name":"ERROR_INVALID_STRING","nameLocation":"832:20:27","nodeType":"VariableDeclaration","scope":8390,"src":"809:62:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8357,"name":"string","nodeType":"ElementaryTypeName","src":"809:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"496e76616c696420737472696e67","id":8358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"855:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b160238081206773c5bab1cdc2a87be66274c7fedcd3354587f71f7e7e5b0bb","typeString":"literal_string \"Invalid string\""},"value":"Invalid string"},"visibility":"public"},{"constant":true,"functionSelector":"ad4fb5cd","id":8362,"mutability":"constant","name":"ERROR_NOT_FOUND","nameLocation":"900:15:27","nodeType":"VariableDeclaration","scope":8390,"src":"877:61:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8360,"name":"string","nodeType":"ElementaryTypeName","src":"877:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"5265736f75726365206e6f7420666f756e64","id":8361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"918:20:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_d39e6caf1f8c34c707a2a9080eedd88e4333823fa1b23a8e2a9a348004ce9660","typeString":"literal_string \"Resource not found\""},"value":"Resource not found"},"visibility":"public"},{"constant":true,"functionSelector":"5c107264","id":8365,"mutability":"constant","name":"ERROR_PROCESS_FAILED","nameLocation":"967:20:27","nodeType":"VariableDeclaration","scope":8390,"src":"944:62:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8363,"name":"string","nodeType":"ElementaryTypeName","src":"944:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"50726f63657373206661696c6564","id":8364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"990:16:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb71e143b54bde3929537107bdc086f922ede2ca67fb15f7bf50f237ac7a2a00","typeString":"literal_string \"Process failed\""},"value":"Process failed"},"visibility":"public"},{"constant":true,"functionSelector":"34b89fb7","id":8368,"mutability":"constant","name":"ERROR_UNAUTHORISED_ACCESS","nameLocation":"1035:25:27","nodeType":"VariableDeclaration","scope":8390,"src":"1012:72:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8366,"name":"string","nodeType":"ElementaryTypeName","src":"1012:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"556e617574686f726973656420616363657373","id":8367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1063:21:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_db40c0ff7f62168120bbfe6a2920affa7a236fbb74fa94c9878c953968a5459f","typeString":"literal_string \"Unauthorised access\""},"value":"Unauthorised access"},"visibility":"public"},{"constant":false,"functionSelector":"3e7a3e3e","id":8371,"mutability":"mutable","name":"dexaCreator","nameLocation":"1110:11:27","nodeType":"VariableDeclaration","scope":8390,"src":"1091:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"},"typeName":{"id":8370,"nodeType":"UserDefinedTypeName","pathNode":{"id":8369,"name":"DexaCreator","nameLocations":["1091:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":8121,"src":"1091:11:27"},"referencedDeclaration":8121,"src":"1091:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"visibility":"public"},{"body":{"id":8388,"nodeType":"Block","src":"1170:108:27","statements":[{"expression":{"arguments":[{"id":8377,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1191:18:27","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1211:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1215:6:27","memberName":"sender","nodeType":"MemberAccess","src":"1211:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8376,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"1180:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:42:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8381,"nodeType":"ExpressionStatement","src":"1180:42:27"},{"expression":{"id":8386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8382,"name":"dexaCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8371,"src":"1232:11:27","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8384,"name":"_dexaCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8373,"src":"1258:12:27","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":8383,"name":"DexaCreator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8121,"src":"1246:11:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_DexaCreator_$8121_$","typeString":"type(contract DexaCreator)"}},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1246:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"src":"1232:39:27","typeDescriptions":{"typeIdentifier":"t_contract$_DexaCreator_$8121","typeString":"contract DexaCreator"}},"id":8387,"nodeType":"ExpressionStatement","src":"1232:39:27"}]},"id":8389,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8373,"mutability":"mutable","name":"_dexaCreator","nameLocation":"1156:12:27","nodeType":"VariableDeclaration","scope":8389,"src":"1140:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":8372,"name":"address","nodeType":"ElementaryTypeName","src":"1140:15:27","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1139:30:27"},"returnParameters":{"id":8375,"nodeType":"ParameterList","parameters":[],"src":"1170:0:27"},"scope":8390,"src":"1128:150:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8391,"src":"210:1070:27","usedErrors":[305,308,557,560],"usedEvents":[317,326,335,565]}],"src":"32:1249:27"},"id":27},"contracts/FeedsToken.sol":{"ast":{"absolutePath":"contracts/FeedsToken.sol","exportedSymbols":{"AccessControl":[295],"Context":[1693],"ECDSA":[3904],"EIP712":[4131],"ERC165":[4241],"ERC20":[1323],"ERC20Burnable":[1447],"ERC20Permit":[1601],"FeedsToken":[8449],"IAccessControl":[378],"IERC20":[1401],"IERC20Errors":[445],"IERC20Metadata":[1627],"IERC20Permit":[1663],"Nonces":[1761]},"id":8450,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8392,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8450,"sourceUnit":1324,"src":"58:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8450,"sourceUnit":296,"src":"114:58:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":8395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8450,"sourceUnit":1448,"src":"173:74:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8450,"sourceUnit":1602,"src":"248:72:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8397,"name":"ERC20","nameLocations":["345:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":1323,"src":"345:5:28"},"id":8398,"nodeType":"InheritanceSpecifier","src":"345:5:28"},{"baseName":{"id":8399,"name":"ERC20Burnable","nameLocations":["352:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"352:13:28"},"id":8400,"nodeType":"InheritanceSpecifier","src":"352:13:28"},{"baseName":{"id":8401,"name":"AccessControl","nameLocations":["367:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":295,"src":"367:13:28"},"id":8402,"nodeType":"InheritanceSpecifier","src":"367:13:28"},{"baseName":{"id":8403,"name":"ERC20Permit","nameLocations":["382:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"382:11:28"},"id":8404,"nodeType":"InheritanceSpecifier","src":"382:11:28"}],"canonicalName":"FeedsToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8449,"linearizedBaseContracts":[8449,1601,1761,4131,403,1663,295,4241,4253,378,1447,1323,445,1627,1401,1693],"name":"FeedsToken","nameLocation":"331:10:28","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":8409,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"424:11:28","nodeType":"VariableDeclaration","scope":8449,"src":"400:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"400:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"448:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8406,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"438:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"438:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":8431,"nodeType":"Block","src":"540:104:28","statements":[{"expression":{"arguments":[{"id":8420,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"561:18:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"581:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"585:6:28","memberName":"sender","nodeType":"MemberAccess","src":"581:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8419,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"550:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"550:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8424,"nodeType":"ExpressionStatement","src":"550:42:28"},{"expression":{"arguments":[{"id":8426,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"613:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8427,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"626:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"630:6:28","memberName":"sender","nodeType":"MemberAccess","src":"626:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8425,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"602:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"602:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8430,"nodeType":"ExpressionStatement","src":"602:35:28"}]},"id":8432,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"466565647320546f6b656e","id":8412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"489:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eb79dbcc2fbaf1a4b2413c9a19d7ea17d2b1554757ad18453b35b29db52e0d8","typeString":"literal_string \"Feeds Token\""},"value":"Feeds Token"},{"hexValue":"4645454453","id":8413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"504:7:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a29508f158c256f1040322e1bc5abbbd143763e03c5147c6a9d175f87bca0637","typeString":"literal_string \"FEEDS\""},"value":"FEEDS"}],"id":8414,"kind":"baseConstructorSpecifier","modifierName":{"id":8411,"name":"ERC20","nameLocations":["483:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":1323,"src":"483:5:28"},"nodeType":"ModifierInvocation","src":"483:29:28"},{"arguments":[{"hexValue":"466565647320546f6b656e","id":8416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"525:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8eb79dbcc2fbaf1a4b2413c9a19d7ea17d2b1554757ad18453b35b29db52e0d8","typeString":"literal_string \"Feeds Token\""},"value":"Feeds Token"}],"id":8417,"kind":"baseConstructorSpecifier","modifierName":{"id":8415,"name":"ERC20Permit","nameLocations":["513:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":1601,"src":"513:11:28"},"nodeType":"ModifierInvocation","src":"513:26:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8410,"nodeType":"ParameterList","parameters":[],"src":"480:2:28"},"returnParameters":{"id":8418,"nodeType":"ParameterList","parameters":[],"src":"540:0:28"},"scope":8449,"src":"469:175:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8447,"nodeType":"Block","src":"721:34:28","statements":[{"expression":{"arguments":[{"id":8443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"737:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8444,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8436,"src":"741:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8442,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"731:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"731:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8446,"nodeType":"ExpressionStatement","src":"731:17:28"}]},"functionSelector":"40c10f19","id":8448,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8439,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8409,"src":"708:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8440,"kind":"modifierInvocation","modifierName":{"id":8438,"name":"onlyRole","nameLocations":["699:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":40,"src":"699:8:28"},"nodeType":"ModifierInvocation","src":"699:21:28"}],"name":"mint","nameLocation":"659:4:28","nodeType":"FunctionDefinition","parameters":{"id":8437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"to","nameLocation":"672:2:28","nodeType":"VariableDeclaration","scope":8448,"src":"664:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8433,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8436,"mutability":"mutable","name":"amount","nameLocation":"684:6:28","nodeType":"VariableDeclaration","scope":8448,"src":"676:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8435,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"663:28:28"},"returnParameters":{"id":8441,"nodeType":"ParameterList","parameters":[],"src":"721:0:28"},"scope":8449,"src":"650:105:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8450,"src":"322:435:28","usedErrors":[305,308,415,420,425,434,439,444,1478,1485,1703,1827,1829,3567,3572,3577],"usedEvents":[317,326,335,383,1335,1344]}],"src":"32:726:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023a4bfdfc26484b5ed55f5037e19ca157d2a10228e6da7e114d845ad5cd85c8564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 LOG4 0xBF 0xDF 0xC2 PUSH5 0x84B5ED55F5 SUB PUSH31 0x19CA157D2A10228E6DA7E114D845AD5CD85C8564736F6C6343000814003300 ","sourceMap":"521:3729:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023a4bfdfc26484b5ed55f5037e19ca157d2a10228e6da7e114d845ad5cd85c8564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 LOG4 0xBF 0xDF 0xC2 PUSH5 0x84B5ED55F5 SUB PUSH31 0x19CA157D2A10228E6DA7E114D845AD5CD85C8564736F6C6343000814003300 ","sourceMap":"521:3729:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/DexaCreator.sol":{"DexaCreator":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BalanceCredited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BalanceDebited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"string","name":"displayName","type":"string"},{"indexed":false,"internalType":"string","name":"username","type":"string"}],"name":"NewCreator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"TokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"userAddress","type":"address"},{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"TokenAddressAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transferred","type":"event"},{"stateMutability":"payable","type":"fallback"},{"inputs":[],"name":"CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_FEEDS_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_MESSENGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_STORAGE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_DUPLICATE_RESOURCE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_INVALID_PRICE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_INVALID_STRING","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_NOT_FOUND","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_PROCESS_FAILED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_UNAUTHORISED_ACCESS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_allowedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokenAddress","type":"address[]"}],"name":"addTokenToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"creatorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"init_dexa_base","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_admin","type":"address"}],"name":"init_dexa_creator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_dexaFeed","type":"address"},{"internalType":"address","name":"_dexaMessenger","type":"address"}],"name":"init_roles","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"name":"isNameFree","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"displayName","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"dexaProfile","type":"string"}],"name":"registerCreator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeRate","type":"uint256"}],"name":"setAdminFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"transactionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_7953":{"entryPoint":null,"id":7953,"parameterSlots":0,"returnSlots":0},"@_grantRole_256":{"entryPoint":111,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1675":{"entryPoint":476,"id":1675,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":370,"id":80,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000276000801b336200006f60201b60201c565b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001e4565b60006200008383836200017260201b60201c565b6200016757600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000103620001dc60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506200016c565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b611dd180620001f46000396000f3fe6080604052600436106101d15760003560e01c80638beb60b6116100f7578063a720640e11610095578063d547741f11610064578063d547741f14610682578063d82faa48146106ab578063f22b9ab6146106d6578063fc23413a14610701576101d8565b8063a720640e146105c4578063ad4fb5cd146105ef578063b7660cd31461061a578063b77bf60014610657576101d8565b8063978bbdb9116100d1578063978bbdb91461051a578063980e3af814610545578063a1c864e914610570578063a217fddf14610599576101d8565b80638beb60b6146104895780638da5cb5b146104b257806391d14854146104dd576101d8565b806334b89fb71161016f5780635e0118b61161013e5780635e0118b6146103e1578063847741a01461040c57806389c72556146104355780638aeda25a1461045e576101d8565b806334b89fb714610337578063362c3ab81461036257806336568abe1461038d5780635c107264146103b6576101d8565b80632576bdea116101ab5780632576bdea14610291578063263ef5b9146102bc5780632ce70722146102e55780632f2ff15d1461030e576101d8565b806301ffc9a7146101da57806308a1cd0514610217578063248a9ca314610254576101d8565b366101d857005b005b3480156101e657600080fd5b5061020160048036038101906101fc9190611587565b61072c565b60405161020e91906115cf565b60405180910390f35b34801561022357600080fd5b5061023e60048036038101906102399190611730565b6107a6565b60405161024b91906115cf565b60405180910390f35b34801561026057600080fd5b5061027b600480360381019061027691906117af565b6107b1565b60405161028891906117eb565b60405180910390f35b34801561029d57600080fd5b506102a66107d0565b6040516102b391906117eb565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190611864565b6107f4565b005b3480156102f157600080fd5b5061030c60048036038101906103079190611864565b6109a5565b005b34801561031a57600080fd5b5061033560048036038101906103309190611891565b610b39565b005b34801561034357600080fd5b5061034c610b5b565b6040516103599190611950565b60405180910390f35b34801561036e57600080fd5b50610377610b94565b6040516103849190611950565b60405180910390f35b34801561039957600080fd5b506103b460048036038101906103af9190611891565b610bcd565b005b3480156103c257600080fd5b506103cb610c48565b6040516103d89190611950565b60405180910390f35b3480156103ed57600080fd5b506103f6610c81565b60405161040391906117eb565b60405180910390f35b34801561041857600080fd5b50610433600480360381019061042e9190611972565b610ca5565b005b34801561044157600080fd5b5061045c60048036038101906104579190611a7a565b610d0d565b005b34801561046a57600080fd5b50610473610e0d565b60405161048091906117eb565b60405180910390f35b34801561049557600080fd5b506104b060048036038101906104ab9190611af9565b610e31565b005b3480156104be57600080fd5b506104c7610e49565b6040516104d49190611b35565b60405180910390f35b3480156104e957600080fd5b5061050460048036038101906104ff9190611891565b610e6f565b60405161051191906115cf565b60405180910390f35b34801561052657600080fd5b5061052f610ed9565b60405161053c9190611b5f565b60405180910390f35b34801561055157600080fd5b5061055a610edf565b60405161056791906117eb565b60405180910390f35b34801561057c57600080fd5b5061059760048036038101906105929190611b7a565b610f03565b005b3480156105a557600080fd5b506105ae6110fe565b6040516105bb91906117eb565b60405180910390f35b3480156105d057600080fd5b506105d9611105565b6040516105e691906117eb565b60405180910390f35b3480156105fb57600080fd5b50610604611129565b6040516106119190611950565b60405180910390f35b34801561062657600080fd5b50610641600480360381019061063c9190611864565b611162565b60405161064e91906115cf565b60405180910390f35b34801561066357600080fd5b5061066c611182565b6040516106799190611b5f565b60405180910390f35b34801561068e57600080fd5b506106a960048036038101906106a49190611891565b611188565b005b3480156106b757600080fd5b506106c06111aa565b6040516106cd9190611b5f565b60405180910390f35b3480156106e257600080fd5b506106eb6111b0565b6040516106f89190611950565b60405180910390f35b34801561070d57600080fd5b506107166111e9565b6040516107239190611950565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061079f575061079e82611222565b5b9050919050565b600060019050919050565b6000806000838152602001908152602001600020600101549050919050565b7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e81565b60006107fe61128c565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561084c5750825b9050600060018367ffffffffffffffff16148015610881575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561088f575080155b156108c6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156109165760018560000160086101000a81548160ff0219169083151502179055505b6109407f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412876112a0565b50831561099d5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516109949190611c7a565b60405180910390a15b505050505050565b60006109af61128c565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156109fd5750825b9050600060018367ffffffffffffffff16148015610a32575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610a40575080155b15610a77576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610ac75760018560000160086101000a81548160ff0219169083151502179055505b610ad46000801b876112a0565b508315610b315760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610b289190611c7a565b60405180910390a15b505050505050565b610b42826107b1565b610b4b81611391565b610b5583836112a0565b50505050565b6040518060400160405280601381526020017f556e617574686f7269736564206163636573730000000000000000000000000081525081565b6040518060400160405280600d81526020017f496e76616c69642070726963650000000000000000000000000000000000000081525081565b610bd56113a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c39576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c4382826113ad565b505050565b6040518060400160405280600e81526020017f50726f63657373206661696c656400000000000000000000000000000000000081525081565b7f0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e81565b6000801b610cb281611391565b610cdc7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e846112a0565b50610d077f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304836112a0565b50505050565b6000801b610d1a81611391565b60005b8251811015610e0857600160056000858481518110610d3f57610d3e611c95565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110610dab57610daa611c95565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a460405160405180910390a28080610e0090611cf3565b915050610d1d565b505050565b7f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b6000801b610e3e81611391565b816001819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60015481565b7f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c8903541281565b60008351116040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525090610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f769190611950565b60405180910390fd5b5060008251116040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525090610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff39190611950565b60405180910390fd5b50611006826107a6565b6040518060400160405280601781526020017f5265736f7572636520616c7265616479206578697374730000000000000000008152509061107d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110749190611950565b60405180910390fd5b506110a87f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f336112a0565b503373ffffffffffffffffffffffffffffffffffffffff167f21dd0ecdd49765309a51fb77b31ada340d3bf2d7b6cf11cda8c66234933e8fb784846040516110f1929190611d3b565b60405180910390a2505050565b6000801b81565b7f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a030481565b6040518060400160405280601281526020017f5265736f75726365206e6f7420666f756e64000000000000000000000000000081525081565b60056020528060005260406000206000915054906101000a900460ff1681565b60035481565b611191826107b1565b61119a81611391565b6111a483836113ad565b50505050565b60025481565b6040518060400160405280601781526020017f5265736f7572636520616c72656164792065786973747300000000000000000081525081565b6040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061129761149f565b90508091505090565b60006112ac8383610e6f565b61138657600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506113236113a5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061138b565b600090505b92915050565b6113a28161139d6113a5565b6114ca565b50565b600033905090565b60006113b98383610e6f565b1561149457600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506114316113a5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611499565b600090505b92915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6114d48282610e6f565b6115175780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161150e929190611d72565b60405180910390fd5b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115648161152f565b811461156f57600080fd5b50565b6000813590506115818161155b565b92915050565b60006020828403121561159d5761159c611525565b5b60006115ab84828501611572565b91505092915050565b60008115159050919050565b6115c9816115b4565b82525050565b60006020820190506115e460008301846115c0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61163d826115f4565b810181811067ffffffffffffffff8211171561165c5761165b611605565b5b80604052505050565b600061166f61151b565b905061167b8282611634565b919050565b600067ffffffffffffffff82111561169b5761169a611605565b5b6116a4826115f4565b9050602081019050919050565b82818337600083830152505050565b60006116d36116ce84611680565b611665565b9050828152602081018484840111156116ef576116ee6115ef565b5b6116fa8482856116b1565b509392505050565b600082601f830112611717576117166115ea565b5b81356117278482602086016116c0565b91505092915050565b60006020828403121561174657611745611525565b5b600082013567ffffffffffffffff8111156117645761176361152a565b5b61177084828501611702565b91505092915050565b6000819050919050565b61178c81611779565b811461179757600080fd5b50565b6000813590506117a981611783565b92915050565b6000602082840312156117c5576117c4611525565b5b60006117d38482850161179a565b91505092915050565b6117e581611779565b82525050565b600060208201905061180060008301846117dc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061183182611806565b9050919050565b61184181611826565b811461184c57600080fd5b50565b60008135905061185e81611838565b92915050565b60006020828403121561187a57611879611525565b5b60006118888482850161184f565b91505092915050565b600080604083850312156118a8576118a7611525565b5b60006118b68582860161179a565b92505060206118c78582860161184f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561190b5780820151818401526020810190506118f0565b60008484015250505050565b6000611922826118d1565b61192c81856118dc565b935061193c8185602086016118ed565b611945816115f4565b840191505092915050565b6000602082019050818103600083015261196a8184611917565b905092915050565b6000806040838503121561198957611988611525565b5b60006119978582860161184f565b92505060206119a88582860161184f565b9150509250929050565b600067ffffffffffffffff8211156119cd576119cc611605565b5b602082029050602081019050919050565b600080fd5b60006119f66119f1846119b2565b611665565b90508083825260208201905060208402830185811115611a1957611a186119de565b5b835b81811015611a425780611a2e888261184f565b845260208401935050602081019050611a1b565b5050509392505050565b600082601f830112611a6157611a606115ea565b5b8135611a718482602086016119e3565b91505092915050565b600060208284031215611a9057611a8f611525565b5b600082013567ffffffffffffffff811115611aae57611aad61152a565b5b611aba84828501611a4c565b91505092915050565b6000819050919050565b611ad681611ac3565b8114611ae157600080fd5b50565b600081359050611af381611acd565b92915050565b600060208284031215611b0f57611b0e611525565b5b6000611b1d84828501611ae4565b91505092915050565b611b2f81611826565b82525050565b6000602082019050611b4a6000830184611b26565b92915050565b611b5981611ac3565b82525050565b6000602082019050611b746000830184611b50565b92915050565b600080600060608486031215611b9357611b92611525565b5b600084013567ffffffffffffffff811115611bb157611bb061152a565b5b611bbd86828701611702565b935050602084013567ffffffffffffffff811115611bde57611bdd61152a565b5b611bea86828701611702565b925050604084013567ffffffffffffffff811115611c0b57611c0a61152a565b5b611c1786828701611702565b9150509250925092565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000611c64611c5f611c5a84611c21565b611c3f565b611c2b565b9050919050565b611c7481611c49565b82525050565b6000602082019050611c8f6000830184611c6b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cfe82611ac3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d3057611d2f611cc4565b5b600182019050919050565b60006040820190508181036000830152611d558185611917565b90508181036020830152611d698184611917565b90509392505050565b6000604082019050611d876000830185611b26565b611d9460208301846117dc565b939250505056fea2646970667358221220c36bf42220ba8df1aa3562ff43e200b36768ca4e9cfd3409db181dcd4c0d1a0464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x27 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x83 DUP4 DUP4 PUSH3 0x172 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x167 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x103 PUSH3 0x1DC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x16C JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1DD1 DUP1 PUSH3 0x1F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BEB60B6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA720640E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xD82FAA48 EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xF22B9AB6 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xFC23413A EQ PUSH2 0x701 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA720640E EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0xAD4FB5CD EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xB7660CD3 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xB77BF600 EQ PUSH2 0x657 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x978BBDB9 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x980E3AF8 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xA1C864E9 EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x599 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8BEB60B6 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4DD JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x34B89FB7 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x5E0118B6 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5E0118B6 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x847741A0 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x89C72556 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8AEDA25A EQ PUSH2 0x45E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x34B89FB7 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x362C3AB8 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x5C107264 EQ PUSH2 0x3B6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2576BDEA GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2576BDEA EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x263EF5B9 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x2CE70722 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x30E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8A1CD05 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x254 JUMPI PUSH2 0x1D8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x377 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0xD0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55A PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AE PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D9 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66C PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C0 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EB PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x716 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79F JUMPI POP PUSH2 0x79E DUP3 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FE PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x84C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x881 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x88F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x916 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x940 PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP8 PUSH2 0x12A0 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AF PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9FD JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA32 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xA40 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xAD4 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x12A0 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xB31 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB42 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0xB4B DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0xB55 DUP4 DUP4 PUSH2 0x12A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697365642061636365737300000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xBD5 PUSH2 0x13A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC43 DUP3 DUP3 PUSH2 0x13AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F63657373206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0xE071082E8835E151107BAEB3781CD9C05E5A89FDA0B31203AB6C4FE9AB6053E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xCB2 DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0xCDC PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP5 PUSH2 0x12A0 JUMP JUMPDEST POP PUSH2 0xD07 PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP4 PUSH2 0x12A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xD1A DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xE08 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD3F JUMPI PUSH2 0xD3E PUSH2 0x1C95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDAB JUMPI PUSH2 0xDAA PUSH2 0x1C95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH2 0xE00 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xE3E DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1006 DUP3 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1074 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x10A8 PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F CALLER PUSH2 0x12A0 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21DD0ECDD49765309A51FB77B31ADA340D3BF2D7B6CF11CDA8C66234933E8FB7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F75726365206E6F7420666F756E640000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1191 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x119A DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x11A4 DUP4 DUP4 PUSH2 0x13AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1297 PUSH2 0x149F JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC DUP4 DUP4 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x1386 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1323 PUSH2 0x13A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x138B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A2 DUP2 PUSH2 0x139D PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B9 DUP4 DUP4 PUSH2 0xE6F JUMP JUMPDEST ISZERO PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1431 PUSH2 0x13A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14D4 DUP3 DUP3 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x1517 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x152F JUMP JUMPDEST DUP2 EQ PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1581 DUP2 PUSH2 0x155B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP5 DUP3 DUP6 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C9 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x163D DUP3 PUSH2 0x15F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1605 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166F PUSH2 0x151B JUMP JUMPDEST SWAP1 POP PUSH2 0x167B DUP3 DUP3 PUSH2 0x1634 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1605 JUMP JUMPDEST JUMPDEST PUSH2 0x16A4 DUP3 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D3 PUSH2 0x16CE DUP5 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x1665 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16EF JUMPI PUSH2 0x16EE PUSH2 0x15EF JUMP JUMPDEST JUMPDEST PUSH2 0x16FA DUP5 DUP3 DUP6 PUSH2 0x16B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1717 JUMPI PUSH2 0x1716 PUSH2 0x15EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1727 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1746 JUMPI PUSH2 0x1745 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1770 DUP5 DUP3 DUP6 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178C DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP2 EQ PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A9 DUP2 PUSH2 0x1783 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x179A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1831 DUP3 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1841 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP2 EQ PUSH2 0x184C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185E DUP2 PUSH2 0x1838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187A JUMPI PUSH2 0x1879 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1888 DUP5 DUP3 DUP6 ADD PUSH2 0x184F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B6 DUP6 DUP3 DUP7 ADD PUSH2 0x179A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C7 DUP6 DUP3 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 DUP3 PUSH2 0x18D1 JUMP JUMPDEST PUSH2 0x192C DUP2 DUP6 PUSH2 0x18DC JUMP JUMPDEST SWAP4 POP PUSH2 0x193C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x1945 DUP2 PUSH2 0x15F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x196A DUP2 DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1989 JUMPI PUSH2 0x1988 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1997 DUP6 DUP3 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A8 DUP6 DUP3 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19CD JUMPI PUSH2 0x19CC PUSH2 0x1605 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19F6 PUSH2 0x19F1 DUP5 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1665 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x19DE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A42 JUMPI DUP1 PUSH2 0x1A2E DUP9 DUP3 PUSH2 0x184F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A1B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x15EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A71 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1ABA DUP5 DUP3 DUP6 ADD PUSH2 0x1A4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF3 DUP2 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP5 DUP3 DUP6 ADD PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B2F DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B59 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB1 JUMPI PUSH2 0x1BB0 PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1BBD DUP7 DUP3 DUP8 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BDD PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1BEA DUP7 DUP3 DUP8 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1C17 DUP7 DUP3 DUP8 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C64 PUSH2 0x1C5F PUSH2 0x1C5A DUP5 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C74 DUP2 PUSH2 0x1C49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFE DUP3 PUSH2 0x1AC3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D30 JUMPI PUSH2 0x1D2F PUSH2 0x1CC4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 DUP6 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D69 DUP2 DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D87 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x1D94 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH12 0xF42220BA8DF1AA3562FF43E2 STOP 0xB3 PUSH8 0x68CA4E9CFD3409DB XOR SAR 0xCD 0x4C 0xD BYTE DIV PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"182:3831:25:-:0;;;2415:101;;;;;;;;;;2439:42;2232:4:0;2450:18:25;;2470:10;2439;;;:42;;:::i;:::-;;2499:10;2491:5;;:18;;;;;;;;;;;;;;;;;;182:3831;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;182:3831:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CREATOR_ROLE_7796":{"entryPoint":3597,"id":7796,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":4350,"id":29,"parameterSlots":0,"returnSlots":0},"@DEXA_CREATOR_ROLE_7801":{"entryPoint":3807,"id":7801,"parameterSlots":0,"returnSlots":0},"@DEXA_FEEDS_ROLE_7806":{"entryPoint":2000,"id":7806,"parameterSlots":0,"returnSlots":0},"@DEXA_MESSENGER_ROLE_7811":{"entryPoint":4357,"id":7811,"parameterSlots":0,"returnSlots":0},"@DEXA_STORAGE_ROLE_7816":{"entryPoint":3201,"id":7816,"parameterSlots":0,"returnSlots":0},"@ERROR_DUPLICATE_RESOURCE_7819":{"entryPoint":4528,"id":7819,"parameterSlots":0,"returnSlots":0},"@ERROR_INVALID_PRICE_7822":{"entryPoint":2964,"id":7822,"parameterSlots":0,"returnSlots":0},"@ERROR_INVALID_STRING_7825":{"entryPoint":4585,"id":7825,"parameterSlots":0,"returnSlots":0},"@ERROR_NOT_FOUND_7828":{"entryPoint":4393,"id":7828,"parameterSlots":0,"returnSlots":0},"@ERROR_PROCESS_FAILED_7831":{"entryPoint":3144,"id":7831,"parameterSlots":0,"returnSlots":0},"@ERROR_UNAUTHORISED_ACCESS_7834":{"entryPoint":2907,"id":7834,"parameterSlots":0,"returnSlots":0},"@_8116":{"entryPoint":null,"id":8116,"parameterSlots":0,"returnSlots":0},"@_8120":{"entryPoint":null,"id":8120,"parameterSlots":0,"returnSlots":0},"@_allowedTokens_7846":{"entryPoint":4450,"id":7846,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":5322,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":5009,"id":93,"parameterSlots":1,"returnSlots":0},"@_getInitializableStorage_807":{"entryPoint":4748,"id":807,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":4768,"id":256,"parameterSlots":2,"returnSlots":1},"@_initializableStorageSlot_793":{"entryPoint":5279,"id":793,"parameterSlots":0,"returnSlots":1},"@_msgSender_1675":{"entryPoint":5029,"id":1675,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":5037,"id":294,"parameterSlots":2,"returnSlots":1},"@addTokenToWhitelist_8099":{"entryPoint":3341,"id":8099,"parameterSlots":1,"returnSlots":0},"@creatorCount_7838":{"entryPoint":4522,"id":7838,"parameterSlots":0,"returnSlots":0},"@feeRate_7836":{"entryPoint":3801,"id":7836,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_128":{"entryPoint":1969,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":2873,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":3695,"id":80,"parameterSlots":2,"returnSlots":1},"@init_dexa_base_7966":{"entryPoint":2469,"id":7966,"parameterSlots":1,"returnSlots":0},"@init_dexa_creator_7979":{"entryPoint":2036,"id":7979,"parameterSlots":1,"returnSlots":0},"@init_roles_8000":{"entryPoint":3237,"id":8000,"parameterSlots":2,"returnSlots":0},"@isNameFree_8062":{"entryPoint":1958,"id":8062,"parameterSlots":1,"returnSlots":1},"@owner_7842":{"entryPoint":3657,"id":7842,"parameterSlots":0,"returnSlots":0},"@registerCreator_8052":{"entryPoint":3843,"id":8052,"parameterSlots":3,"returnSlots":0},"@renounceRole_189":{"entryPoint":3021,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":4488,"id":166,"parameterSlots":2,"returnSlots":0},"@setAdminFee_8112":{"entryPoint":3633,"id":8112,"parameterSlots":1,"returnSlots":0},"@supportsInterface_4240":{"entryPoint":4642,"id":4240,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1836,"id":62,"parameterSlots":1,"returnSlots":1},"@transactionCount_7840":{"entryPoint":4482,"id":7840,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6627,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":5824,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":6042,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":5890,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6514,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":6063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":6289,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":5936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr":{"entryPoint":7034,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":6905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6950,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5568,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":7275,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6423,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6992,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":7538,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":7290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7483,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7007,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":5733,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5403,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":6578,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":5760,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6353,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6364,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6182,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5556,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6009,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5423,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":7201,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6150,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6851,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7211,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":7241,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5809,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6381,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5684,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":7231,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7411,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7364,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7317,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5637,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5610,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":6622,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5615,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5418,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5413,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5620,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6200,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":6019,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6861,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15287:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1607:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1624:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1627:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1617:6:29"},"nodeType":"YulFunctionCall","src":"1617:12:29"},"nodeType":"YulExpressionStatement","src":"1617:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1518:117:29"},{"body":{"nodeType":"YulBlock","src":"1730:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1747:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1750:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1740:6:29"},"nodeType":"YulFunctionCall","src":"1740:12:29"},"nodeType":"YulExpressionStatement","src":"1740:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1641:117:29"},{"body":{"nodeType":"YulBlock","src":"1812:54:29","statements":[{"nodeType":"YulAssignment","src":"1822:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1840:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1847:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1836:3:29"},"nodeType":"YulFunctionCall","src":"1836:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1856:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1852:3:29"},"nodeType":"YulFunctionCall","src":"1852:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1832:3:29"},"nodeType":"YulFunctionCall","src":"1832:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1822:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1795:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1805:6:29","type":""}],"src":"1764:102:29"},{"body":{"nodeType":"YulBlock","src":"1900:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1920:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1910:6:29"},"nodeType":"YulFunctionCall","src":"1910:88:29"},"nodeType":"YulExpressionStatement","src":"1910:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2014:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2017:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2007:6:29"},"nodeType":"YulFunctionCall","src":"2007:15:29"},"nodeType":"YulExpressionStatement","src":"2007:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2038:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2041:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2031:6:29"},"nodeType":"YulFunctionCall","src":"2031:15:29"},"nodeType":"YulExpressionStatement","src":"2031:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1872:180:29"},{"body":{"nodeType":"YulBlock","src":"2101:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2111:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2133:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2163:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2141:21:29"},"nodeType":"YulFunctionCall","src":"2141:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2129:3:29"},"nodeType":"YulFunctionCall","src":"2129:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2115:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"2280:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2282:16:29"},"nodeType":"YulFunctionCall","src":"2282:18:29"},"nodeType":"YulExpressionStatement","src":"2282:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2223:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"2235:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2220:2:29"},"nodeType":"YulFunctionCall","src":"2220:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2259:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2271:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2256:2:29"},"nodeType":"YulFunctionCall","src":"2256:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2217:2:29"},"nodeType":"YulFunctionCall","src":"2217:62:29"},"nodeType":"YulIf","src":"2214:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2318:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2322:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2311:6:29"},"nodeType":"YulFunctionCall","src":"2311:22:29"},"nodeType":"YulExpressionStatement","src":"2311:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2087:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"2095:4:29","type":""}],"src":"2058:281:29"},{"body":{"nodeType":"YulBlock","src":"2386:88:29","statements":[{"nodeType":"YulAssignment","src":"2396:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2406:18:29"},"nodeType":"YulFunctionCall","src":"2406:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2396:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2455:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"2463:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2435:19:29"},"nodeType":"YulFunctionCall","src":"2435:33:29"},"nodeType":"YulExpressionStatement","src":"2435:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2370:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2379:6:29","type":""}],"src":"2345:129:29"},{"body":{"nodeType":"YulBlock","src":"2547:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"2652:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2654:16:29"},"nodeType":"YulFunctionCall","src":"2654:18:29"},"nodeType":"YulExpressionStatement","src":"2654:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2624:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"2632:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2621:2:29"},"nodeType":"YulFunctionCall","src":"2621:30:29"},"nodeType":"YulIf","src":"2618:56:29"},{"nodeType":"YulAssignment","src":"2684:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2714:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2692:21:29"},"nodeType":"YulFunctionCall","src":"2692:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2684:4:29"}]},{"nodeType":"YulAssignment","src":"2758:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2770:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"2776:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:29"},"nodeType":"YulFunctionCall","src":"2766:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2758:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2531:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2542:4:29","type":""}],"src":"2480:308:29"},{"body":{"nodeType":"YulBlock","src":"2858:82:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2881:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"2886:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2891:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2868:12:29"},"nodeType":"YulFunctionCall","src":"2868:30:29"},"nodeType":"YulExpressionStatement","src":"2868:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2918:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2923:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2914:3:29"},"nodeType":"YulFunctionCall","src":"2914:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2932:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2907:6:29"},"nodeType":"YulFunctionCall","src":"2907:27:29"},"nodeType":"YulExpressionStatement","src":"2907:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2840:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2845:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"2850:6:29","type":""}],"src":"2794:146:29"},{"body":{"nodeType":"YulBlock","src":"3030:341:29","statements":[{"nodeType":"YulAssignment","src":"3040:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3107:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3065:41:29"},"nodeType":"YulFunctionCall","src":"3065:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3049:15:29"},"nodeType":"YulFunctionCall","src":"3049:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3040:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3131:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"3138:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3124:6:29"},"nodeType":"YulFunctionCall","src":"3124:21:29"},"nodeType":"YulExpressionStatement","src":"3124:21:29"},{"nodeType":"YulVariableDeclaration","src":"3154:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3169:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"3176:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3165:3:29"},"nodeType":"YulFunctionCall","src":"3165:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3158:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3219:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"3221:77:29"},"nodeType":"YulFunctionCall","src":"3221:79:29"},"nodeType":"YulExpressionStatement","src":"3221:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3200:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"3205:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3196:3:29"},"nodeType":"YulFunctionCall","src":"3196:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"3214:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3193:2:29"},"nodeType":"YulFunctionCall","src":"3193:25:29"},"nodeType":"YulIf","src":"3190:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3348:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"3353:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"3358:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3311:36:29"},"nodeType":"YulFunctionCall","src":"3311:54:29"},"nodeType":"YulExpressionStatement","src":"3311:54:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3003:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"3008:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3016:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3024:5:29","type":""}],"src":"2946:425:29"},{"body":{"nodeType":"YulBlock","src":"3453:278:29","statements":[{"body":{"nodeType":"YulBlock","src":"3502:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3504:77:29"},"nodeType":"YulFunctionCall","src":"3504:79:29"},"nodeType":"YulExpressionStatement","src":"3504:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3481:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3489:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3477:3:29"},"nodeType":"YulFunctionCall","src":"3477:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"3496:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3473:3:29"},"nodeType":"YulFunctionCall","src":"3473:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3466:6:29"},"nodeType":"YulFunctionCall","src":"3466:35:29"},"nodeType":"YulIf","src":"3463:122:29"},{"nodeType":"YulVariableDeclaration","src":"3594:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3621:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3608:12:29"},"nodeType":"YulFunctionCall","src":"3608:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3598:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3637:88:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3698:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"3706:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3694:3:29"},"nodeType":"YulFunctionCall","src":"3694:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"3713:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"3721:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3646:47:29"},"nodeType":"YulFunctionCall","src":"3646:79:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3637:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3431:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3439:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3447:5:29","type":""}],"src":"3391:340:29"},{"body":{"nodeType":"YulBlock","src":"3813:433:29","statements":[{"body":{"nodeType":"YulBlock","src":"3859:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3861:77:29"},"nodeType":"YulFunctionCall","src":"3861:79:29"},"nodeType":"YulExpressionStatement","src":"3861:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3834:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3843:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3830:3:29"},"nodeType":"YulFunctionCall","src":"3830:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3855:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3826:3:29"},"nodeType":"YulFunctionCall","src":"3826:32:29"},"nodeType":"YulIf","src":"3823:119:29"},{"nodeType":"YulBlock","src":"3952:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3967:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3998:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4009:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3994:3:29"},"nodeType":"YulFunctionCall","src":"3994:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3981:12:29"},"nodeType":"YulFunctionCall","src":"3981:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3971:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4059:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4061:77:29"},"nodeType":"YulFunctionCall","src":"4061:79:29"},"nodeType":"YulExpressionStatement","src":"4061:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4031:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4039:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4028:2:29"},"nodeType":"YulFunctionCall","src":"4028:30:29"},"nodeType":"YulIf","src":"4025:117:29"},{"nodeType":"YulAssignment","src":"4156:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4201:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4212:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4197:3:29"},"nodeType":"YulFunctionCall","src":"4197:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4221:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4166:30:29"},"nodeType":"YulFunctionCall","src":"4166:63:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4156:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3783:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3794:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3806:6:29","type":""}],"src":"3737:509:29"},{"body":{"nodeType":"YulBlock","src":"4297:32:29","statements":[{"nodeType":"YulAssignment","src":"4307:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4318:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4307:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4279:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4289:7:29","type":""}],"src":"4252:77:29"},{"body":{"nodeType":"YulBlock","src":"4378:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"4435:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4444:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4447:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4437:6:29"},"nodeType":"YulFunctionCall","src":"4437:12:29"},"nodeType":"YulExpressionStatement","src":"4437:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4401:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4426:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4408:17:29"},"nodeType":"YulFunctionCall","src":"4408:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4398:2:29"},"nodeType":"YulFunctionCall","src":"4398:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4391:6:29"},"nodeType":"YulFunctionCall","src":"4391:43:29"},"nodeType":"YulIf","src":"4388:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4371:5:29","type":""}],"src":"4335:122:29"},{"body":{"nodeType":"YulBlock","src":"4515:87:29","statements":[{"nodeType":"YulAssignment","src":"4525:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4547:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4534:12:29"},"nodeType":"YulFunctionCall","src":"4534:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4525:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4590:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"4563:26:29"},"nodeType":"YulFunctionCall","src":"4563:33:29"},"nodeType":"YulExpressionStatement","src":"4563:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4493:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"4501:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4509:5:29","type":""}],"src":"4463:139:29"},{"body":{"nodeType":"YulBlock","src":"4674:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"4720:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4722:77:29"},"nodeType":"YulFunctionCall","src":"4722:79:29"},"nodeType":"YulExpressionStatement","src":"4722:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4695:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4691:3:29"},"nodeType":"YulFunctionCall","src":"4691:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4716:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4687:3:29"},"nodeType":"YulFunctionCall","src":"4687:32:29"},"nodeType":"YulIf","src":"4684:119:29"},{"nodeType":"YulBlock","src":"4813:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4828:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4842:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4832:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4857:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4892:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4903:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4888:3:29"},"nodeType":"YulFunctionCall","src":"4888:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4912:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4867:20:29"},"nodeType":"YulFunctionCall","src":"4867:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4857:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4644:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4655:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4667:6:29","type":""}],"src":"4608:329:29"},{"body":{"nodeType":"YulBlock","src":"5008:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5025:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5048:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5030:17:29"},"nodeType":"YulFunctionCall","src":"5030:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5018:6:29"},"nodeType":"YulFunctionCall","src":"5018:37:29"},"nodeType":"YulExpressionStatement","src":"5018:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4996:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5003:3:29","type":""}],"src":"4943:118:29"},{"body":{"nodeType":"YulBlock","src":"5165:124:29","statements":[{"nodeType":"YulAssignment","src":"5175:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5187:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5198:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5183:3:29"},"nodeType":"YulFunctionCall","src":"5183:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5175:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5255:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5268:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5279:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5264:3:29"},"nodeType":"YulFunctionCall","src":"5264:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5211:43:29"},"nodeType":"YulFunctionCall","src":"5211:71:29"},"nodeType":"YulExpressionStatement","src":"5211:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5137:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5149:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5160:4:29","type":""}],"src":"5067:222:29"},{"body":{"nodeType":"YulBlock","src":"5340:81:29","statements":[{"nodeType":"YulAssignment","src":"5350:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5365:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5372:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5361:3:29"},"nodeType":"YulFunctionCall","src":"5361:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5350:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5322:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5332:7:29","type":""}],"src":"5295:126:29"},{"body":{"nodeType":"YulBlock","src":"5472:51:29","statements":[{"nodeType":"YulAssignment","src":"5482:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5511:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5493:17:29"},"nodeType":"YulFunctionCall","src":"5493:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5482:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5454:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5464:7:29","type":""}],"src":"5427:96:29"},{"body":{"nodeType":"YulBlock","src":"5572:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"5629:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5638:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5641:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5631:6:29"},"nodeType":"YulFunctionCall","src":"5631:12:29"},"nodeType":"YulExpressionStatement","src":"5631:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5595:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5620:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5602:17:29"},"nodeType":"YulFunctionCall","src":"5602:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5592:2:29"},"nodeType":"YulFunctionCall","src":"5592:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5585:6:29"},"nodeType":"YulFunctionCall","src":"5585:43:29"},"nodeType":"YulIf","src":"5582:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5565:5:29","type":""}],"src":"5529:122:29"},{"body":{"nodeType":"YulBlock","src":"5709:87:29","statements":[{"nodeType":"YulAssignment","src":"5719:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5741:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5728:12:29"},"nodeType":"YulFunctionCall","src":"5728:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5719:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5784:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"5757:26:29"},"nodeType":"YulFunctionCall","src":"5757:33:29"},"nodeType":"YulExpressionStatement","src":"5757:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5687:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"5695:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5703:5:29","type":""}],"src":"5657:139:29"},{"body":{"nodeType":"YulBlock","src":"5868:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"5914:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5916:77:29"},"nodeType":"YulFunctionCall","src":"5916:79:29"},"nodeType":"YulExpressionStatement","src":"5916:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5889:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5898:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5885:3:29"},"nodeType":"YulFunctionCall","src":"5885:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5910:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5881:3:29"},"nodeType":"YulFunctionCall","src":"5881:32:29"},"nodeType":"YulIf","src":"5878:119:29"},{"nodeType":"YulBlock","src":"6007:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6022:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6036:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6026:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6051:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6086:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6097:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6082:3:29"},"nodeType":"YulFunctionCall","src":"6082:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6106:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6061:20:29"},"nodeType":"YulFunctionCall","src":"6061:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6051:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5838:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5849:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5861:6:29","type":""}],"src":"5802:329:29"},{"body":{"nodeType":"YulBlock","src":"6220:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"6266:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6268:77:29"},"nodeType":"YulFunctionCall","src":"6268:79:29"},"nodeType":"YulExpressionStatement","src":"6268:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6241:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6250:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6237:3:29"},"nodeType":"YulFunctionCall","src":"6237:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6262:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6233:3:29"},"nodeType":"YulFunctionCall","src":"6233:32:29"},"nodeType":"YulIf","src":"6230:119:29"},{"nodeType":"YulBlock","src":"6359:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6374:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6388:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6378:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6403:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6438:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6449:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6434:3:29"},"nodeType":"YulFunctionCall","src":"6434:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6458:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6413:20:29"},"nodeType":"YulFunctionCall","src":"6413:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6403:6:29"}]}]},{"nodeType":"YulBlock","src":"6486:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6501:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6515:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6505:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6531:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6566:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6577:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6562:3:29"},"nodeType":"YulFunctionCall","src":"6562:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6586:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6541:20:29"},"nodeType":"YulFunctionCall","src":"6541:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6531:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6182:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6193:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6205:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6213:6:29","type":""}],"src":"6137:474:29"},{"body":{"nodeType":"YulBlock","src":"6676:40:29","statements":[{"nodeType":"YulAssignment","src":"6687:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6703:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6697:5:29"},"nodeType":"YulFunctionCall","src":"6697:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6687:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6659:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6669:6:29","type":""}],"src":"6617:99:29"},{"body":{"nodeType":"YulBlock","src":"6818:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6835:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6840:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6828:6:29"},"nodeType":"YulFunctionCall","src":"6828:19:29"},"nodeType":"YulExpressionStatement","src":"6828:19:29"},{"nodeType":"YulAssignment","src":"6856:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6875:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"6880:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6871:3:29"},"nodeType":"YulFunctionCall","src":"6871:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6856:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6790:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6795:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6806:11:29","type":""}],"src":"6722:169:29"},{"body":{"nodeType":"YulBlock","src":"6959:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6969:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6978:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6973:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7038:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7063:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"7068:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7059:3:29"},"nodeType":"YulFunctionCall","src":"7059:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7082:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"7087:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7078:3:29"},"nodeType":"YulFunctionCall","src":"7078:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7072:5:29"},"nodeType":"YulFunctionCall","src":"7072:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7052:6:29"},"nodeType":"YulFunctionCall","src":"7052:39:29"},"nodeType":"YulExpressionStatement","src":"7052:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6999:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"7002:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6996:2:29"},"nodeType":"YulFunctionCall","src":"6996:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7010:19:29","statements":[{"nodeType":"YulAssignment","src":"7012:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7021:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"7024:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7017:3:29"},"nodeType":"YulFunctionCall","src":"7017:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7012:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6992:3:29","statements":[]},"src":"6988:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7121:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7126:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7117:3:29"},"nodeType":"YulFunctionCall","src":"7117:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"7135:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7110:6:29"},"nodeType":"YulFunctionCall","src":"7110:27:29"},"nodeType":"YulExpressionStatement","src":"7110:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6941:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6946:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6951:6:29","type":""}],"src":"6897:246:29"},{"body":{"nodeType":"YulBlock","src":"7241:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7251:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7298:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7265:32:29"},"nodeType":"YulFunctionCall","src":"7265:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7255:6:29","type":""}]},{"nodeType":"YulAssignment","src":"7313:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7379:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7384:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7320:58:29"},"nodeType":"YulFunctionCall","src":"7320:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7313:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7439:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7446:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7435:3:29"},"nodeType":"YulFunctionCall","src":"7435:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7453:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7458:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7400:34:29"},"nodeType":"YulFunctionCall","src":"7400:65:29"},"nodeType":"YulExpressionStatement","src":"7400:65:29"},{"nodeType":"YulAssignment","src":"7474:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7485:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7512:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7490:21:29"},"nodeType":"YulFunctionCall","src":"7490:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7481:3:29"},"nodeType":"YulFunctionCall","src":"7481:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7474:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7222:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7229:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7237:3:29","type":""}],"src":"7149:377:29"},{"body":{"nodeType":"YulBlock","src":"7650:195:29","statements":[{"nodeType":"YulAssignment","src":"7660:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7672:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7683:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7668:3:29"},"nodeType":"YulFunctionCall","src":"7668:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7660:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7707:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7718:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7703:3:29"},"nodeType":"YulFunctionCall","src":"7703:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7726:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7732:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7722:3:29"},"nodeType":"YulFunctionCall","src":"7722:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7696:6:29"},"nodeType":"YulFunctionCall","src":"7696:47:29"},"nodeType":"YulExpressionStatement","src":"7696:47:29"},{"nodeType":"YulAssignment","src":"7752:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7824:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"7833:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7760:63:29"},"nodeType":"YulFunctionCall","src":"7760:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7752:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7622:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7634:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7645:4:29","type":""}],"src":"7532:313:29"},{"body":{"nodeType":"YulBlock","src":"7934:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"7980:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7982:77:29"},"nodeType":"YulFunctionCall","src":"7982:79:29"},"nodeType":"YulExpressionStatement","src":"7982:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7955:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7964:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7951:3:29"},"nodeType":"YulFunctionCall","src":"7951:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7976:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7947:3:29"},"nodeType":"YulFunctionCall","src":"7947:32:29"},"nodeType":"YulIf","src":"7944:119:29"},{"nodeType":"YulBlock","src":"8073:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8088:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8102:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8092:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8117:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8152:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8163:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8148:3:29"},"nodeType":"YulFunctionCall","src":"8148:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8172:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8127:20:29"},"nodeType":"YulFunctionCall","src":"8127:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8117:6:29"}]}]},{"nodeType":"YulBlock","src":"8200:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8215:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"8229:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8219:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8245:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8280:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8291:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8276:3:29"},"nodeType":"YulFunctionCall","src":"8276:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8300:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8255:20:29"},"nodeType":"YulFunctionCall","src":"8255:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8245:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7896:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7907:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7919:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7927:6:29","type":""}],"src":"7851:474:29"},{"body":{"nodeType":"YulBlock","src":"8413:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"8518:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8520:16:29"},"nodeType":"YulFunctionCall","src":"8520:18:29"},"nodeType":"YulExpressionStatement","src":"8520:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8490:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8498:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8487:2:29"},"nodeType":"YulFunctionCall","src":"8487:30:29"},"nodeType":"YulIf","src":"8484:56:29"},{"nodeType":"YulAssignment","src":"8550:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8562:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8570:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8558:3:29"},"nodeType":"YulFunctionCall","src":"8558:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8550:4:29"}]},{"nodeType":"YulAssignment","src":"8612:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8624:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"8630:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8620:3:29"},"nodeType":"YulFunctionCall","src":"8620:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8612:4:29"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8397:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8408:4:29","type":""}],"src":"8331:311:29"},{"body":{"nodeType":"YulBlock","src":"8737:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8754:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8757:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8747:6:29"},"nodeType":"YulFunctionCall","src":"8747:12:29"},"nodeType":"YulExpressionStatement","src":"8747:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"8648:117:29"},{"body":{"nodeType":"YulBlock","src":"8890:608:29","statements":[{"nodeType":"YulAssignment","src":"8900:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8982:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8925:56:29"},"nodeType":"YulFunctionCall","src":"8925:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8909:15:29"},"nodeType":"YulFunctionCall","src":"8909:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8900:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"8999:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"9010:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9003:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9032:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"9039:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9025:6:29"},"nodeType":"YulFunctionCall","src":"9025:21:29"},"nodeType":"YulExpressionStatement","src":"9025:21:29"},{"nodeType":"YulAssignment","src":"9055:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9066:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"9073:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9062:3:29"},"nodeType":"YulFunctionCall","src":"9062:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9055:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"9088:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9106:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9118:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9126:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9114:3:29"},"nodeType":"YulFunctionCall","src":"9114:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9102:3:29"},"nodeType":"YulFunctionCall","src":"9102:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9092:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9160:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9174:77:29"},"nodeType":"YulFunctionCall","src":"9174:79:29"},"nodeType":"YulExpressionStatement","src":"9174:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9147:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"9155:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9144:2:29"},"nodeType":"YulFunctionCall","src":"9144:15:29"},"nodeType":"YulIf","src":"9141:122:29"},{"body":{"nodeType":"YulBlock","src":"9348:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9363:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"9381:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9367:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9405:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9431:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"9443:3:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9410:20:29"},"nodeType":"YulFunctionCall","src":"9410:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9398:6:29"},"nodeType":"YulFunctionCall","src":"9398:50:29"},"nodeType":"YulExpressionStatement","src":"9398:50:29"},{"nodeType":"YulAssignment","src":"9461:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9472:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9477:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9468:3:29"},"nodeType":"YulFunctionCall","src":"9468:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9461:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9301:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"9306:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9298:2:29"},"nodeType":"YulFunctionCall","src":"9298:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9314:25:29","statements":[{"nodeType":"YulAssignment","src":"9316:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9327:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9332:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9323:3:29"},"nodeType":"YulFunctionCall","src":"9323:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"9316:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"9276:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9278:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"9289:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"9282:3:29","type":""}]}]},"src":"9272:220:29"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8860:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8868:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"8876:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8884:5:29","type":""}],"src":"8788:710:29"},{"body":{"nodeType":"YulBlock","src":"9598:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"9647:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9649:77:29"},"nodeType":"YulFunctionCall","src":"9649:79:29"},"nodeType":"YulExpressionStatement","src":"9649:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9626:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9634:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9622:3:29"},"nodeType":"YulFunctionCall","src":"9622:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"9641:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9618:3:29"},"nodeType":"YulFunctionCall","src":"9618:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9611:6:29"},"nodeType":"YulFunctionCall","src":"9611:35:29"},"nodeType":"YulIf","src":"9608:122:29"},{"nodeType":"YulVariableDeclaration","src":"9739:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9766:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9753:12:29"},"nodeType":"YulFunctionCall","src":"9753:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9743:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9782:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9858:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"9866:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9854:3:29"},"nodeType":"YulFunctionCall","src":"9854:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"9873:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"9881:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9791:62:29"},"nodeType":"YulFunctionCall","src":"9791:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9782:5:29"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9576:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"9584:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9592:5:29","type":""}],"src":"9521:370:29"},{"body":{"nodeType":"YulBlock","src":"9988:448:29","statements":[{"body":{"nodeType":"YulBlock","src":"10034:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10036:77:29"},"nodeType":"YulFunctionCall","src":"10036:79:29"},"nodeType":"YulExpressionStatement","src":"10036:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10009:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10018:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10005:3:29"},"nodeType":"YulFunctionCall","src":"10005:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10030:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10001:3:29"},"nodeType":"YulFunctionCall","src":"10001:32:29"},"nodeType":"YulIf","src":"9998:119:29"},{"nodeType":"YulBlock","src":"10127:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"10142:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10173:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10184:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10169:3:29"},"nodeType":"YulFunctionCall","src":"10169:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10156:12:29"},"nodeType":"YulFunctionCall","src":"10156:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10146:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"10234:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10236:77:29"},"nodeType":"YulFunctionCall","src":"10236:79:29"},"nodeType":"YulExpressionStatement","src":"10236:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10206:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10214:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10203:2:29"},"nodeType":"YulFunctionCall","src":"10203:30:29"},"nodeType":"YulIf","src":"10200:117:29"},{"nodeType":"YulAssignment","src":"10331:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10391:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"10402:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10387:3:29"},"nodeType":"YulFunctionCall","src":"10387:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10411:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10341:45:29"},"nodeType":"YulFunctionCall","src":"10341:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10331:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9958:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9969:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9981:6:29","type":""}],"src":"9897:539:29"},{"body":{"nodeType":"YulBlock","src":"10487:32:29","statements":[{"nodeType":"YulAssignment","src":"10497:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"10508:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10497:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10469:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10479:7:29","type":""}],"src":"10442:77:29"},{"body":{"nodeType":"YulBlock","src":"10568:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"10625:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10634:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10637:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10627:6:29"},"nodeType":"YulFunctionCall","src":"10627:12:29"},"nodeType":"YulExpressionStatement","src":"10627:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10591:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10616:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10598:17:29"},"nodeType":"YulFunctionCall","src":"10598:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10588:2:29"},"nodeType":"YulFunctionCall","src":"10588:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10581:6:29"},"nodeType":"YulFunctionCall","src":"10581:43:29"},"nodeType":"YulIf","src":"10578:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10561:5:29","type":""}],"src":"10525:122:29"},{"body":{"nodeType":"YulBlock","src":"10705:87:29","statements":[{"nodeType":"YulAssignment","src":"10715:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10737:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10724:12:29"},"nodeType":"YulFunctionCall","src":"10724:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10715:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10780:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10753:26:29"},"nodeType":"YulFunctionCall","src":"10753:33:29"},"nodeType":"YulExpressionStatement","src":"10753:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10683:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"10691:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10699:5:29","type":""}],"src":"10653:139:29"},{"body":{"nodeType":"YulBlock","src":"10864:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"10910:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10912:77:29"},"nodeType":"YulFunctionCall","src":"10912:79:29"},"nodeType":"YulExpressionStatement","src":"10912:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10885:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10894:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10881:3:29"},"nodeType":"YulFunctionCall","src":"10881:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"10906:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10877:3:29"},"nodeType":"YulFunctionCall","src":"10877:32:29"},"nodeType":"YulIf","src":"10874:119:29"},{"nodeType":"YulBlock","src":"11003:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11018:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11032:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11022:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11047:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11082:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11093:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11078:3:29"},"nodeType":"YulFunctionCall","src":"11078:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11102:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11057:20:29"},"nodeType":"YulFunctionCall","src":"11057:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11047:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10834:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10845:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10857:6:29","type":""}],"src":"10798:329:29"},{"body":{"nodeType":"YulBlock","src":"11198:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11215:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11238:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11220:17:29"},"nodeType":"YulFunctionCall","src":"11220:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11208:6:29"},"nodeType":"YulFunctionCall","src":"11208:37:29"},"nodeType":"YulExpressionStatement","src":"11208:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11186:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11193:3:29","type":""}],"src":"11133:118:29"},{"body":{"nodeType":"YulBlock","src":"11355:124:29","statements":[{"nodeType":"YulAssignment","src":"11365:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11377:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11388:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11373:3:29"},"nodeType":"YulFunctionCall","src":"11373:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11365:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11445:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11458:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11469:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11454:3:29"},"nodeType":"YulFunctionCall","src":"11454:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11401:43:29"},"nodeType":"YulFunctionCall","src":"11401:71:29"},"nodeType":"YulExpressionStatement","src":"11401:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11327:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11339:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11350:4:29","type":""}],"src":"11257:222:29"},{"body":{"nodeType":"YulBlock","src":"11550:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11567:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11590:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11572:17:29"},"nodeType":"YulFunctionCall","src":"11572:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11560:6:29"},"nodeType":"YulFunctionCall","src":"11560:37:29"},"nodeType":"YulExpressionStatement","src":"11560:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11538:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11545:3:29","type":""}],"src":"11485:118:29"},{"body":{"nodeType":"YulBlock","src":"11707:124:29","statements":[{"nodeType":"YulAssignment","src":"11717:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11729:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11740:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11725:3:29"},"nodeType":"YulFunctionCall","src":"11725:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11717:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11797:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11810:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"11821:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11806:3:29"},"nodeType":"YulFunctionCall","src":"11806:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11753:43:29"},"nodeType":"YulFunctionCall","src":"11753:71:29"},"nodeType":"YulExpressionStatement","src":"11753:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11679:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11691:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11702:4:29","type":""}],"src":"11609:222:29"},{"body":{"nodeType":"YulBlock","src":"11967:1029:29","statements":[{"body":{"nodeType":"YulBlock","src":"12013:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12015:77:29"},"nodeType":"YulFunctionCall","src":"12015:79:29"},"nodeType":"YulExpressionStatement","src":"12015:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11988:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11997:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11984:3:29"},"nodeType":"YulFunctionCall","src":"11984:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12009:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11980:3:29"},"nodeType":"YulFunctionCall","src":"11980:32:29"},"nodeType":"YulIf","src":"11977:119:29"},{"nodeType":"YulBlock","src":"12106:287:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12121:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12152:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12163:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12148:3:29"},"nodeType":"YulFunctionCall","src":"12148:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12135:12:29"},"nodeType":"YulFunctionCall","src":"12135:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12125:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12213:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12215:77:29"},"nodeType":"YulFunctionCall","src":"12215:79:29"},"nodeType":"YulExpressionStatement","src":"12215:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12185:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12193:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12182:2:29"},"nodeType":"YulFunctionCall","src":"12182:30:29"},"nodeType":"YulIf","src":"12179:117:29"},{"nodeType":"YulAssignment","src":"12310:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12355:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12366:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12351:3:29"},"nodeType":"YulFunctionCall","src":"12351:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12375:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12320:30:29"},"nodeType":"YulFunctionCall","src":"12320:63:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12310:6:29"}]}]},{"nodeType":"YulBlock","src":"12403:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12418:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12449:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12460:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12445:3:29"},"nodeType":"YulFunctionCall","src":"12445:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12432:12:29"},"nodeType":"YulFunctionCall","src":"12432:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12422:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12511:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12513:77:29"},"nodeType":"YulFunctionCall","src":"12513:79:29"},"nodeType":"YulExpressionStatement","src":"12513:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12483:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12491:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12480:2:29"},"nodeType":"YulFunctionCall","src":"12480:30:29"},"nodeType":"YulIf","src":"12477:117:29"},{"nodeType":"YulAssignment","src":"12608:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12653:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12664:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12649:3:29"},"nodeType":"YulFunctionCall","src":"12649:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12673:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12618:30:29"},"nodeType":"YulFunctionCall","src":"12618:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12608:6:29"}]}]},{"nodeType":"YulBlock","src":"12701:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12716:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12747:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12758:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12743:3:29"},"nodeType":"YulFunctionCall","src":"12743:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12730:12:29"},"nodeType":"YulFunctionCall","src":"12730:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12720:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12809:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12811:77:29"},"nodeType":"YulFunctionCall","src":"12811:79:29"},"nodeType":"YulExpressionStatement","src":"12811:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12781:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12789:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12778:2:29"},"nodeType":"YulFunctionCall","src":"12778:30:29"},"nodeType":"YulIf","src":"12775:117:29"},{"nodeType":"YulAssignment","src":"12906:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12951:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12962:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12947:3:29"},"nodeType":"YulFunctionCall","src":"12947:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12971:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12916:30:29"},"nodeType":"YulFunctionCall","src":"12916:63:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12906:6:29"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11921:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11932:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11944:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11952:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11960:6:29","type":""}],"src":"11837:1159:29"},{"body":{"nodeType":"YulBlock","src":"13055:32:29","statements":[{"nodeType":"YulAssignment","src":"13065:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"13076:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13065:7:29"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13037:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13047:7:29","type":""}],"src":"13002:85:29"},{"body":{"nodeType":"YulBlock","src":"13137:57:29","statements":[{"nodeType":"YulAssignment","src":"13147:41:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13162:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"13169:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13158:3:29"},"nodeType":"YulFunctionCall","src":"13158:30:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"13147:7:29"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13119:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"13129:7:29","type":""}],"src":"13093:101:29"},{"body":{"nodeType":"YulBlock","src":"13232:28:29","statements":[{"nodeType":"YulAssignment","src":"13242:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"13249:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13242:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13218:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13228:3:29","type":""}],"src":"13200:60:29"},{"body":{"nodeType":"YulBlock","src":"13333:89:29","statements":[{"nodeType":"YulAssignment","src":"13343:73:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13408:5:29"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"13382:25:29"},"nodeType":"YulFunctionCall","src":"13382:32:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"13373:8:29"},"nodeType":"YulFunctionCall","src":"13373:42:29"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13356:16:29"},"nodeType":"YulFunctionCall","src":"13356:60:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"13343:9:29"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13313:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"13323:9:29","type":""}],"src":"13266:156:29"},{"body":{"nodeType":"YulBlock","src":"13500:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13517:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13560:5:29"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nodeType":"YulIdentifier","src":"13522:37:29"},"nodeType":"YulFunctionCall","src":"13522:44:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13510:6:29"},"nodeType":"YulFunctionCall","src":"13510:57:29"},"nodeType":"YulExpressionStatement","src":"13510:57:29"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13488:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13495:3:29","type":""}],"src":"13428:145:29"},{"body":{"nodeType":"YulBlock","src":"13684:131:29","statements":[{"nodeType":"YulAssignment","src":"13694:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13706:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13717:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13702:3:29"},"nodeType":"YulFunctionCall","src":"13702:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13694:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13781:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13794:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13805:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13790:3:29"},"nodeType":"YulFunctionCall","src":"13790:17:29"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13730:50:29"},"nodeType":"YulFunctionCall","src":"13730:78:29"},"nodeType":"YulExpressionStatement","src":"13730:78:29"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13656:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13668:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13679:4:29","type":""}],"src":"13579:236:29"},{"body":{"nodeType":"YulBlock","src":"13849:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13866:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13869:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13859:6:29"},"nodeType":"YulFunctionCall","src":"13859:88:29"},"nodeType":"YulExpressionStatement","src":"13859:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13963:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13966:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13956:6:29"},"nodeType":"YulFunctionCall","src":"13956:15:29"},"nodeType":"YulExpressionStatement","src":"13956:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13987:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13990:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13980:6:29"},"nodeType":"YulFunctionCall","src":"13980:15:29"},"nodeType":"YulExpressionStatement","src":"13980:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"13821:180:29"},{"body":{"nodeType":"YulBlock","src":"14035:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14052:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14055:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14045:6:29"},"nodeType":"YulFunctionCall","src":"14045:88:29"},"nodeType":"YulExpressionStatement","src":"14045:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14149:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14152:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14142:6:29"},"nodeType":"YulFunctionCall","src":"14142:15:29"},"nodeType":"YulExpressionStatement","src":"14142:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14173:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14176:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14166:6:29"},"nodeType":"YulFunctionCall","src":"14166:15:29"},"nodeType":"YulExpressionStatement","src":"14166:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"14007:180:29"},{"body":{"nodeType":"YulBlock","src":"14236:190:29","statements":[{"nodeType":"YulAssignment","src":"14246:33:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14273:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"14255:17:29"},"nodeType":"YulFunctionCall","src":"14255:24:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"14246:5:29"}]},{"body":{"nodeType":"YulBlock","src":"14369:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14371:16:29"},"nodeType":"YulFunctionCall","src":"14371:18:29"},"nodeType":"YulExpressionStatement","src":"14371:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14294:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14301:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14291:2:29"},"nodeType":"YulFunctionCall","src":"14291:77:29"},"nodeType":"YulIf","src":"14288:103:29"},{"nodeType":"YulAssignment","src":"14400:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14411:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"14418:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14407:3:29"},"nodeType":"YulFunctionCall","src":"14407:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14400:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14222:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"14232:3:29","type":""}],"src":"14193:233:29"},{"body":{"nodeType":"YulBlock","src":"14598:348:29","statements":[{"nodeType":"YulAssignment","src":"14608:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14620:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14631:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14616:3:29"},"nodeType":"YulFunctionCall","src":"14616:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14608:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14655:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14666:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14651:3:29"},"nodeType":"YulFunctionCall","src":"14651:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14674:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14680:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14670:3:29"},"nodeType":"YulFunctionCall","src":"14670:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14644:6:29"},"nodeType":"YulFunctionCall","src":"14644:47:29"},"nodeType":"YulExpressionStatement","src":"14644:47:29"},{"nodeType":"YulAssignment","src":"14700:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14772:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"14781:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14708:63:29"},"nodeType":"YulFunctionCall","src":"14708:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14700:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14803:3:29"},"nodeType":"YulFunctionCall","src":"14803:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14827:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"14833:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14823:3:29"},"nodeType":"YulFunctionCall","src":"14823:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14796:6:29"},"nodeType":"YulFunctionCall","src":"14796:48:29"},"nodeType":"YulExpressionStatement","src":"14796:48:29"},{"nodeType":"YulAssignment","src":"14853:86:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14925:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14861:63:29"},"nodeType":"YulFunctionCall","src":"14861:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14853:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14562:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14574:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14582:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14593:4:29","type":""}],"src":"14432:514:29"},{"body":{"nodeType":"YulBlock","src":"15078:206:29","statements":[{"nodeType":"YulAssignment","src":"15088:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15100:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15111:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15096:3:29"},"nodeType":"YulFunctionCall","src":"15096:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15088:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15168:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15181:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15192:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15177:3:29"},"nodeType":"YulFunctionCall","src":"15177:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15124:43:29"},"nodeType":"YulFunctionCall","src":"15124:71:29"},"nodeType":"YulExpressionStatement","src":"15124:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15249:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15262:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15273:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15258:3:29"},"nodeType":"YulFunctionCall","src":"15258:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"15205:43:29"},"nodeType":"YulFunctionCall","src":"15205:72:29"},"nodeType":"YulExpressionStatement","src":"15205:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15042:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15054:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15062:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15073:4:29","type":""}],"src":"14952:332:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101d15760003560e01c80638beb60b6116100f7578063a720640e11610095578063d547741f11610064578063d547741f14610682578063d82faa48146106ab578063f22b9ab6146106d6578063fc23413a14610701576101d8565b8063a720640e146105c4578063ad4fb5cd146105ef578063b7660cd31461061a578063b77bf60014610657576101d8565b8063978bbdb9116100d1578063978bbdb91461051a578063980e3af814610545578063a1c864e914610570578063a217fddf14610599576101d8565b80638beb60b6146104895780638da5cb5b146104b257806391d14854146104dd576101d8565b806334b89fb71161016f5780635e0118b61161013e5780635e0118b6146103e1578063847741a01461040c57806389c72556146104355780638aeda25a1461045e576101d8565b806334b89fb714610337578063362c3ab81461036257806336568abe1461038d5780635c107264146103b6576101d8565b80632576bdea116101ab5780632576bdea14610291578063263ef5b9146102bc5780632ce70722146102e55780632f2ff15d1461030e576101d8565b806301ffc9a7146101da57806308a1cd0514610217578063248a9ca314610254576101d8565b366101d857005b005b3480156101e657600080fd5b5061020160048036038101906101fc9190611587565b61072c565b60405161020e91906115cf565b60405180910390f35b34801561022357600080fd5b5061023e60048036038101906102399190611730565b6107a6565b60405161024b91906115cf565b60405180910390f35b34801561026057600080fd5b5061027b600480360381019061027691906117af565b6107b1565b60405161028891906117eb565b60405180910390f35b34801561029d57600080fd5b506102a66107d0565b6040516102b391906117eb565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190611864565b6107f4565b005b3480156102f157600080fd5b5061030c60048036038101906103079190611864565b6109a5565b005b34801561031a57600080fd5b5061033560048036038101906103309190611891565b610b39565b005b34801561034357600080fd5b5061034c610b5b565b6040516103599190611950565b60405180910390f35b34801561036e57600080fd5b50610377610b94565b6040516103849190611950565b60405180910390f35b34801561039957600080fd5b506103b460048036038101906103af9190611891565b610bcd565b005b3480156103c257600080fd5b506103cb610c48565b6040516103d89190611950565b60405180910390f35b3480156103ed57600080fd5b506103f6610c81565b60405161040391906117eb565b60405180910390f35b34801561041857600080fd5b50610433600480360381019061042e9190611972565b610ca5565b005b34801561044157600080fd5b5061045c60048036038101906104579190611a7a565b610d0d565b005b34801561046a57600080fd5b50610473610e0d565b60405161048091906117eb565b60405180910390f35b34801561049557600080fd5b506104b060048036038101906104ab9190611af9565b610e31565b005b3480156104be57600080fd5b506104c7610e49565b6040516104d49190611b35565b60405180910390f35b3480156104e957600080fd5b5061050460048036038101906104ff9190611891565b610e6f565b60405161051191906115cf565b60405180910390f35b34801561052657600080fd5b5061052f610ed9565b60405161053c9190611b5f565b60405180910390f35b34801561055157600080fd5b5061055a610edf565b60405161056791906117eb565b60405180910390f35b34801561057c57600080fd5b5061059760048036038101906105929190611b7a565b610f03565b005b3480156105a557600080fd5b506105ae6110fe565b6040516105bb91906117eb565b60405180910390f35b3480156105d057600080fd5b506105d9611105565b6040516105e691906117eb565b60405180910390f35b3480156105fb57600080fd5b50610604611129565b6040516106119190611950565b60405180910390f35b34801561062657600080fd5b50610641600480360381019061063c9190611864565b611162565b60405161064e91906115cf565b60405180910390f35b34801561066357600080fd5b5061066c611182565b6040516106799190611b5f565b60405180910390f35b34801561068e57600080fd5b506106a960048036038101906106a49190611891565b611188565b005b3480156106b757600080fd5b506106c06111aa565b6040516106cd9190611b5f565b60405180910390f35b3480156106e257600080fd5b506106eb6111b0565b6040516106f89190611950565b60405180910390f35b34801561070d57600080fd5b506107166111e9565b6040516107239190611950565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061079f575061079e82611222565b5b9050919050565b600060019050919050565b6000806000838152602001908152602001600020600101549050919050565b7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e81565b60006107fe61128c565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561084c5750825b9050600060018367ffffffffffffffff16148015610881575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561088f575080155b156108c6576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156109165760018560000160086101000a81548160ff0219169083151502179055505b6109407f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c89035412876112a0565b50831561099d5760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516109949190611c7a565b60405180910390a15b505050505050565b60006109af61128c565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156109fd5750825b9050600060018367ffffffffffffffff16148015610a32575060003073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610a40575080155b15610a77576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610ac75760018560000160086101000a81548160ff0219169083151502179055505b610ad46000801b876112a0565b508315610b315760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610b289190611c7a565b60405180910390a15b505050505050565b610b42826107b1565b610b4b81611391565b610b5583836112a0565b50505050565b6040518060400160405280601381526020017f556e617574686f7269736564206163636573730000000000000000000000000081525081565b6040518060400160405280600d81526020017f496e76616c69642070726963650000000000000000000000000000000000000081525081565b610bd56113a5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c39576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c4382826113ad565b505050565b6040518060400160405280600e81526020017f50726f63657373206661696c656400000000000000000000000000000000000081525081565b7f0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e81565b6000801b610cb281611391565b610cdc7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e846112a0565b50610d077f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a0304836112a0565b50505050565b6000801b610d1a81611391565b60005b8251811015610e0857600160056000858481518110610d3f57610d3e611c95565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550828181518110610dab57610daa611c95565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a460405160405180910390a28080610e0090611cf3565b915050610d1d565b505050565b7f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b6000801b610e3e81611391565b816001819055505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60015481565b7f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c8903541281565b60008351116040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525090610f7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f769190611950565b60405180910390fd5b5060008251116040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525090610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff39190611950565b60405180910390fd5b50611006826107a6565b6040518060400160405280601781526020017f5265736f7572636520616c7265616479206578697374730000000000000000008152509061107d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110749190611950565b60405180910390fd5b506110a87f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f336112a0565b503373ffffffffffffffffffffffffffffffffffffffff167f21dd0ecdd49765309a51fb77b31ada340d3bf2d7b6cf11cda8c66234933e8fb784846040516110f1929190611d3b565b60405180910390a2505050565b6000801b81565b7f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a030481565b6040518060400160405280601281526020017f5265736f75726365206e6f7420666f756e64000000000000000000000000000081525081565b60056020528060005260406000206000915054906101000a900460ff1681565b60035481565b611191826107b1565b61119a81611391565b6111a483836113ad565b50505050565b60025481565b6040518060400160405280601781526020017f5265736f7572636520616c72656164792065786973747300000000000000000081525081565b6040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008061129761149f565b90508091505090565b60006112ac8383610e6f565b61138657600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506113236113a5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061138b565b600090505b92915050565b6113a28161139d6113a5565b6114ca565b50565b600033905090565b60006113b98383610e6f565b1561149457600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506114316113a5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611499565b600090505b92915050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6114d48282610e6f565b6115175780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161150e929190611d72565b60405180910390fd5b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115648161152f565b811461156f57600080fd5b50565b6000813590506115818161155b565b92915050565b60006020828403121561159d5761159c611525565b5b60006115ab84828501611572565b91505092915050565b60008115159050919050565b6115c9816115b4565b82525050565b60006020820190506115e460008301846115c0565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61163d826115f4565b810181811067ffffffffffffffff8211171561165c5761165b611605565b5b80604052505050565b600061166f61151b565b905061167b8282611634565b919050565b600067ffffffffffffffff82111561169b5761169a611605565b5b6116a4826115f4565b9050602081019050919050565b82818337600083830152505050565b60006116d36116ce84611680565b611665565b9050828152602081018484840111156116ef576116ee6115ef565b5b6116fa8482856116b1565b509392505050565b600082601f830112611717576117166115ea565b5b81356117278482602086016116c0565b91505092915050565b60006020828403121561174657611745611525565b5b600082013567ffffffffffffffff8111156117645761176361152a565b5b61177084828501611702565b91505092915050565b6000819050919050565b61178c81611779565b811461179757600080fd5b50565b6000813590506117a981611783565b92915050565b6000602082840312156117c5576117c4611525565b5b60006117d38482850161179a565b91505092915050565b6117e581611779565b82525050565b600060208201905061180060008301846117dc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061183182611806565b9050919050565b61184181611826565b811461184c57600080fd5b50565b60008135905061185e81611838565b92915050565b60006020828403121561187a57611879611525565b5b60006118888482850161184f565b91505092915050565b600080604083850312156118a8576118a7611525565b5b60006118b68582860161179a565b92505060206118c78582860161184f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561190b5780820151818401526020810190506118f0565b60008484015250505050565b6000611922826118d1565b61192c81856118dc565b935061193c8185602086016118ed565b611945816115f4565b840191505092915050565b6000602082019050818103600083015261196a8184611917565b905092915050565b6000806040838503121561198957611988611525565b5b60006119978582860161184f565b92505060206119a88582860161184f565b9150509250929050565b600067ffffffffffffffff8211156119cd576119cc611605565b5b602082029050602081019050919050565b600080fd5b60006119f66119f1846119b2565b611665565b90508083825260208201905060208402830185811115611a1957611a186119de565b5b835b81811015611a425780611a2e888261184f565b845260208401935050602081019050611a1b565b5050509392505050565b600082601f830112611a6157611a606115ea565b5b8135611a718482602086016119e3565b91505092915050565b600060208284031215611a9057611a8f611525565b5b600082013567ffffffffffffffff811115611aae57611aad61152a565b5b611aba84828501611a4c565b91505092915050565b6000819050919050565b611ad681611ac3565b8114611ae157600080fd5b50565b600081359050611af381611acd565b92915050565b600060208284031215611b0f57611b0e611525565b5b6000611b1d84828501611ae4565b91505092915050565b611b2f81611826565b82525050565b6000602082019050611b4a6000830184611b26565b92915050565b611b5981611ac3565b82525050565b6000602082019050611b746000830184611b50565b92915050565b600080600060608486031215611b9357611b92611525565b5b600084013567ffffffffffffffff811115611bb157611bb061152a565b5b611bbd86828701611702565b935050602084013567ffffffffffffffff811115611bde57611bdd61152a565b5b611bea86828701611702565b925050604084013567ffffffffffffffff811115611c0b57611c0a61152a565b5b611c1786828701611702565b9150509250925092565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b6000611c64611c5f611c5a84611c21565b611c3f565b611c2b565b9050919050565b611c7481611c49565b82525050565b6000602082019050611c8f6000830184611c6b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cfe82611ac3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d3057611d2f611cc4565b5b600182019050919050565b60006040820190508181036000830152611d558185611917565b90508181036020830152611d698184611917565b90509392505050565b6000604082019050611d876000830185611b26565b611d9460208301846117dc565b939250505056fea2646970667358221220c36bf42220ba8df1aa3562ff43e200b36768ca4e9cfd3409db181dcd4c0d1a0464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D1 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8BEB60B6 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA720640E GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xD82FAA48 EQ PUSH2 0x6AB JUMPI DUP1 PUSH4 0xF22B9AB6 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0xFC23413A EQ PUSH2 0x701 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0xA720640E EQ PUSH2 0x5C4 JUMPI DUP1 PUSH4 0xAD4FB5CD EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xB7660CD3 EQ PUSH2 0x61A JUMPI DUP1 PUSH4 0xB77BF600 EQ PUSH2 0x657 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x978BBDB9 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0x980E3AF8 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xA1C864E9 EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x599 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x8BEB60B6 EQ PUSH2 0x489 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4DD JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x34B89FB7 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x5E0118B6 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x5E0118B6 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x847741A0 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x89C72556 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8AEDA25A EQ PUSH2 0x45E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x34B89FB7 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x362C3AB8 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x5C107264 EQ PUSH2 0x3B6 JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x2576BDEA GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x2576BDEA EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x263EF5B9 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x2CE70722 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x30E JUMPI PUSH2 0x1D8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x8A1CD05 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x254 JUMPI PUSH2 0x1D8 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1D8 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x7F4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x335 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xB39 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x377 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xBCD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F6 PUSH2 0xC81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1972 JUMP JUMPDEST PUSH2 0xCA5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0xD0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x473 PUSH2 0xE0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x1AF9 JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C7 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D4 SWAP2 SWAP1 PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x504 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0xE6F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52F PUSH2 0xED9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55A PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x567 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH2 0xF03 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5AE PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BB SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D9 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E6 SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0x1162 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x15CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x66C PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1891 JUMP JUMPDEST PUSH2 0x1188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C0 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x1B5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6EB PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x716 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x79F JUMPI POP PUSH2 0x79E DUP3 PUSH2 0x1222 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FE PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x84C JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x881 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x88F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x8C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x916 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x940 PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP8 PUSH2 0x12A0 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x99D JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9AF PUSH2 0x128C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9FD JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA32 JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xA40 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xAD4 PUSH1 0x0 DUP1 SHL DUP8 PUSH2 0x12A0 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xB31 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xB28 SWAP2 SWAP1 PUSH2 0x1C7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB42 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0xB4B DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0xB55 DUP4 DUP4 PUSH2 0x12A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697365642061636365737300000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xBD5 PUSH2 0x13A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC43 DUP3 DUP3 PUSH2 0x13AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F63657373206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0xE071082E8835E151107BAEB3781CD9C05E5A89FDA0B31203AB6C4FE9AB6053E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xCB2 DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0xCDC PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP5 PUSH2 0x12A0 JUMP JUMPDEST POP PUSH2 0xD07 PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP4 PUSH2 0x12A0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xD1A DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xE08 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xD3F JUMPI PUSH2 0xD3E PUSH2 0x1C95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDAB JUMPI PUSH2 0xDAA PUSH2 0x1C95 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH2 0xE00 SWAP1 PUSH2 0x1CF3 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD1D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0xE3E DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xF7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP3 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xFFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1006 DUP3 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1074 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x10A8 PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F CALLER PUSH2 0x12A0 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x21DD0ECDD49765309A51FB77B31ADA340D3BF2D7B6CF11CDA8C66234933E8FB7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F75726365206E6F7420666F756E640000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1191 DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x119A DUP2 PUSH2 0x1391 JUMP JUMPDEST PUSH2 0x11A4 DUP4 DUP4 PUSH2 0x13AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1297 PUSH2 0x149F JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AC DUP4 DUP4 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x1386 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1323 PUSH2 0x13A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x138B JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A2 DUP2 PUSH2 0x139D PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B9 DUP4 DUP4 PUSH2 0xE6F JUMP JUMPDEST ISZERO PUSH2 0x1494 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1431 PUSH2 0x13A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1499 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14D4 DUP3 DUP3 PUSH2 0xE6F JUMP JUMPDEST PUSH2 0x1517 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150E SWAP3 SWAP2 SWAP1 PUSH2 0x1D72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x152F JUMP JUMPDEST DUP2 EQ PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1581 DUP2 PUSH2 0x155B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP5 DUP3 DUP6 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C9 DUP2 PUSH2 0x15B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x163D DUP3 PUSH2 0x15F4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1605 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166F PUSH2 0x151B JUMP JUMPDEST SWAP1 POP PUSH2 0x167B DUP3 DUP3 PUSH2 0x1634 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x169B JUMPI PUSH2 0x169A PUSH2 0x1605 JUMP JUMPDEST JUMPDEST PUSH2 0x16A4 DUP3 PUSH2 0x15F4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D3 PUSH2 0x16CE DUP5 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x1665 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x16EF JUMPI PUSH2 0x16EE PUSH2 0x15EF JUMP JUMPDEST JUMPDEST PUSH2 0x16FA DUP5 DUP3 DUP6 PUSH2 0x16B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1717 JUMPI PUSH2 0x1716 PUSH2 0x15EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1727 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x16C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1746 JUMPI PUSH2 0x1745 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH2 0x1763 PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1770 DUP5 DUP3 DUP6 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x178C DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP2 EQ PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17A9 DUP2 PUSH2 0x1783 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x179A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1779 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1831 DUP3 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1841 DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP2 EQ PUSH2 0x184C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x185E DUP2 PUSH2 0x1838 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187A JUMPI PUSH2 0x1879 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1888 DUP5 DUP3 DUP6 ADD PUSH2 0x184F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A8 JUMPI PUSH2 0x18A7 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B6 DUP6 DUP3 DUP7 ADD PUSH2 0x179A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C7 DUP6 DUP3 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x190B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x18F0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 DUP3 PUSH2 0x18D1 JUMP JUMPDEST PUSH2 0x192C DUP2 DUP6 PUSH2 0x18DC JUMP JUMPDEST SWAP4 POP PUSH2 0x193C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x1945 DUP2 PUSH2 0x15F4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x196A DUP2 DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1989 JUMPI PUSH2 0x1988 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1997 DUP6 DUP3 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x19A8 DUP6 DUP3 DUP7 ADD PUSH2 0x184F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19CD JUMPI PUSH2 0x19CC PUSH2 0x1605 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19F6 PUSH2 0x19F1 DUP5 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1665 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x19DE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A42 JUMPI DUP1 PUSH2 0x1A2E DUP9 DUP3 PUSH2 0x184F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A1B JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A61 JUMPI PUSH2 0x1A60 PUSH2 0x15EA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A71 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x19E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AAE JUMPI PUSH2 0x1AAD PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1ABA DUP5 DUP3 DUP6 ADD PUSH2 0x1A4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD6 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF3 DUP2 PUSH2 0x1ACD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B1D DUP5 DUP3 DUP6 ADD PUSH2 0x1AE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B2F DUP2 PUSH2 0x1826 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B59 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB1 JUMPI PUSH2 0x1BB0 PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1BBD DUP7 DUP3 DUP8 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BDE JUMPI PUSH2 0x1BDD PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1BEA DUP7 DUP3 DUP8 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C0B JUMPI PUSH2 0x1C0A PUSH2 0x152A JUMP JUMPDEST JUMPDEST PUSH2 0x1C17 DUP7 DUP3 DUP8 ADD PUSH2 0x1702 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C64 PUSH2 0x1C5F PUSH2 0x1C5A DUP5 PUSH2 0x1C21 JUMP JUMPDEST PUSH2 0x1C3F JUMP JUMPDEST PUSH2 0x1C2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C74 DUP2 PUSH2 0x1C49 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C8F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFE DUP3 PUSH2 0x1AC3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D30 JUMPI PUSH2 0x1D2F PUSH2 0x1CC4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D55 DUP2 DUP6 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1D69 DUP2 DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D87 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B26 JUMP JUMPDEST PUSH2 0x1D94 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 PUSH12 0xF42220BA8DF1AA3562FF43E2 STOP 0xB3 PUSH8 0x68CA4E9CFD3409DB XOR SAR 0xCD 0x4C 0xD BYTE DIV PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"182:3831:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3414:137:25;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:70:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2642:116;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2522:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4226:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;982:72:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;713:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;914:62:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2764:211;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3557:268;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;241:64;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3831:110;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1159:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1061:22:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;311:74;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2981:427;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:78:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;847:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1186:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1122:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1089:27:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;632:75;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;779:62;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3414:137:25:-;3479:4;3502;3495:11;;3414:137;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;391:70:25:-;433:28;391:70;:::o;2642:116::-;4158:30:4;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;2714:37:25::1;355:30;2744:6;2714:10;:37::i;:::-;;5068:14:4::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;2642:116:25;:::o;2522:114::-;4158:30:4;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;2591:38:25::1;2232:4:0;2602:18:25::0;::::1;2622:6;2591:10;:38::i;:::-;;5068:14:4::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;2522:114:25;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;982:72:25:-;;;;;;;;;;;;;;;;;;;:::o;713:60::-;;;;;;;;;;;;;;;;;;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;914:62:25:-;;;;;;;;;;;;;;;;;;;:::o;551:74::-;595:30;551:74;:::o;2764:211::-;2232:4:0;2843:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;2873:38:25::1;433:28;2901:9;2873:10;:38::i;:::-;;2921:47;513:32;2953:14;2921:10;:47::i;:::-;;2764:211:::0;;;:::o;3557:268::-;2232:4:0;3633:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;3668:6:25::1;3663:156;3684:12;:19;3680:1;:23;3663:156;;;3758:4;3724:14;:31;3739:12;3752:1;3739:15;;;;;;;;:::i;:::-;;;;;;;;3724:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3792:12;3805:1;3792:15;;;;;;;;:::i;:::-;;;;;;;;3781:27;;;;;;;;;;;;3705:3;;;;;:::i;:::-;;;;3663:156;;;;3557:268:::0;;:::o;241:64::-;280:25;241:64;:::o;3831:110::-;2232:4:0;3886:18:25;;2464:16:0;2475:4;2464:10;:16::i;:::-;3926:8:25::1;3916:7;:18;;;;3831:110:::0;;:::o;1159:20::-;;;;;;;;;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1061:22:25:-;;;;:::o;311:74::-;355:30;311:74;:::o;2981:427::-;3137:1;3115:11;3109:25;:29;3140:20;;;;;;;;;;;;;;;;;3101:60;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3204:1;3185:8;3179:22;:26;3207:20;;;;;;;;;;;;;;;;;3171:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3246:20;3257:8;3246:10;:20::i;:::-;3268:24;;;;;;;;;;;;;;;;;3238:55;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3304:36;280:25;3329:10;3304;:36::i;:::-;;3367:10;3356:45;;;3379:11;3392:8;3356:45;;;;;;;:::i;:::-;;;;;;;;2981:427;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;467:78:25:-;513:32;467:78;:::o;847:61::-;;;;;;;;;;;;;;;;;;;:::o;1186:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;1122:31::-;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;1089:27:25:-;;;;:::o;632:75::-;;;;;;;;;;;;;;;;;;;:::o;779:62::-;;;;;;;;;;;;;;;;;;;:::o;763:146:20:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;9071:205:4:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3199:103::-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;8819:122:4:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:117::-;1627:1;1624;1617:12;1641:117;1750:1;1747;1740:12;1764:102;1805:6;1856:2;1852:7;1847:2;1840:5;1836:14;1832:28;1822:38;;1764:102;;;:::o;1872:180::-;1920:77;1917:1;1910:88;2017:4;2014:1;2007:15;2041:4;2038:1;2031:15;2058:281;2141:27;2163:4;2141:27;:::i;:::-;2133:6;2129:40;2271:6;2259:10;2256:22;2235:18;2223:10;2220:34;2217:62;2214:88;;;2282:18;;:::i;:::-;2214:88;2322:10;2318:2;2311:22;2101:238;2058:281;;:::o;2345:129::-;2379:6;2406:20;;:::i;:::-;2396:30;;2435:33;2463:4;2455:6;2435:33;:::i;:::-;2345:129;;;:::o;2480:308::-;2542:4;2632:18;2624:6;2621:30;2618:56;;;2654:18;;:::i;:::-;2618:56;2692:29;2714:6;2692:29;:::i;:::-;2684:37;;2776:4;2770;2766:15;2758:23;;2480:308;;;:::o;2794:146::-;2891:6;2886:3;2881;2868:30;2932:1;2923:6;2918:3;2914:16;2907:27;2794:146;;;:::o;2946:425::-;3024:5;3049:66;3065:49;3107:6;3065:49;:::i;:::-;3049:66;:::i;:::-;3040:75;;3138:6;3131:5;3124:21;3176:4;3169:5;3165:16;3214:3;3205:6;3200:3;3196:16;3193:25;3190:112;;;3221:79;;:::i;:::-;3190:112;3311:54;3358:6;3353:3;3348;3311:54;:::i;:::-;3030:341;2946:425;;;;;:::o;3391:340::-;3447:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:122;;3504:79;;:::i;:::-;3463:122;3621:6;3608:20;3646:79;3721:3;3713:6;3706:4;3698:6;3694:17;3646:79;:::i;:::-;3637:88;;3453:278;3391:340;;;;:::o;3737:509::-;3806:6;3855:2;3843:9;3834:7;3830:23;3826:32;3823:119;;;3861:79;;:::i;:::-;3823:119;4009:1;3998:9;3994:17;3981:31;4039:18;4031:6;4028:30;4025:117;;;4061:79;;:::i;:::-;4025:117;4166:63;4221:7;4212:6;4201:9;4197:22;4166:63;:::i;:::-;4156:73;;3952:287;3737:509;;;;:::o;4252:77::-;4289:7;4318:5;4307:16;;4252:77;;;:::o;4335:122::-;4408:24;4426:5;4408:24;:::i;:::-;4401:5;4398:35;4388:63;;4447:1;4444;4437:12;4388:63;4335:122;:::o;4463:139::-;4509:5;4547:6;4534:20;4525:29;;4563:33;4590:5;4563:33;:::i;:::-;4463:139;;;;:::o;4608:329::-;4667:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:119;;;4722:79;;:::i;:::-;4684:119;4842:1;4867:53;4912:7;4903:6;4892:9;4888:22;4867:53;:::i;:::-;4857:63;;4813:117;4608:329;;;;:::o;4943:118::-;5030:24;5048:5;5030:24;:::i;:::-;5025:3;5018:37;4943:118;;:::o;5067:222::-;5160:4;5198:2;5187:9;5183:18;5175:26;;5211:71;5279:1;5268:9;5264:17;5255:6;5211:71;:::i;:::-;5067:222;;;;:::o;5295:126::-;5332:7;5372:42;5365:5;5361:54;5350:65;;5295:126;;;:::o;5427:96::-;5464:7;5493:24;5511:5;5493:24;:::i;:::-;5482:35;;5427:96;;;:::o;5529:122::-;5602:24;5620:5;5602:24;:::i;:::-;5595:5;5592:35;5582:63;;5641:1;5638;5631:12;5582:63;5529:122;:::o;5657:139::-;5703:5;5741:6;5728:20;5719:29;;5757:33;5784:5;5757:33;:::i;:::-;5657:139;;;;:::o;5802:329::-;5861:6;5910:2;5898:9;5889:7;5885:23;5881:32;5878:119;;;5916:79;;:::i;:::-;5878:119;6036:1;6061:53;6106:7;6097:6;6086:9;6082:22;6061:53;:::i;:::-;6051:63;;6007:117;5802:329;;;;:::o;6137:474::-;6205:6;6213;6262:2;6250:9;6241:7;6237:23;6233:32;6230:119;;;6268:79;;:::i;:::-;6230:119;6388:1;6413:53;6458:7;6449:6;6438:9;6434:22;6413:53;:::i;:::-;6403:63;;6359:117;6515:2;6541:53;6586:7;6577:6;6566:9;6562:22;6541:53;:::i;:::-;6531:63;;6486:118;6137:474;;;;;:::o;6617:99::-;6669:6;6703:5;6697:12;6687:22;;6617:99;;;:::o;6722:169::-;6806:11;6840:6;6835:3;6828:19;6880:4;6875:3;6871:14;6856:29;;6722:169;;;;:::o;6897:246::-;6978:1;6988:113;7002:6;6999:1;6996:13;6988:113;;;7087:1;7082:3;7078:11;7072:18;7068:1;7063:3;7059:11;7052:39;7024:2;7021:1;7017:10;7012:15;;6988:113;;;7135:1;7126:6;7121:3;7117:16;7110:27;6959:184;6897:246;;;:::o;7149:377::-;7237:3;7265:39;7298:5;7265:39;:::i;:::-;7320:71;7384:6;7379:3;7320:71;:::i;:::-;7313:78;;7400:65;7458:6;7453:3;7446:4;7439:5;7435:16;7400:65;:::i;:::-;7490:29;7512:6;7490:29;:::i;:::-;7485:3;7481:39;7474:46;;7241:285;7149:377;;;;:::o;7532:313::-;7645:4;7683:2;7672:9;7668:18;7660:26;;7732:9;7726:4;7722:20;7718:1;7707:9;7703:17;7696:47;7760:78;7833:4;7824:6;7760:78;:::i;:::-;7752:86;;7532:313;;;;:::o;7851:474::-;7919:6;7927;7976:2;7964:9;7955:7;7951:23;7947:32;7944:119;;;7982:79;;:::i;:::-;7944:119;8102:1;8127:53;8172:7;8163:6;8152:9;8148:22;8127:53;:::i;:::-;8117:63;;8073:117;8229:2;8255:53;8300:7;8291:6;8280:9;8276:22;8255:53;:::i;:::-;8245:63;;8200:118;7851:474;;;;;:::o;8331:311::-;8408:4;8498:18;8490:6;8487:30;8484:56;;;8520:18;;:::i;:::-;8484:56;8570:4;8562:6;8558:17;8550:25;;8630:4;8624;8620:15;8612:23;;8331:311;;;:::o;8648:117::-;8757:1;8754;8747:12;8788:710;8884:5;8909:81;8925:64;8982:6;8925:64;:::i;:::-;8909:81;:::i;:::-;8900:90;;9010:5;9039:6;9032:5;9025:21;9073:4;9066:5;9062:16;9055:23;;9126:4;9118:6;9114:17;9106:6;9102:30;9155:3;9147:6;9144:15;9141:122;;;9174:79;;:::i;:::-;9141:122;9289:6;9272:220;9306:6;9301:3;9298:15;9272:220;;;9381:3;9410:37;9443:3;9431:10;9410:37;:::i;:::-;9405:3;9398:50;9477:4;9472:3;9468:14;9461:21;;9348:144;9332:4;9327:3;9323:14;9316:21;;9272:220;;;9276:21;8890:608;;8788:710;;;;;:::o;9521:370::-;9592:5;9641:3;9634:4;9626:6;9622:17;9618:27;9608:122;;9649:79;;:::i;:::-;9608:122;9766:6;9753:20;9791:94;9881:3;9873:6;9866:4;9858:6;9854:17;9791:94;:::i;:::-;9782:103;;9598:293;9521:370;;;;:::o;9897:539::-;9981:6;10030:2;10018:9;10009:7;10005:23;10001:32;9998:119;;;10036:79;;:::i;:::-;9998:119;10184:1;10173:9;10169:17;10156:31;10214:18;10206:6;10203:30;10200:117;;;10236:79;;:::i;:::-;10200:117;10341:78;10411:7;10402:6;10391:9;10387:22;10341:78;:::i;:::-;10331:88;;10127:302;9897:539;;;;:::o;10442:77::-;10479:7;10508:5;10497:16;;10442:77;;;:::o;10525:122::-;10598:24;10616:5;10598:24;:::i;:::-;10591:5;10588:35;10578:63;;10637:1;10634;10627:12;10578:63;10525:122;:::o;10653:139::-;10699:5;10737:6;10724:20;10715:29;;10753:33;10780:5;10753:33;:::i;:::-;10653:139;;;;:::o;10798:329::-;10857:6;10906:2;10894:9;10885:7;10881:23;10877:32;10874:119;;;10912:79;;:::i;:::-;10874:119;11032:1;11057:53;11102:7;11093:6;11082:9;11078:22;11057:53;:::i;:::-;11047:63;;11003:117;10798:329;;;;:::o;11133:118::-;11220:24;11238:5;11220:24;:::i;:::-;11215:3;11208:37;11133:118;;:::o;11257:222::-;11350:4;11388:2;11377:9;11373:18;11365:26;;11401:71;11469:1;11458:9;11454:17;11445:6;11401:71;:::i;:::-;11257:222;;;;:::o;11485:118::-;11572:24;11590:5;11572:24;:::i;:::-;11567:3;11560:37;11485:118;;:::o;11609:222::-;11702:4;11740:2;11729:9;11725:18;11717:26;;11753:71;11821:1;11810:9;11806:17;11797:6;11753:71;:::i;:::-;11609:222;;;;:::o;11837:1159::-;11944:6;11952;11960;12009:2;11997:9;11988:7;11984:23;11980:32;11977:119;;;12015:79;;:::i;:::-;11977:119;12163:1;12152:9;12148:17;12135:31;12193:18;12185:6;12182:30;12179:117;;;12215:79;;:::i;:::-;12179:117;12320:63;12375:7;12366:6;12355:9;12351:22;12320:63;:::i;:::-;12310:73;;12106:287;12460:2;12449:9;12445:18;12432:32;12491:18;12483:6;12480:30;12477:117;;;12513:79;;:::i;:::-;12477:117;12618:63;12673:7;12664:6;12653:9;12649:22;12618:63;:::i;:::-;12608:73;;12403:288;12758:2;12747:9;12743:18;12730:32;12789:18;12781:6;12778:30;12775:117;;;12811:79;;:::i;:::-;12775:117;12916:63;12971:7;12962:6;12951:9;12947:22;12916:63;:::i;:::-;12906:73;;12701:288;11837:1159;;;;;:::o;13002:85::-;13047:7;13076:5;13065:16;;13002:85;;;:::o;13093:101::-;13129:7;13169:18;13162:5;13158:30;13147:41;;13093:101;;;:::o;13200:60::-;13228:3;13249:5;13242:12;;13200:60;;;:::o;13266:156::-;13323:9;13356:60;13373:42;13382:32;13408:5;13382:32;:::i;:::-;13373:42;:::i;:::-;13356:60;:::i;:::-;13343:73;;13266:156;;;:::o;13428:145::-;13522:44;13560:5;13522:44;:::i;:::-;13517:3;13510:57;13428:145;;:::o;13579:236::-;13679:4;13717:2;13706:9;13702:18;13694:26;;13730:78;13805:1;13794:9;13790:17;13781:6;13730:78;:::i;:::-;13579:236;;;;:::o;13821:180::-;13869:77;13866:1;13859:88;13966:4;13963:1;13956:15;13990:4;13987:1;13980:15;14007:180;14055:77;14052:1;14045:88;14152:4;14149:1;14142:15;14176:4;14173:1;14166:15;14193:233;14232:3;14255:24;14273:5;14255:24;:::i;:::-;14246:33;;14301:66;14294:5;14291:77;14288:103;;14371:18;;:::i;:::-;14288:103;14418:1;14411:5;14407:13;14400:20;;14193:233;;;:::o;14432:514::-;14593:4;14631:2;14620:9;14616:18;14608:26;;14680:9;14674:4;14670:20;14666:1;14655:9;14651:17;14644:47;14708:78;14781:4;14772:6;14708:78;:::i;:::-;14700:86;;14833:9;14827:4;14823:20;14818:2;14807:9;14803:18;14796:48;14861:78;14934:4;14925:6;14861:78;:::i;:::-;14853:86;;14432:514;;;;;:::o;14952:332::-;15073:4;15111:2;15100:9;15096:18;15088:26;;15124:71;15192:1;15181:9;15177:17;15168:6;15124:71;:::i;:::-;15205:72;15273:2;15262:9;15258:18;15249:6;15205:72;:::i;:::-;14952:332;;;;;:::o"},"methodIdentifiers":{"CREATOR_ROLE()":"8aeda25a","DEFAULT_ADMIN_ROLE()":"a217fddf","DEXA_CREATOR_ROLE()":"980e3af8","DEXA_FEEDS_ROLE()":"2576bdea","DEXA_MESSENGER_ROLE()":"a720640e","DEXA_STORAGE_ROLE()":"5e0118b6","ERROR_DUPLICATE_RESOURCE()":"f22b9ab6","ERROR_INVALID_PRICE()":"362c3ab8","ERROR_INVALID_STRING()":"fc23413a","ERROR_NOT_FOUND()":"ad4fb5cd","ERROR_PROCESS_FAILED()":"5c107264","ERROR_UNAUTHORISED_ACCESS()":"34b89fb7","_allowedTokens(address)":"b7660cd3","addTokenToWhitelist(address[])":"89c72556","creatorCount()":"d82faa48","feeRate()":"978bbdb9","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","init_dexa_base(address)":"2ce70722","init_dexa_creator(address)":"263ef5b9","init_roles(address,address)":"847741a0","isNameFree(string)":"08a1cd05","owner()":"8da5cb5b","registerCreator(string,string,string)":"a1c864e9","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setAdminFee(uint256)":"8beb60b6","supportsInterface(bytes4)":"01ffc9a7","transactionCount()":"b77bf600"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BalanceCredited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BalanceDebited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"NewCreator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAddressAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_FEEDS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_MESSENGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_STORAGE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_DUPLICATE_RESOURCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_INVALID_PRICE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_INVALID_STRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_NOT_FOUND\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_PROCESS_FAILED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_UNAUTHORISED_ACCESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddress\",\"type\":\"address[]\"}],\"name\":\"addTokenToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"init_dexa_base\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"init_dexa_creator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dexaFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dexaMessenger\",\"type\":\"address\"}],\"name\":\"init_roles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"isNameFree\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"displayName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dexaProfile\",\"type\":\"string\"}],\"name\":\"registerCreator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRate\",\"type\":\"uint256\"}],\"name\":\"setAdminFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexaCreator.sol\":\"DexaCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/DexaCreator.sol\":{\"keccak256\":\"0xcd6adb78ad750350703e4efc3a3693f10ef45924e49b7da9c0d21a132632c651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a7f78168eb0b09a581cc096baae4e2da4ba5e276f54d6b66a2f89d3e316c659\",\"dweb:/ipfs/QmdMo3HD3vtkyBLz3tLAGnXjuhvwW1oFXkakHtXXz6LbH8\"]}},\"version\":1}"}},"contracts/DexaFeeds.sol":{"DexaFeeds":{"abi":[{"inputs":[{"internalType":"address payable","name":"_dexaCreator","type":"address"},{"internalType":"address","name":"_feedsToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":true,"internalType":"uint256","name":"postId","type":"uint256"},{"indexed":false,"internalType":"string","name":"gnfdId","type":"string"},{"indexed":false,"internalType":"address","name":"remintToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"remintPrice","type":"uint256"}],"name":"PostMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"postId","type":"uint256"},{"indexed":false,"internalType":"string","name":"offChainId","type":"string"},{"indexed":false,"internalType":"string","name":"message","type":"string"},{"indexed":false,"internalType":"address","name":"tippedToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"tipId","type":"uint256"}],"name":"Tipped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"}],"name":"TokenAdded","type":"event"},{"inputs":[],"name":"CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_FEEDS_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_MESSENGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_STORAGE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_DUPLICATE_RESOURCE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_INVALID_PRICE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_INVALID_STRING","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_NOT_FOUND","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_PROCESS_FAILED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_UNAUTHORISED_ACCESS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"_allowedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"tokenAddress","type":"address[]"}],"name":"addTokenToWhitelist","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"postId","type":"uint256"},{"internalType":"string","name":"commentId","type":"string"},{"internalType":"string","name":"content","type":"string"}],"name":"commentOnPost","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"dexaCreator","outputs":[{"internalType":"contract DexaCreator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feedsToken","outputs":[{"internalType":"contract FeedsToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_8246":{"entryPoint":null,"id":8246,"parameterSlots":2,"returnSlots":0},"@_grantRole_256":{"entryPoint":215,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1675":{"entryPoint":580,"id":1675,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":474,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_address_fromMemory":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":694,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":625,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":593,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":588,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":714,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1790:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:81:29","statements":[{"nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:29"},"nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nodeType":"YulBlock","src":"519:51:29","statements":[{"nodeType":"YulAssignment","src":"529:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:29"},"nodeType":"YulFunctionCall","src":"540:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:29"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:29","type":""}],"src":"466:104:29"},{"body":{"nodeType":"YulBlock","src":"627:87:29","statements":[{"body":{"nodeType":"YulBlock","src":"692:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"701:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"704:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"694:6:29"},"nodeType":"YulFunctionCall","src":"694:12:29"},"nodeType":"YulExpressionStatement","src":"694:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"683:5:29"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"657:25:29"},"nodeType":"YulFunctionCall","src":"657:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"647:2:29"},"nodeType":"YulFunctionCall","src":"647:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"640:6:29"},"nodeType":"YulFunctionCall","src":"640:51:29"},"nodeType":"YulIf","src":"637:71:29"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:29","type":""}],"src":"576:138:29"},{"body":{"nodeType":"YulBlock","src":"791:88:29","statements":[{"nodeType":"YulAssignment","src":"801:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"816:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"810:5:29"},"nodeType":"YulFunctionCall","src":"810:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"801:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"867:5:29"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"832:34:29"},"nodeType":"YulFunctionCall","src":"832:41:29"},"nodeType":"YulExpressionStatement","src":"832:41:29"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"769:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"777:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"785:5:29","type":""}],"src":"720:159:29"},{"body":{"nodeType":"YulBlock","src":"930:51:29","statements":[{"nodeType":"YulAssignment","src":"940:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"969:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"951:17:29"},"nodeType":"YulFunctionCall","src":"951:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"940:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"912:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"922:7:29","type":""}],"src":"885:96:29"},{"body":{"nodeType":"YulBlock","src":"1030:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"1087:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1096:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1099:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1089:6:29"},"nodeType":"YulFunctionCall","src":"1089:12:29"},"nodeType":"YulExpressionStatement","src":"1089:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1053:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1078:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1060:17:29"},"nodeType":"YulFunctionCall","src":"1060:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1050:2:29"},"nodeType":"YulFunctionCall","src":"1050:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1043:6:29"},"nodeType":"YulFunctionCall","src":"1043:43:29"},"nodeType":"YulIf","src":"1040:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1023:5:29","type":""}],"src":"987:122:29"},{"body":{"nodeType":"YulBlock","src":"1178:80:29","statements":[{"nodeType":"YulAssignment","src":"1188:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1203:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1197:5:29"},"nodeType":"YulFunctionCall","src":"1197:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1188:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1246:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1219:26:29"},"nodeType":"YulFunctionCall","src":"1219:33:29"},"nodeType":"YulExpressionStatement","src":"1219:33:29"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1156:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1164:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1172:5:29","type":""}],"src":"1115:143:29"},{"body":{"nodeType":"YulBlock","src":"1366:421:29","statements":[{"body":{"nodeType":"YulBlock","src":"1412:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1414:77:29"},"nodeType":"YulFunctionCall","src":"1414:79:29"},"nodeType":"YulExpressionStatement","src":"1414:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1387:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1396:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1383:3:29"},"nodeType":"YulFunctionCall","src":"1383:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1408:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1379:3:29"},"nodeType":"YulFunctionCall","src":"1379:32:29"},"nodeType":"YulIf","src":"1376:119:29"},{"nodeType":"YulBlock","src":"1505:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1520:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1534:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1524:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1549:82:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1603:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1614:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:29"},"nodeType":"YulFunctionCall","src":"1599:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1623:7:29"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"1559:39:29"},"nodeType":"YulFunctionCall","src":"1559:72:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1549:6:29"}]}]},{"nodeType":"YulBlock","src":"1651:129:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1666:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1680:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1670:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1696:74:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1742:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1753:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1738:3:29"},"nodeType":"YulFunctionCall","src":"1738:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1762:7:29"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1706:31:29"},"nodeType":"YulFunctionCall","src":"1706:64:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1696:6:29"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1328:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1339:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1351:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1359:6:29","type":""}],"src":"1264:523:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620018a1380380620018a18339818101604052810190620000379190620002fb565b6200004c6000801b33620000d760201b60201c565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000342565b6000620000eb8383620001da60201b60201c565b620001cf57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200016b6200024460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620001d4565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200027e8262000251565b9050919050565b620002908162000271565b81146200029c57600080fd5b50565b600081519050620002b08162000285565b92915050565b6000620002c38262000251565b9050919050565b620002d581620002b6565b8114620002e157600080fd5b50565b600081519050620002f581620002ca565b92915050565b600080604083850312156200031557620003146200024c565b5b600062000325858286016200029f565b92505060206200033885828601620002e4565b9150509250929050565b61154f80620003526000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806391d14854116100c3578063b7660cd31161007c578063b7660cd3146103a9578063caf601e1146103d9578063d547741f146103f7578063f22b9ab614610413578063f8ebc03914610431578063fc23413a1461044d57610158565b806391d14854146102e3578063978bbdb914610313578063980e3af814610331578063a217fddf1461034f578063a720640e1461036d578063ad4fb5cd1461038b57610158565b806336568abe1161011557806336568abe146102335780633e7a3e3e1461024f5780635c1072641461026d5780635e0118b61461028b57806389c72556146102a95780638aeda25a146102c557610158565b806301ffc9a71461015d578063248a9ca31461018d5780632576bdea146101bd5780632f2ff15d146101db57806334b89fb7146101f7578063362c3ab814610215575b600080fd5b61017760048036038101906101729190610dd5565b61046b565b6040516101849190610e1d565b60405180910390f35b6101a760048036038101906101a29190610e6e565b6104e5565b6040516101b49190610eaa565b60405180910390f35b6101c5610504565b6040516101d29190610eaa565b60405180910390f35b6101f560048036038101906101f09190610f23565b610528565b005b6101ff61054a565b60405161020c9190610ff3565b60405180910390f35b61021d610583565b60405161022a9190610ff3565b60405180910390f35b61024d60048036038101906102489190610f23565b6105bc565b005b610257610637565b6040516102649190611074565b60405180910390f35b61027561065d565b6040516102829190610ff3565b60405180910390f35b610293610696565b6040516102a09190610eaa565b60405180910390f35b6102c360048036038101906102be91906111d7565b6106ba565b005b6102cd6107ba565b6040516102da9190610eaa565b60405180910390f35b6102fd60048036038101906102f89190610f23565b6107de565b60405161030a9190610e1d565b60405180910390f35b61031b610848565b6040516103289190611239565b60405180910390f35b61033961084e565b6040516103469190610eaa565b60405180910390f35b610357610872565b6040516103649190610eaa565b60405180910390f35b610375610879565b6040516103829190610eaa565b60405180910390f35b61039361089d565b6040516103a09190610ff3565b60405180910390f35b6103c360048036038101906103be9190611254565b6108d6565b6040516103d09190610e1d565b60405180910390f35b6103e16108f6565b6040516103ee91906112b4565b60405180910390f35b610411600480360381019061040c9190610f23565b61091c565b005b61041b61093e565b6040516104289190610ff3565b60405180910390f35b61044b600480360381019061044691906113b0565b610977565b005b610455610a76565b6040516104629190610ff3565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104de57506104dd82610aaf565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e81565b610531826104e5565b61053a81610b19565b6105448383610b2d565b50505050565b6040518060400160405280601381526020017f556e617574686f7269736564206163636573730000000000000000000000000081525081565b6040518060400160405280600d81526020017f496e76616c69642070726963650000000000000000000000000000000000000081525081565b6105c4610c1e565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610628576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106328282610c26565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600e81526020017f50726f63657373206661696c656400000000000000000000000000000000000081525081565b7f0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e81565b6000801b6106c781610b19565b60005b82518110156107b5576001600460008584815181106106ec576106eb61143b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508281815181106107585761075761143b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a460405160405180910390a280806107ad90611499565b9150506106ca565b505050565b7f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60015481565b7f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c8903541281565b6000801b81565b7f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a030481565b6040518060400160405280601281526020017f5265736f75726365206e6f7420666f756e64000000000000000000000000000081525081565b60046020528060005260406000206000915054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610925826104e5565b61092e81610b19565b6109388383610c26565b50505050565b6040518060400160405280601781526020017f5265736f7572636520616c72656164792065786973747300000000000000000081525081565b60008251116040518060400160405280600e81526020017f496e76616c696420737472696e67000000000000000000000000000000000000815250906109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea9190610ff3565b60405180910390fd5b5060008151116040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525090610a70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a679190610ff3565b60405180910390fd5b50505050565b6040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610b2a81610b25610c1e565b610d18565b50565b6000610b3983836107de565b610c1357600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610bb0610c1e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c18565b600090505b92915050565b600033905090565b6000610c3283836107de565b15610d0d57600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610caa610c1e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d12565b600090505b92915050565b610d2282826107de565b610d655780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610d5c9291906114f0565b60405180910390fd5b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610db281610d7d565b8114610dbd57600080fd5b50565b600081359050610dcf81610da9565b92915050565b600060208284031215610deb57610dea610d73565b5b6000610df984828501610dc0565b91505092915050565b60008115159050919050565b610e1781610e02565b82525050565b6000602082019050610e326000830184610e0e565b92915050565b6000819050919050565b610e4b81610e38565b8114610e5657600080fd5b50565b600081359050610e6881610e42565b92915050565b600060208284031215610e8457610e83610d73565b5b6000610e9284828501610e59565b91505092915050565b610ea481610e38565b82525050565b6000602082019050610ebf6000830184610e9b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef082610ec5565b9050919050565b610f0081610ee5565b8114610f0b57600080fd5b50565b600081359050610f1d81610ef7565b92915050565b60008060408385031215610f3a57610f39610d73565b5b6000610f4885828601610e59565b9250506020610f5985828601610f0e565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f9d578082015181840152602081019050610f82565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fc582610f63565b610fcf8185610f6e565b9350610fdf818560208601610f7f565b610fe881610fa9565b840191505092915050565b6000602082019050818103600083015261100d8184610fba565b905092915050565b6000819050919050565b600061103a61103561103084610ec5565b611015565b610ec5565b9050919050565b600061104c8261101f565b9050919050565b600061105e82611041565b9050919050565b61106e81611053565b82525050565b60006020820190506110896000830184611065565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110cc82610fa9565b810181811067ffffffffffffffff821117156110eb576110ea611094565b5b80604052505050565b60006110fe610d69565b905061110a82826110c3565b919050565b600067ffffffffffffffff82111561112a57611129611094565b5b602082029050602081019050919050565b600080fd5b600061115361114e8461110f565b6110f4565b905080838252602082019050602084028301858111156111765761117561113b565b5b835b8181101561119f578061118b8882610f0e565b845260208401935050602081019050611178565b5050509392505050565b600082601f8301126111be576111bd61108f565b5b81356111ce848260208601611140565b91505092915050565b6000602082840312156111ed576111ec610d73565b5b600082013567ffffffffffffffff81111561120b5761120a610d78565b5b611217848285016111a9565b91505092915050565b6000819050919050565b61123381611220565b82525050565b600060208201905061124e600083018461122a565b92915050565b60006020828403121561126a57611269610d73565b5b600061127884828501610f0e565b91505092915050565b600061128c8261101f565b9050919050565b600061129e82611281565b9050919050565b6112ae81611293565b82525050565b60006020820190506112c960008301846112a5565b92915050565b6112d881611220565b81146112e357600080fd5b50565b6000813590506112f5816112cf565b92915050565b600080fd5b600067ffffffffffffffff82111561131b5761131a611094565b5b61132482610fa9565b9050602081019050919050565b82818337600083830152505050565b600061135361134e84611300565b6110f4565b90508281526020810184848401111561136f5761136e6112fb565b5b61137a848285611331565b509392505050565b600082601f8301126113975761139661108f565b5b81356113a7848260208601611340565b91505092915050565b6000806000606084860312156113c9576113c8610d73565b5b60006113d7868287016112e6565b935050602084013567ffffffffffffffff8111156113f8576113f7610d78565b5b61140486828701611382565b925050604084013567ffffffffffffffff81111561142557611424610d78565b5b61143186828701611382565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114a482611220565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114d6576114d561146a565b5b600182019050919050565b6114ea81610ee5565b82525050565b600060408201905061150560008301856114e1565b6115126020830184610e9b565b939250505056fea2646970667358221220d354dd1b5715dc1f1ce23f39bb718f9ca5f13cb358a824668223cbea7f9f14b664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18A1 CODESIZE SUB DUP1 PUSH3 0x18A1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2FB JUMP JUMPDEST PUSH3 0x4C PUSH1 0x0 DUP1 SHL CALLER PUSH3 0xD7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x342 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xEB DUP4 DUP4 PUSH3 0x1DA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1CF JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x16B PUSH3 0x244 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x1D4 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x27E DUP3 PUSH3 0x251 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x290 DUP2 PUSH3 0x271 JUMP JUMPDEST DUP2 EQ PUSH3 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2B0 DUP2 PUSH3 0x285 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C3 DUP3 PUSH3 0x251 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D5 DUP2 PUSH3 0x2B6 JUMP JUMPDEST DUP2 EQ PUSH3 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F5 DUP2 PUSH3 0x2CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x315 JUMPI PUSH3 0x314 PUSH3 0x24C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x325 DUP6 DUP3 DUP7 ADD PUSH3 0x29F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x338 DUP6 DUP3 DUP7 ADD PUSH3 0x2E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x154F DUP1 PUSH3 0x352 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB7660CD3 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB7660CD3 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xCAF601E1 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF22B9AB6 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF8EBC039 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xFC23413A EQ PUSH2 0x44D JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x980E3AF8 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xA720640E EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xAD4FB5CD EQ PUSH2 0x38B JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x3E7A3E3E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x5C107264 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x5E0118B6 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x89C72556 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x8AEDA25A EQ PUSH2 0x2C5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x2576BDEA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x34B89FB7 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x362C3AB8 EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH2 0x4DD DUP3 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP2 JUMP JUMPDEST PUSH2 0x531 DUP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x53A DUP2 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x544 DUP4 DUP4 PUSH2 0xB2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697365642061636365737300000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0xC1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP3 DUP3 PUSH2 0xC26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F63657373206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0xE071082E8835E151107BAEB3781CD9C05E5A89FDA0B31203AB6C4FE9AB6053E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x6C7 DUP2 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6EC JUMPI PUSH2 0x6EB PUSH2 0x143B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0x143B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH2 0x7AD SWAP1 PUSH2 0x1499 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F75726365206E6F7420666F756E640000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x925 DUP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x92E DUP2 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x938 DUP4 DUP4 PUSH2 0xC26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2A DUP2 PUSH2 0xB25 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0xD18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xC13 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBB0 PUSH2 0xC1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC32 DUP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCAA PUSH2 0xC1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD22 DUP3 DUP3 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xD65 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP3 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB2 DUP2 PUSH2 0xD7D JUMP JUMPDEST DUP2 EQ PUSH2 0xDBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDCF DUP2 PUSH2 0xDA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF9 DUP5 DUP3 DUP6 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xE02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4B DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP2 EQ PUSH2 0xE56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE68 DUP2 PUSH2 0xE42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE84 JUMPI PUSH2 0xE83 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE92 DUP5 DUP3 DUP6 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP3 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1D DUP2 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF48 DUP6 DUP3 DUP7 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF59 DUP6 DUP3 DUP7 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC5 DUP3 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0xFCF DUP2 DUP6 PUSH2 0xF6E JUMP JUMPDEST SWAP4 POP PUSH2 0xFDF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xFE8 DUP2 PUSH2 0xFA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 DUP5 PUSH2 0xFBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A PUSH2 0x1035 PUSH2 0x1030 DUP5 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105E DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x1053 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1089 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10CC DUP3 PUSH2 0xFA9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10EB JUMPI PUSH2 0x10EA PUSH2 0x1094 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FE PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP PUSH2 0x110A DUP3 DUP3 PUSH2 0x10C3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0x1094 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1153 PUSH2 0x114E DUP5 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x113B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x119F JUMPI DUP1 PUSH2 0x118B DUP9 DUP3 PUSH2 0xF0E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1178 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11BE JUMPI PUSH2 0x11BD PUSH2 0x108F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11CE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11ED JUMPI PUSH2 0x11EC PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0xD78 JUMP JUMPDEST JUMPDEST PUSH2 0x1217 DUP5 DUP3 DUP6 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1233 DUP2 PUSH2 0x1220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126A JUMPI PUSH2 0x1269 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1278 DUP5 DUP3 DUP6 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128C DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129E DUP3 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x1293 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0x1220 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F5 DUP2 PUSH2 0x12CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x1094 JUMP JUMPDEST JUMPDEST PUSH2 0x1324 DUP3 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1353 PUSH2 0x134E DUP5 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x136F JUMPI PUSH2 0x136E PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH2 0x137A DUP5 DUP3 DUP6 PUSH2 0x1331 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1397 JUMPI PUSH2 0x1396 PUSH2 0x108F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13A7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C8 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP7 DUP3 DUP8 ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST PUSH2 0x1404 DUP7 DUP3 DUP8 ADD PUSH2 0x1382 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1425 JUMPI PUSH2 0x1424 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST PUSH2 0x1431 DUP7 DUP3 DUP8 ADD PUSH2 0x1382 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14A4 DUP3 PUSH2 0x1220 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EA DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1505 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1512 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SLOAD 0xDD SHL JUMPI ISZERO 0xDC 0x1F SHR 0xE2 EXTCODEHASH CODECOPY 0xBB PUSH18 0x8F9CA5F13CB358A824668223CBEA7F9F14B6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"237:2152:26:-:0;;;1618:217;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1691:42;2232:4:0;1702:18:26;;1722:10;1691;;;:42;;:::i;:::-;;1769:12;1743:11;;:39;;;;;;;;;;;;;;;;;;1816:11;1792:10;;:36;;;;;;;;;;;;;;;;;;1618:217;;237:2152;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;88:117:29:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:96::-;922:7;951:24;969:5;951:24;:::i;:::-;940:35;;885:96;;;:::o;987:122::-;1060:24;1078:5;1060:24;:::i;:::-;1053:5;1050:35;1040:63;;1099:1;1096;1089:12;1040:63;987:122;:::o;1115:143::-;1172:5;1203:6;1197:13;1188:22;;1219:33;1246:5;1219:33;:::i;:::-;1115:143;;;;:::o;1264:523::-;1351:6;1359;1408:2;1396:9;1387:7;1383:23;1379:32;1376:119;;;1414:79;;:::i;:::-;1376:119;1534:1;1559:72;1623:7;1614:6;1603:9;1599:22;1559:72;:::i;:::-;1549:82;;1505:136;1680:2;1706:64;1762:7;1753:6;1742:9;1738:22;1706:64;:::i;:::-;1696:74;;1651:129;1264:523;;;;;:::o;237:2152:26:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CREATOR_ROLE_8136":{"entryPoint":1978,"id":8136,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":2162,"id":29,"parameterSlots":0,"returnSlots":0},"@DEXA_CREATOR_ROLE_8141":{"entryPoint":2126,"id":8141,"parameterSlots":0,"returnSlots":0},"@DEXA_FEEDS_ROLE_8146":{"entryPoint":1284,"id":8146,"parameterSlots":0,"returnSlots":0},"@DEXA_MESSENGER_ROLE_8151":{"entryPoint":2169,"id":8151,"parameterSlots":0,"returnSlots":0},"@DEXA_STORAGE_ROLE_8156":{"entryPoint":1686,"id":8156,"parameterSlots":0,"returnSlots":0},"@ERROR_DUPLICATE_RESOURCE_8159":{"entryPoint":2366,"id":8159,"parameterSlots":0,"returnSlots":0},"@ERROR_INVALID_PRICE_8162":{"entryPoint":1411,"id":8162,"parameterSlots":0,"returnSlots":0},"@ERROR_INVALID_STRING_8165":{"entryPoint":2678,"id":8165,"parameterSlots":0,"returnSlots":0},"@ERROR_NOT_FOUND_8168":{"entryPoint":2205,"id":8168,"parameterSlots":0,"returnSlots":0},"@ERROR_PROCESS_FAILED_8171":{"entryPoint":1629,"id":8171,"parameterSlots":0,"returnSlots":0},"@ERROR_UNAUTHORISED_ACCESS_8174":{"entryPoint":1354,"id":8174,"parameterSlots":0,"returnSlots":0},"@_allowedTokens_8186":{"entryPoint":2262,"id":8186,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":3352,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2841,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":2861,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1675":{"entryPoint":3102,"id":1675,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":3110,"id":294,"parameterSlots":2,"returnSlots":1},"@addTokenToWhitelist_8283":{"entryPoint":1722,"id":8283,"parameterSlots":1,"returnSlots":0},"@commentOnPost_8315":{"entryPoint":2423,"id":8315,"parameterSlots":3,"returnSlots":0},"@dexaCreator_8179":{"entryPoint":1591,"id":8179,"parameterSlots":0,"returnSlots":0},"@feeRate_8176":{"entryPoint":2120,"id":8176,"parameterSlots":0,"returnSlots":0},"@feedsToken_8182":{"entryPoint":2294,"id":8182,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_128":{"entryPoint":1253,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1320,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":2014,"id":80,"parameterSlots":2,"returnSlots":1},"@renounceRole_189":{"entryPoint":1468,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":2332,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4240":{"entryPoint":2735,"id":4240,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1131,"id":62,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4416,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":4928,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":3520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":4994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4838,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4692,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":3694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":3875,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3541,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":5040,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5345,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3598,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":3739,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack":{"entryPoint":4197,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_FeedsToken_$8449_to_t_address_fromStack":{"entryPoint":4773,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4026,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4650,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":5360,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":3754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_DexaCreator_$8121__to_t_address_payable__fromStack_reversed":{"entryPoint":4212,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_FeedsToken_$8449__to_t_address__fromStack_reversed":{"entryPoint":4788,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4083,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4665,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4340,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3433,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":4367,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":4864,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3939,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3950,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3813,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3586,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":3453,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3781,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4640,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_DexaCreator_$8121_to_t_address_payable":{"entryPoint":4179,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_FeedsToken_$8449_to_t_address":{"entryPoint":4755,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4737,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address_payable":{"entryPoint":4161,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4127,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4913,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3967,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4291,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":4117,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":5273,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5226,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5179,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4244,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4239,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4411,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4859,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3448,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3443,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4009,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3831,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3650,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":3497,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4815,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13933:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1563:32:29","statements":[{"nodeType":"YulAssignment","src":"1573:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:29","type":""}],"src":"1518:77:29"},{"body":{"nodeType":"YulBlock","src":"1644:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:29"},"nodeType":"YulFunctionCall","src":"1703:12:29"},"nodeType":"YulExpressionStatement","src":"1703:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:29"},"nodeType":"YulFunctionCall","src":"1674:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:29"},"nodeType":"YulFunctionCall","src":"1664:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:29"},"nodeType":"YulFunctionCall","src":"1657:43:29"},"nodeType":"YulIf","src":"1654:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:29","type":""}],"src":"1601:122:29"},{"body":{"nodeType":"YulBlock","src":"1781:87:29","statements":[{"nodeType":"YulAssignment","src":"1791:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:29"},"nodeType":"YulFunctionCall","src":"1800:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:29"},"nodeType":"YulFunctionCall","src":"1829:33:29"},"nodeType":"YulExpressionStatement","src":"1829:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:29","type":""}],"src":"1729:139:29"},{"body":{"nodeType":"YulBlock","src":"1940:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:29"},"nodeType":"YulFunctionCall","src":"1988:79:29"},"nodeType":"YulExpressionStatement","src":"1988:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:29"},"nodeType":"YulFunctionCall","src":"1957:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:29"},"nodeType":"YulFunctionCall","src":"1953:32:29"},"nodeType":"YulIf","src":"1950:119:29"},{"nodeType":"YulBlock","src":"2079:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:29"},"nodeType":"YulFunctionCall","src":"2154:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2133:20:29"},"nodeType":"YulFunctionCall","src":"2133:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:29","type":""}],"src":"1874:329:29"},{"body":{"nodeType":"YulBlock","src":"2274:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2291:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2314:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2296:17:29"},"nodeType":"YulFunctionCall","src":"2296:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2284:6:29"},"nodeType":"YulFunctionCall","src":"2284:37:29"},"nodeType":"YulExpressionStatement","src":"2284:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2262:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2269:3:29","type":""}],"src":"2209:118:29"},{"body":{"nodeType":"YulBlock","src":"2431:124:29","statements":[{"nodeType":"YulAssignment","src":"2441:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2453:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2464:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2449:3:29"},"nodeType":"YulFunctionCall","src":"2449:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2441:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2521:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2545:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2530:3:29"},"nodeType":"YulFunctionCall","src":"2530:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2477:43:29"},"nodeType":"YulFunctionCall","src":"2477:71:29"},"nodeType":"YulExpressionStatement","src":"2477:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2403:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2415:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2426:4:29","type":""}],"src":"2333:222:29"},{"body":{"nodeType":"YulBlock","src":"2606:81:29","statements":[{"nodeType":"YulAssignment","src":"2616:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2631:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2638:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2627:3:29"},"nodeType":"YulFunctionCall","src":"2627:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2616:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2598:7:29","type":""}],"src":"2561:126:29"},{"body":{"nodeType":"YulBlock","src":"2738:51:29","statements":[{"nodeType":"YulAssignment","src":"2748:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2777:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2759:17:29"},"nodeType":"YulFunctionCall","src":"2759:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2748:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2720:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2730:7:29","type":""}],"src":"2693:96:29"},{"body":{"nodeType":"YulBlock","src":"2838:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2895:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2904:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2907:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2897:6:29"},"nodeType":"YulFunctionCall","src":"2897:12:29"},"nodeType":"YulExpressionStatement","src":"2897:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2861:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2886:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2868:17:29"},"nodeType":"YulFunctionCall","src":"2868:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2858:2:29"},"nodeType":"YulFunctionCall","src":"2858:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2851:6:29"},"nodeType":"YulFunctionCall","src":"2851:43:29"},"nodeType":"YulIf","src":"2848:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2831:5:29","type":""}],"src":"2795:122:29"},{"body":{"nodeType":"YulBlock","src":"2975:87:29","statements":[{"nodeType":"YulAssignment","src":"2985:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3007:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2994:12:29"},"nodeType":"YulFunctionCall","src":"2994:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3023:26:29"},"nodeType":"YulFunctionCall","src":"3023:33:29"},"nodeType":"YulExpressionStatement","src":"3023:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2953:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2961:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2969:5:29","type":""}],"src":"2923:139:29"},{"body":{"nodeType":"YulBlock","src":"3151:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"3197:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3199:77:29"},"nodeType":"YulFunctionCall","src":"3199:79:29"},"nodeType":"YulExpressionStatement","src":"3199:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3172:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3181:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3168:3:29"},"nodeType":"YulFunctionCall","src":"3168:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3193:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3164:3:29"},"nodeType":"YulFunctionCall","src":"3164:32:29"},"nodeType":"YulIf","src":"3161:119:29"},{"nodeType":"YulBlock","src":"3290:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3305:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3319:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3309:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3334:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3369:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3380:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3365:3:29"},"nodeType":"YulFunctionCall","src":"3365:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3389:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3344:20:29"},"nodeType":"YulFunctionCall","src":"3344:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3334:6:29"}]}]},{"nodeType":"YulBlock","src":"3417:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3432:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3446:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3436:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:29"},"nodeType":"YulFunctionCall","src":"3493:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3472:20:29"},"nodeType":"YulFunctionCall","src":"3472:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3462:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3113:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3124:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3136:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3144:6:29","type":""}],"src":"3068:474:29"},{"body":{"nodeType":"YulBlock","src":"3607:40:29","statements":[{"nodeType":"YulAssignment","src":"3618:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3634:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3628:5:29"},"nodeType":"YulFunctionCall","src":"3628:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3618:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3590:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3600:6:29","type":""}],"src":"3548:99:29"},{"body":{"nodeType":"YulBlock","src":"3749:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"3771:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:29"},"nodeType":"YulFunctionCall","src":"3759:19:29"},"nodeType":"YulExpressionStatement","src":"3759:19:29"},{"nodeType":"YulAssignment","src":"3787:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3806:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:29"},"nodeType":"YulFunctionCall","src":"3802:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3787:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"3726:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3737:11:29","type":""}],"src":"3653:169:29"},{"body":{"nodeType":"YulBlock","src":"3890:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3969:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3994:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"3999:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:29"},"nodeType":"YulFunctionCall","src":"3990:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4013:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"4018:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:29"},"nodeType":"YulFunctionCall","src":"4009:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4003:5:29"},"nodeType":"YulFunctionCall","src":"4003:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:29"},"nodeType":"YulFunctionCall","src":"3983:39:29"},"nodeType":"YulExpressionStatement","src":"3983:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3930:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"3933:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3927:2:29"},"nodeType":"YulFunctionCall","src":"3927:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3941:19:29","statements":[{"nodeType":"YulAssignment","src":"3943:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3952:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:29"},"nodeType":"YulFunctionCall","src":"3948:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3943:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3923:3:29","statements":[]},"src":"3919:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4052:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:29"},"nodeType":"YulFunctionCall","src":"4048:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:29"},"nodeType":"YulFunctionCall","src":"4041:27:29"},"nodeType":"YulExpressionStatement","src":"4041:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3872:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3877:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"3882:6:29","type":""}],"src":"3828:246:29"},{"body":{"nodeType":"YulBlock","src":"4128:54:29","statements":[{"nodeType":"YulAssignment","src":"4138:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:29"},"nodeType":"YulFunctionCall","src":"4152:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4172:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4168:3:29"},"nodeType":"YulFunctionCall","src":"4168:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4148:3:29"},"nodeType":"YulFunctionCall","src":"4148:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4138:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4111:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4121:6:29","type":""}],"src":"4080:102:29"},{"body":{"nodeType":"YulBlock","src":"4280:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4290:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4304:32:29"},"nodeType":"YulFunctionCall","src":"4304:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4294:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4352:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4423:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4359:58:29"},"nodeType":"YulFunctionCall","src":"4359:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4478:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4485:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:29"},"nodeType":"YulFunctionCall","src":"4474:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4439:34:29"},"nodeType":"YulFunctionCall","src":"4439:65:29"},"nodeType":"YulExpressionStatement","src":"4439:65:29"},{"nodeType":"YulAssignment","src":"4513:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4524:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4551:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4529:21:29"},"nodeType":"YulFunctionCall","src":"4529:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:29"},"nodeType":"YulFunctionCall","src":"4520:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4513:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4268:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4276:3:29","type":""}],"src":"4188:377:29"},{"body":{"nodeType":"YulBlock","src":"4689:195:29","statements":[{"nodeType":"YulAssignment","src":"4699:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:29"},"nodeType":"YulFunctionCall","src":"4707:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:29"},"nodeType":"YulFunctionCall","src":"4742:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4765:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:29"},"nodeType":"YulFunctionCall","src":"4761:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4735:6:29"},"nodeType":"YulFunctionCall","src":"4735:47:29"},"nodeType":"YulExpressionStatement","src":"4735:47:29"},{"nodeType":"YulAssignment","src":"4791:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"4872:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4799:63:29"},"nodeType":"YulFunctionCall","src":"4799:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4673:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4684:4:29","type":""}],"src":"4571:313:29"},{"body":{"nodeType":"YulBlock","src":"4922:28:29","statements":[{"nodeType":"YulAssignment","src":"4932:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4939:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4932:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4908:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4918:3:29","type":""}],"src":"4890:60:29"},{"body":{"nodeType":"YulBlock","src":"5016:82:29","statements":[{"nodeType":"YulAssignment","src":"5026:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5084:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5066:17:29"},"nodeType":"YulFunctionCall","src":"5066:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5057:8:29"},"nodeType":"YulFunctionCall","src":"5057:34:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5039:17:29"},"nodeType":"YulFunctionCall","src":"5039:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5026:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4996:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5006:9:29","type":""}],"src":"4956:142:29"},{"body":{"nodeType":"YulBlock","src":"5172:66:29","statements":[{"nodeType":"YulAssignment","src":"5182:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5226:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5195:30:29"},"nodeType":"YulFunctionCall","src":"5195:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5182:9:29"}]}]},"name":"convert_t_uint160_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5152:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5162:9:29","type":""}],"src":"5104:134:29"},{"body":{"nodeType":"YulBlock","src":"5332:74:29","statements":[{"nodeType":"YulAssignment","src":"5342:58:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5394:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address_payable","nodeType":"YulIdentifier","src":"5355:38:29"},"nodeType":"YulFunctionCall","src":"5355:45:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5342:9:29"}]}]},"name":"convert_t_contract$_DexaCreator_$8121_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5312:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5322:9:29","type":""}],"src":"5244:162:29"},{"body":{"nodeType":"YulBlock","src":"5505:94:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5522:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5586:5:29"}],"functionName":{"name":"convert_t_contract$_DexaCreator_$8121_to_t_address_payable","nodeType":"YulIdentifier","src":"5527:58:29"},"nodeType":"YulFunctionCall","src":"5527:65:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5515:6:29"},"nodeType":"YulFunctionCall","src":"5515:78:29"},"nodeType":"YulExpressionStatement","src":"5515:78:29"}]},"name":"abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5493:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5500:3:29","type":""}],"src":"5412:187:29"},{"body":{"nodeType":"YulBlock","src":"5731:152:29","statements":[{"nodeType":"YulAssignment","src":"5741:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5753:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5764:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:29"},"nodeType":"YulFunctionCall","src":"5749:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5741:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5849:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5862:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5873:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:29"},"nodeType":"YulFunctionCall","src":"5858:17:29"}],"functionName":{"name":"abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"5777:71:29"},"nodeType":"YulFunctionCall","src":"5777:99:29"},"nodeType":"YulExpressionStatement","src":"5777:99:29"}]},"name":"abi_encode_tuple_t_contract$_DexaCreator_$8121__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5703:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5715:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5726:4:29","type":""}],"src":"5605:278:29"},{"body":{"nodeType":"YulBlock","src":"5978:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5995:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5998:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5988:6:29"},"nodeType":"YulFunctionCall","src":"5988:12:29"},"nodeType":"YulExpressionStatement","src":"5988:12:29"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5889:117:29"},{"body":{"nodeType":"YulBlock","src":"6040:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6057:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6060:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6050:6:29"},"nodeType":"YulFunctionCall","src":"6050:88:29"},"nodeType":"YulExpressionStatement","src":"6050:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6154:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6157:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6147:6:29"},"nodeType":"YulFunctionCall","src":"6147:15:29"},"nodeType":"YulExpressionStatement","src":"6147:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6178:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6181:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6171:6:29"},"nodeType":"YulFunctionCall","src":"6171:15:29"},"nodeType":"YulExpressionStatement","src":"6171:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6012:180:29"},{"body":{"nodeType":"YulBlock","src":"6241:238:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6251:58:29","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6273:6:29"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6303:4:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6281:21:29"},"nodeType":"YulFunctionCall","src":"6281:27:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:29"},"nodeType":"YulFunctionCall","src":"6269:40:29"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6255:10:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6420:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6422:16:29"},"nodeType":"YulFunctionCall","src":"6422:18:29"},"nodeType":"YulExpressionStatement","src":"6422:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6363:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"6375:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6360:2:29"},"nodeType":"YulFunctionCall","src":"6360:34:29"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6399:10:29"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6411:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6396:2:29"},"nodeType":"YulFunctionCall","src":"6396:22:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6357:2:29"},"nodeType":"YulFunctionCall","src":"6357:62:29"},"nodeType":"YulIf","src":"6354:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6458:2:29","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6462:10:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6451:6:29"},"nodeType":"YulFunctionCall","src":"6451:22:29"},"nodeType":"YulExpressionStatement","src":"6451:22:29"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6227:6:29","type":""},{"name":"size","nodeType":"YulTypedName","src":"6235:4:29","type":""}],"src":"6198:281:29"},{"body":{"nodeType":"YulBlock","src":"6526:88:29","statements":[{"nodeType":"YulAssignment","src":"6536:30:29","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6546:18:29"},"nodeType":"YulFunctionCall","src":"6546:20:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6536:6:29"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6595:6:29"},{"name":"size","nodeType":"YulIdentifier","src":"6603:4:29"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6575:19:29"},"nodeType":"YulFunctionCall","src":"6575:33:29"},"nodeType":"YulExpressionStatement","src":"6575:33:29"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6510:4:29","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6519:6:29","type":""}],"src":"6485:129:29"},{"body":{"nodeType":"YulBlock","src":"6702:229:29","statements":[{"body":{"nodeType":"YulBlock","src":"6807:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6809:16:29"},"nodeType":"YulFunctionCall","src":"6809:18:29"},"nodeType":"YulExpressionStatement","src":"6809:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6779:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6787:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6776:2:29"},"nodeType":"YulFunctionCall","src":"6776:30:29"},"nodeType":"YulIf","src":"6773:56:29"},{"nodeType":"YulAssignment","src":"6839:25:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6851:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"6859:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6847:3:29"},"nodeType":"YulFunctionCall","src":"6847:17:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6839:4:29"}]},{"nodeType":"YulAssignment","src":"6901:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6913:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"6919:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6909:3:29"},"nodeType":"YulFunctionCall","src":"6909:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6901:4:29"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6686:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6697:4:29","type":""}],"src":"6620:311:29"},{"body":{"nodeType":"YulBlock","src":"7026:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:29"},"nodeType":"YulFunctionCall","src":"7036:12:29"},"nodeType":"YulExpressionStatement","src":"7036:12:29"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6937:117:29"},{"body":{"nodeType":"YulBlock","src":"7179:608:29","statements":[{"nodeType":"YulAssignment","src":"7189:90:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7271:6:29"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7214:56:29"},"nodeType":"YulFunctionCall","src":"7214:64:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7198:15:29"},"nodeType":"YulFunctionCall","src":"7198:81:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7189:5:29"}]},{"nodeType":"YulVariableDeclaration","src":"7288:16:29","value":{"name":"array","nodeType":"YulIdentifier","src":"7299:5:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7292:3:29","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7321:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"7328:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7314:6:29"},"nodeType":"YulFunctionCall","src":"7314:21:29"},"nodeType":"YulExpressionStatement","src":"7314:21:29"},{"nodeType":"YulAssignment","src":"7344:23:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7355:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7362:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7351:3:29"},"nodeType":"YulFunctionCall","src":"7351:16:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7344:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"7377:44:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7395:6:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7407:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7415:4:29","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7403:3:29"},"nodeType":"YulFunctionCall","src":"7403:17:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7391:3:29"},"nodeType":"YulFunctionCall","src":"7391:30:29"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7381:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"7449:103:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7463:77:29"},"nodeType":"YulFunctionCall","src":"7463:79:29"},"nodeType":"YulExpressionStatement","src":"7463:79:29"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7436:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"7444:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7433:2:29"},"nodeType":"YulFunctionCall","src":"7433:15:29"},"nodeType":"YulIf","src":"7430:122:29"},{"body":{"nodeType":"YulBlock","src":"7637:144:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7652:21:29","value":{"name":"src","nodeType":"YulIdentifier","src":"7670:3:29"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7656:10:29","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7694:3:29"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7720:10:29"},{"name":"end","nodeType":"YulIdentifier","src":"7732:3:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7699:20:29"},"nodeType":"YulFunctionCall","src":"7699:37:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7687:6:29"},"nodeType":"YulFunctionCall","src":"7687:50:29"},"nodeType":"YulExpressionStatement","src":"7687:50:29"},{"nodeType":"YulAssignment","src":"7750:21:29","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7761:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7766:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7757:3:29"},"nodeType":"YulFunctionCall","src":"7757:14:29"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7750:3:29"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7590:3:29"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7595:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7587:2:29"},"nodeType":"YulFunctionCall","src":"7587:15:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7603:25:29","statements":[{"nodeType":"YulAssignment","src":"7605:21:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7616:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"7621:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7612:3:29"},"nodeType":"YulFunctionCall","src":"7612:14:29"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7605:3:29"}]}]},"pre":{"nodeType":"YulBlock","src":"7565:21:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7567:17:29","value":{"name":"offset","nodeType":"YulIdentifier","src":"7578:6:29"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7571:3:29","type":""}]}]},"src":"7561:220:29"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7149:6:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"7157:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7165:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7173:5:29","type":""}],"src":"7077:710:29"},{"body":{"nodeType":"YulBlock","src":"7887:293:29","statements":[{"body":{"nodeType":"YulBlock","src":"7936:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7938:77:29"},"nodeType":"YulFunctionCall","src":"7938:79:29"},"nodeType":"YulExpressionStatement","src":"7938:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7915:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"7923:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7911:3:29"},"nodeType":"YulFunctionCall","src":"7911:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"7930:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7907:3:29"},"nodeType":"YulFunctionCall","src":"7907:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7900:6:29"},"nodeType":"YulFunctionCall","src":"7900:35:29"},"nodeType":"YulIf","src":"7897:122:29"},{"nodeType":"YulVariableDeclaration","src":"8028:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8055:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8042:12:29"},"nodeType":"YulFunctionCall","src":"8042:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8032:6:29","type":""}]},{"nodeType":"YulAssignment","src":"8071:103:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8147:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8155:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8143:3:29"},"nodeType":"YulFunctionCall","src":"8143:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"8162:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"8170:3:29"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8080:62:29"},"nodeType":"YulFunctionCall","src":"8080:94:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8071:5:29"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7865:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"7873:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7881:5:29","type":""}],"src":"7810:370:29"},{"body":{"nodeType":"YulBlock","src":"8277:448:29","statements":[{"body":{"nodeType":"YulBlock","src":"8323:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8325:77:29"},"nodeType":"YulFunctionCall","src":"8325:79:29"},"nodeType":"YulExpressionStatement","src":"8325:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8298:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"8307:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8294:3:29"},"nodeType":"YulFunctionCall","src":"8294:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8319:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8290:3:29"},"nodeType":"YulFunctionCall","src":"8290:32:29"},"nodeType":"YulIf","src":"8287:119:29"},{"nodeType":"YulBlock","src":"8416:302:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8431:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8462:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"8473:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8458:3:29"},"nodeType":"YulFunctionCall","src":"8458:17:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8445:12:29"},"nodeType":"YulFunctionCall","src":"8445:31:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8435:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"8523:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8525:77:29"},"nodeType":"YulFunctionCall","src":"8525:79:29"},"nodeType":"YulExpressionStatement","src":"8525:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8495:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8503:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8492:2:29"},"nodeType":"YulFunctionCall","src":"8492:30:29"},"nodeType":"YulIf","src":"8489:117:29"},{"nodeType":"YulAssignment","src":"8620:88:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8680:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"8691:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8676:3:29"},"nodeType":"YulFunctionCall","src":"8676:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8700:7:29"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8630:45:29"},"nodeType":"YulFunctionCall","src":"8630:78:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8620:6:29"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8247:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8258:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8270:6:29","type":""}],"src":"8186:539:29"},{"body":{"nodeType":"YulBlock","src":"8776:32:29","statements":[{"nodeType":"YulAssignment","src":"8786:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"8797:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8786:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8758:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8768:7:29","type":""}],"src":"8731:77:29"},{"body":{"nodeType":"YulBlock","src":"8879:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8896:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8919:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8901:17:29"},"nodeType":"YulFunctionCall","src":"8901:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8889:6:29"},"nodeType":"YulFunctionCall","src":"8889:37:29"},"nodeType":"YulExpressionStatement","src":"8889:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8867:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8874:3:29","type":""}],"src":"8814:118:29"},{"body":{"nodeType":"YulBlock","src":"9036:124:29","statements":[{"nodeType":"YulAssignment","src":"9046:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9058:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9069:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9054:3:29"},"nodeType":"YulFunctionCall","src":"9054:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9046:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9126:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9139:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"9150:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9135:3:29"},"nodeType":"YulFunctionCall","src":"9135:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9082:43:29"},"nodeType":"YulFunctionCall","src":"9082:71:29"},"nodeType":"YulExpressionStatement","src":"9082:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9008:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9020:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9031:4:29","type":""}],"src":"8938:222:29"},{"body":{"nodeType":"YulBlock","src":"9232:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"9278:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9280:77:29"},"nodeType":"YulFunctionCall","src":"9280:79:29"},"nodeType":"YulExpressionStatement","src":"9280:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9253:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"9262:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9249:3:29"},"nodeType":"YulFunctionCall","src":"9249:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"9274:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9245:3:29"},"nodeType":"YulFunctionCall","src":"9245:32:29"},"nodeType":"YulIf","src":"9242:119:29"},{"nodeType":"YulBlock","src":"9371:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9386:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9400:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9390:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9415:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9450:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"9461:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9446:3:29"},"nodeType":"YulFunctionCall","src":"9446:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9470:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9425:20:29"},"nodeType":"YulFunctionCall","src":"9425:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9415:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9202:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9213:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9225:6:29","type":""}],"src":"9166:329:29"},{"body":{"nodeType":"YulBlock","src":"9561:66:29","statements":[{"nodeType":"YulAssignment","src":"9571:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9615:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"9584:30:29"},"nodeType":"YulFunctionCall","src":"9584:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9571:9:29"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9541:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9551:9:29","type":""}],"src":"9501:126:29"},{"body":{"nodeType":"YulBlock","src":"9712:66:29","statements":[{"nodeType":"YulAssignment","src":"9722:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9766:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"9735:30:29"},"nodeType":"YulFunctionCall","src":"9735:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"9722:9:29"}]}]},"name":"convert_t_contract$_FeedsToken_$8449_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9692:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"9702:9:29","type":""}],"src":"9633:145:29"},{"body":{"nodeType":"YulBlock","src":"9868:85:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9885:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9940:5:29"}],"functionName":{"name":"convert_t_contract$_FeedsToken_$8449_to_t_address","nodeType":"YulIdentifier","src":"9890:49:29"},"nodeType":"YulFunctionCall","src":"9890:56:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9878:6:29"},"nodeType":"YulFunctionCall","src":"9878:69:29"},"nodeType":"YulExpressionStatement","src":"9878:69:29"}]},"name":"abi_encode_t_contract$_FeedsToken_$8449_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9856:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9863:3:29","type":""}],"src":"9784:169:29"},{"body":{"nodeType":"YulBlock","src":"10076:143:29","statements":[{"nodeType":"YulAssignment","src":"10086:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10098:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10109:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10094:3:29"},"nodeType":"YulFunctionCall","src":"10094:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10086:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10185:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10198:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10209:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10194:3:29"},"nodeType":"YulFunctionCall","src":"10194:17:29"}],"functionName":{"name":"abi_encode_t_contract$_FeedsToken_$8449_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10122:62:29"},"nodeType":"YulFunctionCall","src":"10122:90:29"},"nodeType":"YulExpressionStatement","src":"10122:90:29"}]},"name":"abi_encode_tuple_t_contract$_FeedsToken_$8449__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10048:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10060:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10071:4:29","type":""}],"src":"9959:260:29"},{"body":{"nodeType":"YulBlock","src":"10268:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"10325:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10334:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10337:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10327:6:29"},"nodeType":"YulFunctionCall","src":"10327:12:29"},"nodeType":"YulExpressionStatement","src":"10327:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10291:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10316:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10298:17:29"},"nodeType":"YulFunctionCall","src":"10298:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10288:2:29"},"nodeType":"YulFunctionCall","src":"10288:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10281:6:29"},"nodeType":"YulFunctionCall","src":"10281:43:29"},"nodeType":"YulIf","src":"10278:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10261:5:29","type":""}],"src":"10225:122:29"},{"body":{"nodeType":"YulBlock","src":"10405:87:29","statements":[{"nodeType":"YulAssignment","src":"10415:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10437:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10424:12:29"},"nodeType":"YulFunctionCall","src":"10424:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10415:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10480:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"10453:26:29"},"nodeType":"YulFunctionCall","src":"10453:33:29"},"nodeType":"YulExpressionStatement","src":"10453:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10383:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"10391:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10399:5:29","type":""}],"src":"10353:139:29"},{"body":{"nodeType":"YulBlock","src":"10587:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10604:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10607:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10597:6:29"},"nodeType":"YulFunctionCall","src":"10597:12:29"},"nodeType":"YulExpressionStatement","src":"10597:12:29"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"10498:117:29"},{"body":{"nodeType":"YulBlock","src":"10688:241:29","statements":[{"body":{"nodeType":"YulBlock","src":"10793:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10795:16:29"},"nodeType":"YulFunctionCall","src":"10795:18:29"},"nodeType":"YulExpressionStatement","src":"10795:18:29"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10765:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"10773:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10762:2:29"},"nodeType":"YulFunctionCall","src":"10762:30:29"},"nodeType":"YulIf","src":"10759:56:29"},{"nodeType":"YulAssignment","src":"10825:37:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10855:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10833:21:29"},"nodeType":"YulFunctionCall","src":"10833:29:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10825:4:29"}]},{"nodeType":"YulAssignment","src":"10899:23:29","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10911:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"10917:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10907:3:29"},"nodeType":"YulFunctionCall","src":"10907:15:29"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10899:4:29"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10672:6:29","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10683:4:29","type":""}],"src":"10621:308:29"},{"body":{"nodeType":"YulBlock","src":"10999:82:29","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11022:3:29"},{"name":"src","nodeType":"YulIdentifier","src":"11027:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11032:6:29"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"11009:12:29"},"nodeType":"YulFunctionCall","src":"11009:30:29"},"nodeType":"YulExpressionStatement","src":"11009:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11059:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11064:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11055:3:29"},"nodeType":"YulFunctionCall","src":"11055:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"11073:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11048:6:29"},"nodeType":"YulFunctionCall","src":"11048:27:29"},"nodeType":"YulExpressionStatement","src":"11048:27:29"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10981:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"10986:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"10991:6:29","type":""}],"src":"10935:146:29"},{"body":{"nodeType":"YulBlock","src":"11171:341:29","statements":[{"nodeType":"YulAssignment","src":"11181:75:29","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11248:6:29"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11206:41:29"},"nodeType":"YulFunctionCall","src":"11206:49:29"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11190:15:29"},"nodeType":"YulFunctionCall","src":"11190:66:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11181:5:29"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11272:5:29"},{"name":"length","nodeType":"YulIdentifier","src":"11279:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11265:6:29"},"nodeType":"YulFunctionCall","src":"11265:21:29"},"nodeType":"YulExpressionStatement","src":"11265:21:29"},{"nodeType":"YulVariableDeclaration","src":"11295:27:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11310:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"11317:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11306:3:29"},"nodeType":"YulFunctionCall","src":"11306:16:29"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11299:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"11360:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"11362:77:29"},"nodeType":"YulFunctionCall","src":"11362:79:29"},"nodeType":"YulExpressionStatement","src":"11362:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11341:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11346:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11337:3:29"},"nodeType":"YulFunctionCall","src":"11337:16:29"},{"name":"end","nodeType":"YulIdentifier","src":"11355:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11334:2:29"},"nodeType":"YulFunctionCall","src":"11334:25:29"},"nodeType":"YulIf","src":"11331:112:29"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11489:3:29"},{"name":"dst","nodeType":"YulIdentifier","src":"11494:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"11499:6:29"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11452:36:29"},"nodeType":"YulFunctionCall","src":"11452:54:29"},"nodeType":"YulExpressionStatement","src":"11452:54:29"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11144:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"11149:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"11157:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11165:5:29","type":""}],"src":"11087:425:29"},{"body":{"nodeType":"YulBlock","src":"11594:278:29","statements":[{"body":{"nodeType":"YulBlock","src":"11643:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11645:77:29"},"nodeType":"YulFunctionCall","src":"11645:79:29"},"nodeType":"YulExpressionStatement","src":"11645:79:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11622:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11630:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11618:3:29"},"nodeType":"YulFunctionCall","src":"11618:17:29"},{"name":"end","nodeType":"YulIdentifier","src":"11637:3:29"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11614:3:29"},"nodeType":"YulFunctionCall","src":"11614:27:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11607:6:29"},"nodeType":"YulFunctionCall","src":"11607:35:29"},"nodeType":"YulIf","src":"11604:122:29"},{"nodeType":"YulVariableDeclaration","src":"11735:34:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11762:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11749:12:29"},"nodeType":"YulFunctionCall","src":"11749:20:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11739:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11778:88:29","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11839:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"11847:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11835:3:29"},"nodeType":"YulFunctionCall","src":"11835:17:29"},{"name":"length","nodeType":"YulIdentifier","src":"11854:6:29"},{"name":"end","nodeType":"YulIdentifier","src":"11862:3:29"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11787:47:29"},"nodeType":"YulFunctionCall","src":"11787:79:29"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11778:5:29"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11572:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"11580:3:29","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11588:5:29","type":""}],"src":"11532:340:29"},{"body":{"nodeType":"YulBlock","src":"11998:859:29","statements":[{"body":{"nodeType":"YulBlock","src":"12044:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12046:77:29"},"nodeType":"YulFunctionCall","src":"12046:79:29"},"nodeType":"YulExpressionStatement","src":"12046:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12019:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12028:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12015:3:29"},"nodeType":"YulFunctionCall","src":"12015:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12040:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12011:3:29"},"nodeType":"YulFunctionCall","src":"12011:32:29"},"nodeType":"YulIf","src":"12008:119:29"},{"nodeType":"YulBlock","src":"12137:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12152:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12166:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12156:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12181:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12216:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12227:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12212:3:29"},"nodeType":"YulFunctionCall","src":"12212:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12236:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12191:20:29"},"nodeType":"YulFunctionCall","src":"12191:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12181:6:29"}]}]},{"nodeType":"YulBlock","src":"12264:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12279:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12310:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12321:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12306:3:29"},"nodeType":"YulFunctionCall","src":"12306:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12293:12:29"},"nodeType":"YulFunctionCall","src":"12293:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12283:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12372:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12374:77:29"},"nodeType":"YulFunctionCall","src":"12374:79:29"},"nodeType":"YulExpressionStatement","src":"12374:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12344:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12352:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12341:2:29"},"nodeType":"YulFunctionCall","src":"12341:30:29"},"nodeType":"YulIf","src":"12338:117:29"},{"nodeType":"YulAssignment","src":"12469:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12514:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12525:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12510:3:29"},"nodeType":"YulFunctionCall","src":"12510:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12534:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12479:30:29"},"nodeType":"YulFunctionCall","src":"12479:63:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12469:6:29"}]}]},{"nodeType":"YulBlock","src":"12562:288:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12577:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12608:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"12619:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12604:3:29"},"nodeType":"YulFunctionCall","src":"12604:18:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12591:12:29"},"nodeType":"YulFunctionCall","src":"12591:32:29"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12581:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"12670:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12672:77:29"},"nodeType":"YulFunctionCall","src":"12672:79:29"},"nodeType":"YulExpressionStatement","src":"12672:79:29"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12642:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"12650:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12639:2:29"},"nodeType":"YulFunctionCall","src":"12639:30:29"},"nodeType":"YulIf","src":"12636:117:29"},{"nodeType":"YulAssignment","src":"12767:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12812:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12823:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12808:3:29"},"nodeType":"YulFunctionCall","src":"12808:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12832:7:29"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12777:30:29"},"nodeType":"YulFunctionCall","src":"12777:63:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12767:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11952:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11963:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11975:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11983:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11991:6:29","type":""}],"src":"11878:979:29"},{"body":{"nodeType":"YulBlock","src":"12891:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12908:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12911:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12901:6:29"},"nodeType":"YulFunctionCall","src":"12901:88:29"},"nodeType":"YulExpressionStatement","src":"12901:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13005:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13008:4:29","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12998:6:29"},"nodeType":"YulFunctionCall","src":"12998:15:29"},"nodeType":"YulExpressionStatement","src":"12998:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13029:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13032:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13022:6:29"},"nodeType":"YulFunctionCall","src":"13022:15:29"},"nodeType":"YulExpressionStatement","src":"13022:15:29"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"12863:180:29"},{"body":{"nodeType":"YulBlock","src":"13077:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13094:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13097:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13087:6:29"},"nodeType":"YulFunctionCall","src":"13087:88:29"},"nodeType":"YulExpressionStatement","src":"13087:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13191:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13194:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13184:6:29"},"nodeType":"YulFunctionCall","src":"13184:15:29"},"nodeType":"YulExpressionStatement","src":"13184:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13215:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13218:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13208:6:29"},"nodeType":"YulFunctionCall","src":"13208:15:29"},"nodeType":"YulExpressionStatement","src":"13208:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13049:180:29"},{"body":{"nodeType":"YulBlock","src":"13278:190:29","statements":[{"nodeType":"YulAssignment","src":"13288:33:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13315:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13297:17:29"},"nodeType":"YulFunctionCall","src":"13297:24:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13288:5:29"}]},{"body":{"nodeType":"YulBlock","src":"13411:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13413:16:29"},"nodeType":"YulFunctionCall","src":"13413:18:29"},"nodeType":"YulExpressionStatement","src":"13413:18:29"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13336:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"13343:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13333:2:29"},"nodeType":"YulFunctionCall","src":"13333:77:29"},"nodeType":"YulIf","src":"13330:103:29"},{"nodeType":"YulAssignment","src":"13442:20:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13453:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"13460:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13449:3:29"},"nodeType":"YulFunctionCall","src":"13449:13:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13442:3:29"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13264:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13274:3:29","type":""}],"src":"13235:233:29"},{"body":{"nodeType":"YulBlock","src":"13539:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13556:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13579:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13561:17:29"},"nodeType":"YulFunctionCall","src":"13561:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13549:6:29"},"nodeType":"YulFunctionCall","src":"13549:37:29"},"nodeType":"YulExpressionStatement","src":"13549:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13527:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13534:3:29","type":""}],"src":"13474:118:29"},{"body":{"nodeType":"YulBlock","src":"13724:206:29","statements":[{"nodeType":"YulAssignment","src":"13734:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13757:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13742:3:29"},"nodeType":"YulFunctionCall","src":"13742:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13734:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13814:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13827:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13838:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13823:3:29"},"nodeType":"YulFunctionCall","src":"13823:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"13770:43:29"},"nodeType":"YulFunctionCall","src":"13770:71:29"},"nodeType":"YulExpressionStatement","src":"13770:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13895:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13908:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13919:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13904:3:29"},"nodeType":"YulFunctionCall","src":"13904:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"13851:43:29"},"nodeType":"YulFunctionCall","src":"13851:72:29"},"nodeType":"YulExpressionStatement","src":"13851:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13688:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13700:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13708:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13719:4:29","type":""}],"src":"13598:332:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DexaCreator_$8121_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DexaCreator_$8121_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_DexaCreator_$8121__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_FeedsToken_$8449_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_FeedsToken_$8449_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_FeedsToken_$8449_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_FeedsToken_$8449__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_FeedsToken_$8449_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xB7660CD3 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xB7660CD3 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0xCAF601E1 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF22B9AB6 EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xF8EBC039 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xFC23413A EQ PUSH2 0x44D JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x978BBDB9 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x980E3AF8 EQ PUSH2 0x331 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xA720640E EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xAD4FB5CD EQ PUSH2 0x38B JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x3E7A3E3E EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x5C107264 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x5E0118B6 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x89C72556 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x8AEDA25A EQ PUSH2 0x2C5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x2576BDEA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x34B89FB7 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x362C3AB8 EQ PUSH2 0x215 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0xE6E JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0x637 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1074 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x696 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x11D7 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CD PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31B PUSH2 0x848 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x339 PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x346 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0x879 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BE SWAP2 SWAP1 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40C SWAP2 SWAP1 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x455 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x462 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4DE JUMPI POP PUSH2 0x4DD DUP3 PUSH2 0xAAF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP2 JUMP JUMPDEST PUSH2 0x531 DUP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x53A DUP2 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x544 DUP4 DUP4 PUSH2 0xB2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697365642061636365737300000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0xC1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x632 DUP3 DUP3 PUSH2 0xC26 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F63657373206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0xE071082E8835E151107BAEB3781CD9C05E5A89FDA0B31203AB6C4FE9AB6053E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x6C7 DUP2 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6EC JUMPI PUSH2 0x6EB PUSH2 0x143B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x758 JUMPI PUSH2 0x757 PUSH2 0x143B JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH2 0x7AD SWAP1 PUSH2 0x1499 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6CA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F75726365206E6F7420666F756E640000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x925 DUP3 PUSH2 0x4E5 JUMP JUMPDEST PUSH2 0x92E DUP2 PUSH2 0xB19 JUMP JUMPDEST PUSH2 0x938 DUP4 DUP4 PUSH2 0xC26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EA SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 MLOAD GT PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB2A DUP2 PUSH2 0xB25 PUSH2 0xC1E JUMP JUMPDEST PUSH2 0xD18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xC13 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBB0 PUSH2 0xC1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC18 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC32 DUP4 DUP4 PUSH2 0x7DE JUMP JUMPDEST ISZERO PUSH2 0xD0D JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCAA PUSH2 0xC1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD22 DUP3 DUP3 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0xD65 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP3 SWAP2 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB2 DUP2 PUSH2 0xD7D JUMP JUMPDEST DUP2 EQ PUSH2 0xDBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDCF DUP2 PUSH2 0xDA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDEB JUMPI PUSH2 0xDEA PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDF9 DUP5 DUP3 DUP6 ADD PUSH2 0xDC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE17 DUP2 PUSH2 0xE02 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE32 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE0E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4B DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP2 EQ PUSH2 0xE56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE68 DUP2 PUSH2 0xE42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE84 JUMPI PUSH2 0xE83 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE92 DUP5 DUP3 DUP6 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEA4 DUP2 PUSH2 0xE38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEF0 DUP3 PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF00 DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP2 EQ PUSH2 0xF0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF1D DUP2 PUSH2 0xEF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF48 DUP6 DUP3 DUP7 ADD PUSH2 0xE59 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF59 DUP6 DUP3 DUP7 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF9D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF82 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC5 DUP3 PUSH2 0xF63 JUMP JUMPDEST PUSH2 0xFCF DUP2 DUP6 PUSH2 0xF6E JUMP JUMPDEST SWAP4 POP PUSH2 0xFDF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST PUSH2 0xFE8 DUP2 PUSH2 0xFA9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x100D DUP2 DUP5 PUSH2 0xFBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103A PUSH2 0x1035 PUSH2 0x1030 DUP5 PUSH2 0xEC5 JUMP JUMPDEST PUSH2 0x1015 JUMP JUMPDEST PUSH2 0xEC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x104C DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x105E DUP3 PUSH2 0x1041 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106E DUP2 PUSH2 0x1053 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1089 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1065 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10CC DUP3 PUSH2 0xFA9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10EB JUMPI PUSH2 0x10EA PUSH2 0x1094 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FE PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP PUSH2 0x110A DUP3 DUP3 PUSH2 0x10C3 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x112A JUMPI PUSH2 0x1129 PUSH2 0x1094 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1153 PUSH2 0x114E DUP5 PUSH2 0x110F JUMP JUMPDEST PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x113B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x119F JUMPI DUP1 PUSH2 0x118B DUP9 DUP3 PUSH2 0xF0E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1178 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11BE JUMPI PUSH2 0x11BD PUSH2 0x108F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11CE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1140 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11ED JUMPI PUSH2 0x11EC PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x120B JUMPI PUSH2 0x120A PUSH2 0xD78 JUMP JUMPDEST JUMPDEST PUSH2 0x1217 DUP5 DUP3 DUP6 ADD PUSH2 0x11A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1233 DUP2 PUSH2 0x1220 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x126A JUMPI PUSH2 0x1269 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1278 DUP5 DUP3 DUP6 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128C DUP3 PUSH2 0x101F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129E DUP3 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AE DUP2 PUSH2 0x1293 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12D8 DUP2 PUSH2 0x1220 JUMP JUMPDEST DUP2 EQ PUSH2 0x12E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F5 DUP2 PUSH2 0x12CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x1094 JUMP JUMPDEST JUMPDEST PUSH2 0x1324 DUP3 PUSH2 0xFA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1353 PUSH2 0x134E DUP5 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x10F4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x136F JUMPI PUSH2 0x136E PUSH2 0x12FB JUMP JUMPDEST JUMPDEST PUSH2 0x137A DUP5 DUP3 DUP6 PUSH2 0x1331 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1397 JUMPI PUSH2 0x1396 PUSH2 0x108F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13A7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C8 PUSH2 0xD73 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP7 DUP3 DUP8 ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST PUSH2 0x1404 DUP7 DUP3 DUP8 ADD PUSH2 0x1382 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1425 JUMPI PUSH2 0x1424 PUSH2 0xD78 JUMP JUMPDEST JUMPDEST PUSH2 0x1431 DUP7 DUP3 DUP8 ADD PUSH2 0x1382 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14A4 DUP3 PUSH2 0x1220 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x14D6 JUMPI PUSH2 0x14D5 PUSH2 0x146A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EA DUP2 PUSH2 0xEE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1505 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x1512 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 SLOAD 0xDD SHL JUMPI ISZERO 0xDC 0x1F SHR 0xE2 EXTCODEHASH CODECOPY 0xBB PUSH18 0x8F9CA5F13CB358A824668223CBEA7F9F14B6 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"237:2152:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:70:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1035:72:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;766:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1142:30:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;967:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1841:268;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;294:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1114:22:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;364:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;520:78:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;900:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1213:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1178:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;685:75:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2115:272;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;832:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;444:70:26:-;486:28;444:70;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1035:72:26:-;;;;;;;;;;;;;;;;;;;:::o;766:60::-;;;;;;;;;;;;;;;;;;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1142:30:26:-;;;;;;;;;;;;;:::o;967:62::-;;;;;;;;;;;;;;;;;;;:::o;604:74::-;648:30;604:74;:::o;1841:268::-;2232:4:0;1917:18:26;;2464:16:0;2475:4;2464:10;:16::i;:::-;1952:6:26::1;1947:156;1968:12;:19;1964:1;:23;1947:156;;;2042:4;2008:14;:31;2023:12;2036:1;2023:15;;;;;;;;:::i;:::-;;;;;;;;2008:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2076:12;2089:1;2076:15;;;;;;;;:::i;:::-;;;;;;;;2065:27;;;;;;;;;;;;1989:3;;;;;:::i;:::-;;;;1947:156;;;;1841:268:::0;;:::o;294:64::-;333:25;294:64;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1114:22:26:-;;;;:::o;364:74::-;408:30;364:74;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;520:78:26:-;566:32;520:78;:::o;900:61::-;;;;;;;;;;;;;;;;;;;:::o;1213:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;1178:28::-;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;685:75:26:-;;;;;;;;;;;;;;;;;;;:::o;2115:272::-;2253:1;2233:9;2227:23;:27;2256:20;;;;;;;;;;;;;;;;;2219:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2319:1;2301:7;2295:21;:25;2322:20;;;;;;;;;;;;;;;;;2287:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2115:272;;;:::o;832:62::-;;;;;;;;;;;;;;;;;;;:::o;763:146:20:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;7:75:29:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:60::-;4918:3;4939:5;4932:12;;4890:60;;;:::o;4956:142::-;5006:9;5039:53;5057:34;5066:24;5084:5;5066:24;:::i;:::-;5057:34;:::i;:::-;5039:53;:::i;:::-;5026:66;;4956:142;;;:::o;5104:134::-;5162:9;5195:37;5226:5;5195:37;:::i;:::-;5182:50;;5104:134;;;:::o;5244:162::-;5322:9;5355:45;5394:5;5355:45;:::i;:::-;5342:58;;5244:162;;;:::o;5412:187::-;5527:65;5586:5;5527:65;:::i;:::-;5522:3;5515:78;5412:187;;:::o;5605:278::-;5726:4;5764:2;5753:9;5749:18;5741:26;;5777:99;5873:1;5862:9;5858:17;5849:6;5777:99;:::i;:::-;5605:278;;;;:::o;5889:117::-;5998:1;5995;5988:12;6012:180;6060:77;6057:1;6050:88;6157:4;6154:1;6147:15;6181:4;6178:1;6171:15;6198:281;6281:27;6303:4;6281:27;:::i;:::-;6273:6;6269:40;6411:6;6399:10;6396:22;6375:18;6363:10;6360:34;6357:62;6354:88;;;6422:18;;:::i;:::-;6354:88;6462:10;6458:2;6451:22;6241:238;6198:281;;:::o;6485:129::-;6519:6;6546:20;;:::i;:::-;6536:30;;6575:33;6603:4;6595:6;6575:33;:::i;:::-;6485:129;;;:::o;6620:311::-;6697:4;6787:18;6779:6;6776:30;6773:56;;;6809:18;;:::i;:::-;6773:56;6859:4;6851:6;6847:17;6839:25;;6919:4;6913;6909:15;6901:23;;6620:311;;;:::o;6937:117::-;7046:1;7043;7036:12;7077:710;7173:5;7198:81;7214:64;7271:6;7214:64;:::i;:::-;7198:81;:::i;:::-;7189:90;;7299:5;7328:6;7321:5;7314:21;7362:4;7355:5;7351:16;7344:23;;7415:4;7407:6;7403:17;7395:6;7391:30;7444:3;7436:6;7433:15;7430:122;;;7463:79;;:::i;:::-;7430:122;7578:6;7561:220;7595:6;7590:3;7587:15;7561:220;;;7670:3;7699:37;7732:3;7720:10;7699:37;:::i;:::-;7694:3;7687:50;7766:4;7761:3;7757:14;7750:21;;7637:144;7621:4;7616:3;7612:14;7605:21;;7561:220;;;7565:21;7179:608;;7077:710;;;;;:::o;7810:370::-;7881:5;7930:3;7923:4;7915:6;7911:17;7907:27;7897:122;;7938:79;;:::i;:::-;7897:122;8055:6;8042:20;8080:94;8170:3;8162:6;8155:4;8147:6;8143:17;8080:94;:::i;:::-;8071:103;;7887:293;7810:370;;;;:::o;8186:539::-;8270:6;8319:2;8307:9;8298:7;8294:23;8290:32;8287:119;;;8325:79;;:::i;:::-;8287:119;8473:1;8462:9;8458:17;8445:31;8503:18;8495:6;8492:30;8489:117;;;8525:79;;:::i;:::-;8489:117;8630:78;8700:7;8691:6;8680:9;8676:22;8630:78;:::i;:::-;8620:88;;8416:302;8186:539;;;;:::o;8731:77::-;8768:7;8797:5;8786:16;;8731:77;;;:::o;8814:118::-;8901:24;8919:5;8901:24;:::i;:::-;8896:3;8889:37;8814:118;;:::o;8938:222::-;9031:4;9069:2;9058:9;9054:18;9046:26;;9082:71;9150:1;9139:9;9135:17;9126:6;9082:71;:::i;:::-;8938:222;;;;:::o;9166:329::-;9225:6;9274:2;9262:9;9253:7;9249:23;9245:32;9242:119;;;9280:79;;:::i;:::-;9242:119;9400:1;9425:53;9470:7;9461:6;9450:9;9446:22;9425:53;:::i;:::-;9415:63;;9371:117;9166:329;;;;:::o;9501:126::-;9551:9;9584:37;9615:5;9584:37;:::i;:::-;9571:50;;9501:126;;;:::o;9633:145::-;9702:9;9735:37;9766:5;9735:37;:::i;:::-;9722:50;;9633:145;;;:::o;9784:169::-;9890:56;9940:5;9890:56;:::i;:::-;9885:3;9878:69;9784:169;;:::o;9959:260::-;10071:4;10109:2;10098:9;10094:18;10086:26;;10122:90;10209:1;10198:9;10194:17;10185:6;10122:90;:::i;:::-;9959:260;;;;:::o;10225:122::-;10298:24;10316:5;10298:24;:::i;:::-;10291:5;10288:35;10278:63;;10337:1;10334;10327:12;10278:63;10225:122;:::o;10353:139::-;10399:5;10437:6;10424:20;10415:29;;10453:33;10480:5;10453:33;:::i;:::-;10353:139;;;;:::o;10498:117::-;10607:1;10604;10597:12;10621:308;10683:4;10773:18;10765:6;10762:30;10759:56;;;10795:18;;:::i;:::-;10759:56;10833:29;10855:6;10833:29;:::i;:::-;10825:37;;10917:4;10911;10907:15;10899:23;;10621:308;;;:::o;10935:146::-;11032:6;11027:3;11022;11009:30;11073:1;11064:6;11059:3;11055:16;11048:27;10935:146;;;:::o;11087:425::-;11165:5;11190:66;11206:49;11248:6;11206:49;:::i;:::-;11190:66;:::i;:::-;11181:75;;11279:6;11272:5;11265:21;11317:4;11310:5;11306:16;11355:3;11346:6;11341:3;11337:16;11334:25;11331:112;;;11362:79;;:::i;:::-;11331:112;11452:54;11499:6;11494:3;11489;11452:54;:::i;:::-;11171:341;11087:425;;;;;:::o;11532:340::-;11588:5;11637:3;11630:4;11622:6;11618:17;11614:27;11604:122;;11645:79;;:::i;:::-;11604:122;11762:6;11749:20;11787:79;11862:3;11854:6;11847:4;11839:6;11835:17;11787:79;:::i;:::-;11778:88;;11594:278;11532:340;;;;:::o;11878:979::-;11975:6;11983;11991;12040:2;12028:9;12019:7;12015:23;12011:32;12008:119;;;12046:79;;:::i;:::-;12008:119;12166:1;12191:53;12236:7;12227:6;12216:9;12212:22;12191:53;:::i;:::-;12181:63;;12137:117;12321:2;12310:9;12306:18;12293:32;12352:18;12344:6;12341:30;12338:117;;;12374:79;;:::i;:::-;12338:117;12479:63;12534:7;12525:6;12514:9;12510:22;12479:63;:::i;:::-;12469:73;;12264:288;12619:2;12608:9;12604:18;12591:32;12650:18;12642:6;12639:30;12636:117;;;12672:79;;:::i;:::-;12636:117;12777:63;12832:7;12823:6;12812:9;12808:22;12777:63;:::i;:::-;12767:73;;12562:288;11878:979;;;;;:::o;12863:180::-;12911:77;12908:1;12901:88;13008:4;13005:1;12998:15;13032:4;13029:1;13022:15;13049:180;13097:77;13094:1;13087:88;13194:4;13191:1;13184:15;13218:4;13215:1;13208:15;13235:233;13274:3;13297:24;13315:5;13297:24;:::i;:::-;13288:33;;13343:66;13336:5;13333:77;13330:103;;13413:18;;:::i;:::-;13330:103;13460:1;13453:5;13449:13;13442:20;;13235:233;;;:::o;13474:118::-;13561:24;13579:5;13561:24;:::i;:::-;13556:3;13549:37;13474:118;;:::o;13598:332::-;13719:4;13757:2;13746:9;13742:18;13734:26;;13770:71;13838:1;13827:9;13823:17;13814:6;13770:71;:::i;:::-;13851:72;13919:2;13908:9;13904:18;13895:6;13851:72;:::i;:::-;13598:332;;;;;:::o"},"methodIdentifiers":{"CREATOR_ROLE()":"8aeda25a","DEFAULT_ADMIN_ROLE()":"a217fddf","DEXA_CREATOR_ROLE()":"980e3af8","DEXA_FEEDS_ROLE()":"2576bdea","DEXA_MESSENGER_ROLE()":"a720640e","DEXA_STORAGE_ROLE()":"5e0118b6","ERROR_DUPLICATE_RESOURCE()":"f22b9ab6","ERROR_INVALID_PRICE()":"362c3ab8","ERROR_INVALID_STRING()":"fc23413a","ERROR_NOT_FOUND()":"ad4fb5cd","ERROR_PROCESS_FAILED()":"5c107264","ERROR_UNAUTHORISED_ACCESS()":"34b89fb7","_allowedTokens(address)":"b7660cd3","addTokenToWhitelist(address[])":"89c72556","commentOnPost(uint256,string,string)":"f8ebc039","dexaCreator()":"3e7a3e3e","feeRate()":"978bbdb9","feedsToken()":"caf601e1","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_dexaCreator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feedsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"postId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"gnfdId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"remintToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remintPrice\",\"type\":\"uint256\"}],\"name\":\"PostMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"postId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"offChainId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tippedToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tipId\",\"type\":\"uint256\"}],\"name\":\"Tipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_FEEDS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_MESSENGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_STORAGE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_DUPLICATE_RESOURCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_INVALID_PRICE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_INVALID_STRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_NOT_FOUND\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_PROCESS_FAILED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_UNAUTHORISED_ACCESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddress\",\"type\":\"address[]\"}],\"name\":\"addTokenToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"postId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"commentId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"content\",\"type\":\"string\"}],\"name\":\"commentOnPost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexaCreator\",\"outputs\":[{\"internalType\":\"contract DexaCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feedsToken\",\"outputs\":[{\"internalType\":\"contract FeedsToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexaFeeds.sol\":\"DexaFeeds\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/DexaCreator.sol\":{\"keccak256\":\"0xcd6adb78ad750350703e4efc3a3693f10ef45924e49b7da9c0d21a132632c651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a7f78168eb0b09a581cc096baae4e2da4ba5e276f54d6b66a2f89d3e316c659\",\"dweb:/ipfs/QmdMo3HD3vtkyBLz3tLAGnXjuhvwW1oFXkakHtXXz6LbH8\"]},\"contracts/DexaFeeds.sol\":{\"keccak256\":\"0x6a248f865fbb0484aa75e0d2a086af84ca14f2ef5950efa827f13aca13466441\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4826c361d1959cddc1ad128aec974f0ff2be2d0b899cb8ba84f6382848f2021\",\"dweb:/ipfs/QmbBVUzQPrtA6Xd5EdVoirmpE5UJ9mHqFDx2kD2pDZu1Uh\"]},\"contracts/FeedsToken.sol\":{\"keccak256\":\"0xf2bd790b234bd258305b3354fad7e309089c48605c95c5e654041223f85ae6ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91dc2c85a0e825d77ceda3d804e33b40c26837068fd9c3b233ec0463042d3749\",\"dweb:/ipfs/QmbX3oc64s9HFpjA98Nk1QJz57qVdnaGXHHHcKKfXK7259\"]}},\"version\":1}"}},"contracts/DexaMessenger.sol":{"DexaMessenger":{"abi":[{"inputs":[{"internalType":"address payable","name":"_dexaCreator","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_CREATOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_FEEDS_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_MESSENGER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEXA_STORAGE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_DUPLICATE_RESOURCE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_INVALID_PRICE","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_INVALID_STRING","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_NOT_FOUND","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_PROCESS_FAILED","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ERROR_UNAUTHORISED_ACCESS","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"dexaCreator","outputs":[{"internalType":"contract DexaCreator","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_8389":{"entryPoint":null,"id":8389,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":149,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1675":{"entryPoint":514,"id":1675,"parameterSlots":0,"returnSlots":1},"@hasRole_80":{"entryPoint":408,"id":80,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable_fromMemory":{"entryPoint":628,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":559,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":527,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":522,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":579,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1255:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"379:81:29","statements":[{"nodeType":"YulAssignment","src":"389:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:29"},"nodeType":"YulFunctionCall","src":"400:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:29","type":""}],"src":"334:126:29"},{"body":{"nodeType":"YulBlock","src":"519:51:29","statements":[{"nodeType":"YulAssignment","src":"529:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"558:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"540:17:29"},"nodeType":"YulFunctionCall","src":"540:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"529:7:29"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"501:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"511:7:29","type":""}],"src":"466:104:29"},{"body":{"nodeType":"YulBlock","src":"627:87:29","statements":[{"body":{"nodeType":"YulBlock","src":"692:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"701:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"704:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"694:6:29"},"nodeType":"YulFunctionCall","src":"694:12:29"},"nodeType":"YulExpressionStatement","src":"694:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"650:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"683:5:29"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"657:25:29"},"nodeType":"YulFunctionCall","src":"657:32:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"647:2:29"},"nodeType":"YulFunctionCall","src":"647:43:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"640:6:29"},"nodeType":"YulFunctionCall","src":"640:51:29"},"nodeType":"YulIf","src":"637:71:29"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"620:5:29","type":""}],"src":"576:138:29"},{"body":{"nodeType":"YulBlock","src":"791:88:29","statements":[{"nodeType":"YulAssignment","src":"801:22:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"816:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"810:5:29"},"nodeType":"YulFunctionCall","src":"810:13:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"801:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"867:5:29"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"832:34:29"},"nodeType":"YulFunctionCall","src":"832:41:29"},"nodeType":"YulExpressionStatement","src":"832:41:29"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"769:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"777:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"785:5:29","type":""}],"src":"720:159:29"},{"body":{"nodeType":"YulBlock","src":"970:282:29","statements":[{"body":{"nodeType":"YulBlock","src":"1016:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1018:77:29"},"nodeType":"YulFunctionCall","src":"1018:79:29"},"nodeType":"YulExpressionStatement","src":"1018:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"991:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"987:3:29"},"nodeType":"YulFunctionCall","src":"987:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1012:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"983:3:29"},"nodeType":"YulFunctionCall","src":"983:32:29"},"nodeType":"YulIf","src":"980:119:29"},{"nodeType":"YulBlock","src":"1109:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1124:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1138:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1128:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1153:82:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1207:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1218:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1203:3:29"},"nodeType":"YulFunctionCall","src":"1203:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1227:7:29"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"1163:39:29"},"nodeType":"YulFunctionCall","src":"1163:72:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1153:6:29"}]}]}]},"name":"abi_decode_tuple_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"940:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"951:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"963:6:29","type":""}],"src":"885:367:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200107e3803806200107e833981810160405281019062000037919062000274565b6200004c6000801b336200009560201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002a6565b6000620000a983836200019860201b60201c565b6200018d57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001296200020260201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000192565b600090505b92915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200023c826200020f565b9050919050565b6200024e816200022f565b81146200025a57600080fd5b50565b6000815190506200026e8162000243565b92915050565b6000602082840312156200028d576200028c6200020a565b5b60006200029d848285016200025d565b91505092915050565b610dc880620002b66000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80635e0118b6116100ad578063a720640e11610071578063a720640e146102fc578063ad4fb5cd1461031a578063d547741f14610338578063f22b9ab614610354578063fc23413a1461037257610121565b80635e0118b6146102545780638aeda25a1461027257806391d1485414610290578063980e3af8146102c0578063a217fddf146102de57610121565b806334b89fb7116100f457806334b89fb7146101c0578063362c3ab8146101de57806336568abe146101fc5780633e7a3e3e146102185780635c1072641461023657610121565b806301ffc9a714610126578063248a9ca3146101565780632576bdea146101865780632f2ff15d146101a4575b600080fd5b610140600480360381019061013b9190610aa0565b610390565b60405161014d9190610ae8565b60405180910390f35b610170600480360381019061016b9190610b39565b61040a565b60405161017d9190610b75565b60405180910390f35b61018e610429565b60405161019b9190610b75565b60405180910390f35b6101be60048036038101906101b99190610bee565b61044d565b005b6101c861046f565b6040516101d59190610cbe565b60405180910390f35b6101e66104a8565b6040516101f39190610cbe565b60405180910390f35b61021660048036038101906102119190610bee565b6104e1565b005b61022061055c565b60405161022d9190610d3f565b60405180910390f35b61023e610582565b60405161024b9190610cbe565b60405180910390f35b61025c6105bb565b6040516102699190610b75565b60405180910390f35b61027a6105df565b6040516102879190610b75565b60405180910390f35b6102aa60048036038101906102a59190610bee565b610603565b6040516102b79190610ae8565b60405180910390f35b6102c861066d565b6040516102d59190610b75565b60405180910390f35b6102e6610691565b6040516102f39190610b75565b60405180910390f35b610304610698565b6040516103119190610b75565b60405180910390f35b6103226106bc565b60405161032f9190610cbe565b60405180910390f35b610352600480360381019061034d9190610bee565b6106f5565b005b61035c610717565b6040516103699190610cbe565b60405180910390f35b61037a610750565b6040516103879190610cbe565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610403575061040282610789565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e81565b6104568261040a565b61045f816107f3565b6104698383610807565b50505050565b6040518060400160405280601381526020017f556e617574686f7269736564206163636573730000000000000000000000000081525081565b6040518060400160405280600d81526020017f496e76616c69642070726963650000000000000000000000000000000000000081525081565b6104e96108f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461054d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105578282610900565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600e81526020017f50726f63657373206661696c656400000000000000000000000000000000000081525081565b7f0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e81565b7f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c8903541281565b6000801b81565b7f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a030481565b6040518060400160405280601281526020017f5265736f75726365206e6f7420666f756e64000000000000000000000000000081525081565b6106fe8261040a565b610707816107f3565b6107118383610900565b50505050565b6040518060400160405280601781526020017f5265736f7572636520616c72656164792065786973747300000000000000000081525081565b6040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610804816107ff6108f8565b6109f2565b50565b60006108138383610603565b6108ed57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061088a6108f8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108f2565b600090505b92915050565b600033905090565b600061090c8383610603565b156109e757600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109846108f8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506109ec565b600090505b92915050565b6109fc8282610603565b610a3f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a36929190610d69565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a7d81610a48565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a43565b5b6000610ac484828501610a8b565b91505092915050565b60008115159050919050565b610ae281610acd565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b6000819050919050565b610b1681610b03565b8114610b2157600080fd5b50565b600081359050610b3381610b0d565b92915050565b600060208284031215610b4f57610b4e610a43565b5b6000610b5d84828501610b24565b91505092915050565b610b6f81610b03565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bbb82610b90565b9050919050565b610bcb81610bb0565b8114610bd657600080fd5b50565b600081359050610be881610bc2565b92915050565b60008060408385031215610c0557610c04610a43565b5b6000610c1385828601610b24565b9250506020610c2485828601610bd9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c68578082015181840152602081019050610c4d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c9082610c2e565b610c9a8185610c39565b9350610caa818560208601610c4a565b610cb381610c74565b840191505092915050565b60006020820190508181036000830152610cd88184610c85565b905092915050565b6000819050919050565b6000610d05610d00610cfb84610b90565b610ce0565b610b90565b9050919050565b6000610d1782610cea565b9050919050565b6000610d2982610d0c565b9050919050565b610d3981610d1e565b82525050565b6000602082019050610d546000830184610d30565b92915050565b610d6381610bb0565b82525050565b6000604082019050610d7e6000830185610d5a565b610d8b6020830184610b66565b939250505056fea2646970667358221220d48813047935c034223ab9024679ce644e7a2d236121da886e6b11a7c357da8464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x107E CODESIZE SUB DUP1 PUSH3 0x107E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x274 JUMP JUMPDEST PUSH3 0x4C PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x95 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x2A6 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA9 DUP4 DUP4 PUSH3 0x198 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x18D JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x129 PUSH3 0x202 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x192 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x23C DUP3 PUSH3 0x20F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x24E DUP2 PUSH3 0x22F JUMP JUMPDEST DUP2 EQ PUSH3 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x26E DUP2 PUSH3 0x243 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x28D JUMPI PUSH3 0x28C PUSH3 0x20A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x29D DUP5 DUP3 DUP6 ADD PUSH3 0x25D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDC8 DUP1 PUSH3 0x2B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5E0118B6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA720640E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA720640E EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xAD4FB5CD EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF22B9AB6 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xFC23413A EQ PUSH2 0x372 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x5E0118B6 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8AEDA25A EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x980E3AF8 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2DE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x34B89FB7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x34B89FB7 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x362C3AB8 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x3E7A3E3E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x5C107264 EQ PUSH2 0x236 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x2576BDEA EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x403 JUMPI POP PUSH2 0x402 DUP3 PUSH2 0x789 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP2 JUMP JUMPDEST PUSH2 0x456 DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x45F DUP2 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x469 DUP4 DUP4 PUSH2 0x807 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697365642061636365737300000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x8F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x557 DUP3 DUP3 PUSH2 0x900 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F63657373206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0xE071082E8835E151107BAEB3781CD9C05E5A89FDA0B31203AB6C4FE9AB6053E DUP2 JUMP JUMPDEST PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F75726365206E6F7420666F756E640000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x6FE DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x707 DUP2 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0x900 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x804 DUP2 PUSH2 0x7FF PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 DUP4 DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x8ED JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x88A PUSH2 0x8F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C DUP4 DUP4 PUSH2 0x603 JUMP JUMPDEST ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x984 PUSH2 0x8F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9FC DUP3 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH2 0xA3F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP3 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0xA48 JUMP JUMPDEST DUP2 EQ PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9A DUP2 PUSH2 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0xAB5 PUSH2 0xA43 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC4 DUP5 DUP3 DUP6 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE2 DUP2 PUSH2 0xACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB16 DUP2 PUSH2 0xB03 JUMP JUMPDEST DUP2 EQ PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB33 DUP2 PUSH2 0xB0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0xA43 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB5D DUP5 DUP3 DUP6 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xB03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBB DUP3 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCB DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE8 DUP2 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xA43 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP6 DUP3 DUP7 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC24 DUP6 DUP3 DUP7 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC90 DUP3 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xC9A DUP2 DUP6 PUSH2 0xC39 JUMP JUMPDEST SWAP4 POP PUSH2 0xCAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD8 DUP2 DUP5 PUSH2 0xC85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 PUSH2 0xD00 PUSH2 0xCFB DUP5 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD17 DUP3 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD29 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 DUP2 PUSH2 0xD1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD63 DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0xD8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP9 SGT DIV PUSH26 0x35C034223AB9024679CE644E7A2D236121DA886E6B11A7C357DA DUP5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"210:1070:27:-:0;;;1128:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1180:42;2232:4:0;1191:18:27;;1211:10;1180;;;:42;;:::i;:::-;;1258:12;1232:11;;:39;;;;;;;;;;;;;;;;;;1128:150;210:1070;;6179:316:0;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;88:117:29:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:104::-;511:7;540:24;558:5;540:24;:::i;:::-;529:35;;466:104;;;:::o;576:138::-;657:32;683:5;657:32;:::i;:::-;650:5;647:43;637:71;;704:1;701;694:12;637:71;576:138;:::o;720:159::-;785:5;816:6;810:13;801:22;;832:41;867:5;832:41;:::i;:::-;720:159;;;;:::o;885:367::-;963:6;1012:2;1000:9;991:7;987:23;983:32;980:119;;;1018:79;;:::i;:::-;980:119;1138:1;1163:72;1227:7;1218:6;1207:9;1203:22;1163:72;:::i;:::-;1153:82;;1109:136;885:367;;;;:::o;210:1070:27:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@CREATOR_ROLE_8330":{"entryPoint":1503,"id":8330,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":1681,"id":29,"parameterSlots":0,"returnSlots":0},"@DEXA_CREATOR_ROLE_8335":{"entryPoint":1645,"id":8335,"parameterSlots":0,"returnSlots":0},"@DEXA_FEEDS_ROLE_8340":{"entryPoint":1065,"id":8340,"parameterSlots":0,"returnSlots":0},"@DEXA_MESSENGER_ROLE_8345":{"entryPoint":1688,"id":8345,"parameterSlots":0,"returnSlots":0},"@DEXA_STORAGE_ROLE_8350":{"entryPoint":1467,"id":8350,"parameterSlots":0,"returnSlots":0},"@ERROR_DUPLICATE_RESOURCE_8353":{"entryPoint":1815,"id":8353,"parameterSlots":0,"returnSlots":0},"@ERROR_INVALID_PRICE_8356":{"entryPoint":1192,"id":8356,"parameterSlots":0,"returnSlots":0},"@ERROR_INVALID_STRING_8359":{"entryPoint":1872,"id":8359,"parameterSlots":0,"returnSlots":0},"@ERROR_NOT_FOUND_8362":{"entryPoint":1724,"id":8362,"parameterSlots":0,"returnSlots":0},"@ERROR_PROCESS_FAILED_8365":{"entryPoint":1410,"id":8365,"parameterSlots":0,"returnSlots":0},"@ERROR_UNAUTHORISED_ACCESS_8368":{"entryPoint":1135,"id":8368,"parameterSlots":0,"returnSlots":0},"@_checkRole_114":{"entryPoint":2546,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":2035,"id":93,"parameterSlots":1,"returnSlots":0},"@_grantRole_256":{"entryPoint":2055,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1675":{"entryPoint":2296,"id":1675,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":2304,"id":294,"parameterSlots":2,"returnSlots":1},"@dexaCreator_8371":{"entryPoint":1372,"id":8371,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_128":{"entryPoint":1034,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1101,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":1539,"id":80,"parameterSlots":2,"returnSlots":1},"@renounceRole_189":{"entryPoint":1249,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":1781,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4240":{"entryPoint":1929,"id":4240,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":912,"id":62,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":2852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":2873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":3054,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":2720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3418,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2777,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2918,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack":{"entryPoint":3376,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":3433,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":2933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_DexaCreator_$8121__to_t_address_payable__fromStack_reversed":{"entryPoint":3391,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3262,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3118,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3129,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2992,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2765,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2819,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2632,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2960,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_DexaCreator_$8121_to_t_address_payable":{"entryPoint":3358,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address_payable":{"entryPoint":3340,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3306,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3146,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":3296,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2627,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3188,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3010,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":2829,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":2676,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6348:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1563:32:29","statements":[{"nodeType":"YulAssignment","src":"1573:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:29","type":""}],"src":"1518:77:29"},{"body":{"nodeType":"YulBlock","src":"1644:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:29"},"nodeType":"YulFunctionCall","src":"1703:12:29"},"nodeType":"YulExpressionStatement","src":"1703:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:29"},"nodeType":"YulFunctionCall","src":"1674:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:29"},"nodeType":"YulFunctionCall","src":"1664:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:29"},"nodeType":"YulFunctionCall","src":"1657:43:29"},"nodeType":"YulIf","src":"1654:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:29","type":""}],"src":"1601:122:29"},{"body":{"nodeType":"YulBlock","src":"1781:87:29","statements":[{"nodeType":"YulAssignment","src":"1791:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:29"},"nodeType":"YulFunctionCall","src":"1800:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:29"},"nodeType":"YulFunctionCall","src":"1829:33:29"},"nodeType":"YulExpressionStatement","src":"1829:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:29","type":""}],"src":"1729:139:29"},{"body":{"nodeType":"YulBlock","src":"1940:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:29"},"nodeType":"YulFunctionCall","src":"1988:79:29"},"nodeType":"YulExpressionStatement","src":"1988:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:29"},"nodeType":"YulFunctionCall","src":"1957:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:29"},"nodeType":"YulFunctionCall","src":"1953:32:29"},"nodeType":"YulIf","src":"1950:119:29"},{"nodeType":"YulBlock","src":"2079:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:29"},"nodeType":"YulFunctionCall","src":"2154:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2133:20:29"},"nodeType":"YulFunctionCall","src":"2133:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:29","type":""}],"src":"1874:329:29"},{"body":{"nodeType":"YulBlock","src":"2274:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2291:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2314:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2296:17:29"},"nodeType":"YulFunctionCall","src":"2296:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2284:6:29"},"nodeType":"YulFunctionCall","src":"2284:37:29"},"nodeType":"YulExpressionStatement","src":"2284:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2262:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2269:3:29","type":""}],"src":"2209:118:29"},{"body":{"nodeType":"YulBlock","src":"2431:124:29","statements":[{"nodeType":"YulAssignment","src":"2441:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2453:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2464:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2449:3:29"},"nodeType":"YulFunctionCall","src":"2449:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2441:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2521:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2545:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2530:3:29"},"nodeType":"YulFunctionCall","src":"2530:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2477:43:29"},"nodeType":"YulFunctionCall","src":"2477:71:29"},"nodeType":"YulExpressionStatement","src":"2477:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2403:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2415:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2426:4:29","type":""}],"src":"2333:222:29"},{"body":{"nodeType":"YulBlock","src":"2606:81:29","statements":[{"nodeType":"YulAssignment","src":"2616:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2631:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2638:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2627:3:29"},"nodeType":"YulFunctionCall","src":"2627:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2616:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2598:7:29","type":""}],"src":"2561:126:29"},{"body":{"nodeType":"YulBlock","src":"2738:51:29","statements":[{"nodeType":"YulAssignment","src":"2748:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2777:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2759:17:29"},"nodeType":"YulFunctionCall","src":"2759:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2748:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2720:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2730:7:29","type":""}],"src":"2693:96:29"},{"body":{"nodeType":"YulBlock","src":"2838:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"2895:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2904:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2907:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2897:6:29"},"nodeType":"YulFunctionCall","src":"2897:12:29"},"nodeType":"YulExpressionStatement","src":"2897:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2861:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2886:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2868:17:29"},"nodeType":"YulFunctionCall","src":"2868:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2858:2:29"},"nodeType":"YulFunctionCall","src":"2858:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2851:6:29"},"nodeType":"YulFunctionCall","src":"2851:43:29"},"nodeType":"YulIf","src":"2848:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2831:5:29","type":""}],"src":"2795:122:29"},{"body":{"nodeType":"YulBlock","src":"2975:87:29","statements":[{"nodeType":"YulAssignment","src":"2985:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3007:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2994:12:29"},"nodeType":"YulFunctionCall","src":"2994:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2985:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3023:26:29"},"nodeType":"YulFunctionCall","src":"3023:33:29"},"nodeType":"YulExpressionStatement","src":"3023:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2953:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2961:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2969:5:29","type":""}],"src":"2923:139:29"},{"body":{"nodeType":"YulBlock","src":"3151:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"3197:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3199:77:29"},"nodeType":"YulFunctionCall","src":"3199:79:29"},"nodeType":"YulExpressionStatement","src":"3199:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3172:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3181:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3168:3:29"},"nodeType":"YulFunctionCall","src":"3168:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3193:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3164:3:29"},"nodeType":"YulFunctionCall","src":"3164:32:29"},"nodeType":"YulIf","src":"3161:119:29"},{"nodeType":"YulBlock","src":"3290:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3305:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3319:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3309:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3334:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3369:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3380:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3365:3:29"},"nodeType":"YulFunctionCall","src":"3365:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3389:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"3344:20:29"},"nodeType":"YulFunctionCall","src":"3344:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3334:6:29"}]}]},{"nodeType":"YulBlock","src":"3417:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3432:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3446:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3436:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:29"},"nodeType":"YulFunctionCall","src":"3493:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3472:20:29"},"nodeType":"YulFunctionCall","src":"3472:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3462:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3113:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3124:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3136:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3144:6:29","type":""}],"src":"3068:474:29"},{"body":{"nodeType":"YulBlock","src":"3607:40:29","statements":[{"nodeType":"YulAssignment","src":"3618:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3634:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3628:5:29"},"nodeType":"YulFunctionCall","src":"3628:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3618:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3590:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3600:6:29","type":""}],"src":"3548:99:29"},{"body":{"nodeType":"YulBlock","src":"3749:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3766:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"3771:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:29"},"nodeType":"YulFunctionCall","src":"3759:19:29"},"nodeType":"YulExpressionStatement","src":"3759:19:29"},{"nodeType":"YulAssignment","src":"3787:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3806:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"3811:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:29"},"nodeType":"YulFunctionCall","src":"3802:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3787:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3721:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"3726:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3737:11:29","type":""}],"src":"3653:169:29"},{"body":{"nodeType":"YulBlock","src":"3890:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3900:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3909:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3904:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3969:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3994:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"3999:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3990:3:29"},"nodeType":"YulFunctionCall","src":"3990:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4013:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"4018:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4009:3:29"},"nodeType":"YulFunctionCall","src":"4009:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4003:5:29"},"nodeType":"YulFunctionCall","src":"4003:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3983:6:29"},"nodeType":"YulFunctionCall","src":"3983:39:29"},"nodeType":"YulExpressionStatement","src":"3983:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3930:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"3933:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3927:2:29"},"nodeType":"YulFunctionCall","src":"3927:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3941:19:29","statements":[{"nodeType":"YulAssignment","src":"3943:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3952:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3948:3:29"},"nodeType":"YulFunctionCall","src":"3948:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3943:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"3923:3:29","statements":[]},"src":"3919:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4052:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4048:3:29"},"nodeType":"YulFunctionCall","src":"4048:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"4066:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4041:6:29"},"nodeType":"YulFunctionCall","src":"4041:27:29"},"nodeType":"YulExpressionStatement","src":"4041:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3872:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3877:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"3882:6:29","type":""}],"src":"3828:246:29"},{"body":{"nodeType":"YulBlock","src":"4128:54:29","statements":[{"nodeType":"YulAssignment","src":"4138:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4152:3:29"},"nodeType":"YulFunctionCall","src":"4152:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4172:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4168:3:29"},"nodeType":"YulFunctionCall","src":"4168:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4148:3:29"},"nodeType":"YulFunctionCall","src":"4148:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4138:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4111:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4121:6:29","type":""}],"src":"4080:102:29"},{"body":{"nodeType":"YulBlock","src":"4280:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4290:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4304:32:29"},"nodeType":"YulFunctionCall","src":"4304:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4294:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4352:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4418:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4423:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4359:58:29"},"nodeType":"YulFunctionCall","src":"4359:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4352:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4478:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"4485:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4474:3:29"},"nodeType":"YulFunctionCall","src":"4474:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"4492:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"4497:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4439:34:29"},"nodeType":"YulFunctionCall","src":"4439:65:29"},"nodeType":"YulExpressionStatement","src":"4439:65:29"},{"nodeType":"YulAssignment","src":"4513:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4524:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4551:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4529:21:29"},"nodeType":"YulFunctionCall","src":"4529:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4520:3:29"},"nodeType":"YulFunctionCall","src":"4520:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4513:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4261:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4268:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4276:3:29","type":""}],"src":"4188:377:29"},{"body":{"nodeType":"YulBlock","src":"4689:195:29","statements":[{"nodeType":"YulAssignment","src":"4699:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:29"},"nodeType":"YulFunctionCall","src":"4707:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4699:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4746:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4757:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4742:3:29"},"nodeType":"YulFunctionCall","src":"4742:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4765:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4761:3:29"},"nodeType":"YulFunctionCall","src":"4761:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4735:6:29"},"nodeType":"YulFunctionCall","src":"4735:47:29"},"nodeType":"YulExpressionStatement","src":"4735:47:29"},{"nodeType":"YulAssignment","src":"4791:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4863:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"4872:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4799:63:29"},"nodeType":"YulFunctionCall","src":"4799:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4791:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4661:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4673:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4684:4:29","type":""}],"src":"4571:313:29"},{"body":{"nodeType":"YulBlock","src":"4922:28:29","statements":[{"nodeType":"YulAssignment","src":"4932:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"4939:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4932:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4908:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4918:3:29","type":""}],"src":"4890:60:29"},{"body":{"nodeType":"YulBlock","src":"5016:82:29","statements":[{"nodeType":"YulAssignment","src":"5026:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5084:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5066:17:29"},"nodeType":"YulFunctionCall","src":"5066:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5057:8:29"},"nodeType":"YulFunctionCall","src":"5057:34:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5039:17:29"},"nodeType":"YulFunctionCall","src":"5039:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5026:9:29"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4996:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5006:9:29","type":""}],"src":"4956:142:29"},{"body":{"nodeType":"YulBlock","src":"5172:66:29","statements":[{"nodeType":"YulAssignment","src":"5182:50:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5226:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5195:30:29"},"nodeType":"YulFunctionCall","src":"5195:37:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5182:9:29"}]}]},"name":"convert_t_uint160_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5152:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5162:9:29","type":""}],"src":"5104:134:29"},{"body":{"nodeType":"YulBlock","src":"5332:74:29","statements":[{"nodeType":"YulAssignment","src":"5342:58:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5394:5:29"}],"functionName":{"name":"convert_t_uint160_to_t_address_payable","nodeType":"YulIdentifier","src":"5355:38:29"},"nodeType":"YulFunctionCall","src":"5355:45:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5342:9:29"}]}]},"name":"convert_t_contract$_DexaCreator_$8121_to_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5312:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5322:9:29","type":""}],"src":"5244:162:29"},{"body":{"nodeType":"YulBlock","src":"5505:94:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5522:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5586:5:29"}],"functionName":{"name":"convert_t_contract$_DexaCreator_$8121_to_t_address_payable","nodeType":"YulIdentifier","src":"5527:58:29"},"nodeType":"YulFunctionCall","src":"5527:65:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5515:6:29"},"nodeType":"YulFunctionCall","src":"5515:78:29"},"nodeType":"YulExpressionStatement","src":"5515:78:29"}]},"name":"abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5493:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5500:3:29","type":""}],"src":"5412:187:29"},{"body":{"nodeType":"YulBlock","src":"5731:152:29","statements":[{"nodeType":"YulAssignment","src":"5741:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5753:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5764:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5749:3:29"},"nodeType":"YulFunctionCall","src":"5749:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5741:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5849:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5862:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"5873:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:29"},"nodeType":"YulFunctionCall","src":"5858:17:29"}],"functionName":{"name":"abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"5777:71:29"},"nodeType":"YulFunctionCall","src":"5777:99:29"},"nodeType":"YulExpressionStatement","src":"5777:99:29"}]},"name":"abi_encode_tuple_t_contract$_DexaCreator_$8121__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5703:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5715:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5726:4:29","type":""}],"src":"5605:278:29"},{"body":{"nodeType":"YulBlock","src":"5954:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5971:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5994:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5976:17:29"},"nodeType":"YulFunctionCall","src":"5976:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5964:6:29"},"nodeType":"YulFunctionCall","src":"5964:37:29"},"nodeType":"YulExpressionStatement","src":"5964:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5942:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5949:3:29","type":""}],"src":"5889:118:29"},{"body":{"nodeType":"YulBlock","src":"6139:206:29","statements":[{"nodeType":"YulAssignment","src":"6149:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6161:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6172:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6157:3:29"},"nodeType":"YulFunctionCall","src":"6157:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6149:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6229:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6242:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6253:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6238:3:29"},"nodeType":"YulFunctionCall","src":"6238:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6185:43:29"},"nodeType":"YulFunctionCall","src":"6185:71:29"},"nodeType":"YulExpressionStatement","src":"6185:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6310:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6323:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6334:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6319:3:29"},"nodeType":"YulFunctionCall","src":"6319:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6266:43:29"},"nodeType":"YulFunctionCall","src":"6266:72:29"},"nodeType":"YulExpressionStatement","src":"6266:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6103:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6115:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6123:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6134:4:29","type":""}],"src":"6013:332:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_DexaCreator_$8121_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_DexaCreator_$8121_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_DexaCreator_$8121__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_DexaCreator_$8121_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c80635e0118b6116100ad578063a720640e11610071578063a720640e146102fc578063ad4fb5cd1461031a578063d547741f14610338578063f22b9ab614610354578063fc23413a1461037257610121565b80635e0118b6146102545780638aeda25a1461027257806391d1485414610290578063980e3af8146102c0578063a217fddf146102de57610121565b806334b89fb7116100f457806334b89fb7146101c0578063362c3ab8146101de57806336568abe146101fc5780633e7a3e3e146102185780635c1072641461023657610121565b806301ffc9a714610126578063248a9ca3146101565780632576bdea146101865780632f2ff15d146101a4575b600080fd5b610140600480360381019061013b9190610aa0565b610390565b60405161014d9190610ae8565b60405180910390f35b610170600480360381019061016b9190610b39565b61040a565b60405161017d9190610b75565b60405180910390f35b61018e610429565b60405161019b9190610b75565b60405180910390f35b6101be60048036038101906101b99190610bee565b61044d565b005b6101c861046f565b6040516101d59190610cbe565b60405180910390f35b6101e66104a8565b6040516101f39190610cbe565b60405180910390f35b61021660048036038101906102119190610bee565b6104e1565b005b61022061055c565b60405161022d9190610d3f565b60405180910390f35b61023e610582565b60405161024b9190610cbe565b60405180910390f35b61025c6105bb565b6040516102699190610b75565b60405180910390f35b61027a6105df565b6040516102879190610b75565b60405180910390f35b6102aa60048036038101906102a59190610bee565b610603565b6040516102b79190610ae8565b60405180910390f35b6102c861066d565b6040516102d59190610b75565b60405180910390f35b6102e6610691565b6040516102f39190610b75565b60405180910390f35b610304610698565b6040516103119190610b75565b60405180910390f35b6103226106bc565b60405161032f9190610cbe565b60405180910390f35b610352600480360381019061034d9190610bee565b6106f5565b005b61035c610717565b6040516103699190610cbe565b60405180910390f35b61037a610750565b6040516103879190610cbe565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610403575061040282610789565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b7f4b3781db2a3808229e80877aa6761365508dec12dd2e53e8aa88fa3d4ec3728e81565b6104568261040a565b61045f816107f3565b6104698383610807565b50505050565b6040518060400160405280601381526020017f556e617574686f7269736564206163636573730000000000000000000000000081525081565b6040518060400160405280600d81526020017f496e76616c69642070726963650000000000000000000000000000000000000081525081565b6104e96108f8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461054d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105578282610900565b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600e81526020017f50726f63657373206661696c656400000000000000000000000000000000000081525081565b7f0e071082e8835e151107baeb3781cd9c05e5a89fda0b31203ab6c4fe9ab6053e81565b7f828634d95e775031b9ff576b159a8509d3053581a8c9c4d7d86899e0afcd882f81565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b7f2181c3a1e1946525e992f349aaf934d32ac0f996941711c8feead97c8903541281565b6000801b81565b7f32863739b48df1305798f7fcf52babbde2cbca78a222d5c3cafc17f2126a030481565b6040518060400160405280601281526020017f5265736f75726365206e6f7420666f756e64000000000000000000000000000081525081565b6106fe8261040a565b610707816107f3565b6107118383610900565b50505050565b6040518060400160405280601781526020017f5265736f7572636520616c72656164792065786973747300000000000000000081525081565b6040518060400160405280600e81526020017f496e76616c696420737472696e6700000000000000000000000000000000000081525081565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610804816107ff6108f8565b6109f2565b50565b60006108138383610603565b6108ed57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061088a6108f8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506108f2565b600090505b92915050565b600033905090565b600061090c8383610603565b156109e757600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506109846108f8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506109ec565b600090505b92915050565b6109fc8282610603565b610a3f5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401610a36929190610d69565b60405180910390fd5b5050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a7d81610a48565b8114610a8857600080fd5b50565b600081359050610a9a81610a74565b92915050565b600060208284031215610ab657610ab5610a43565b5b6000610ac484828501610a8b565b91505092915050565b60008115159050919050565b610ae281610acd565b82525050565b6000602082019050610afd6000830184610ad9565b92915050565b6000819050919050565b610b1681610b03565b8114610b2157600080fd5b50565b600081359050610b3381610b0d565b92915050565b600060208284031215610b4f57610b4e610a43565b5b6000610b5d84828501610b24565b91505092915050565b610b6f81610b03565b82525050565b6000602082019050610b8a6000830184610b66565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bbb82610b90565b9050919050565b610bcb81610bb0565b8114610bd657600080fd5b50565b600081359050610be881610bc2565b92915050565b60008060408385031215610c0557610c04610a43565b5b6000610c1385828601610b24565b9250506020610c2485828601610bd9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c68578082015181840152602081019050610c4d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c9082610c2e565b610c9a8185610c39565b9350610caa818560208601610c4a565b610cb381610c74565b840191505092915050565b60006020820190508181036000830152610cd88184610c85565b905092915050565b6000819050919050565b6000610d05610d00610cfb84610b90565b610ce0565b610b90565b9050919050565b6000610d1782610cea565b9050919050565b6000610d2982610d0c565b9050919050565b610d3981610d1e565b82525050565b6000602082019050610d546000830184610d30565b92915050565b610d6381610bb0565b82525050565b6000604082019050610d7e6000830185610d5a565b610d8b6020830184610b66565b939250505056fea2646970667358221220d48813047935c034223ab9024679ce644e7a2d236121da886e6b11a7c357da8464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5E0118B6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA720640E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA720640E EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xAD4FB5CD EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF22B9AB6 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xFC23413A EQ PUSH2 0x372 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x5E0118B6 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x8AEDA25A EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x980E3AF8 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2DE JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x34B89FB7 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x34B89FB7 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x362C3AB8 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x3E7A3E3E EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x5C107264 EQ PUSH2 0x236 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x2576BDEA EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x4A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x582 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25C PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27A PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x66D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0xBEE JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0xCBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x403 JUMPI POP PUSH2 0x402 DUP3 PUSH2 0x789 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B3781DB2A3808229E80877AA6761365508DEC12DD2E53E8AA88FA3D4EC3728E DUP2 JUMP JUMPDEST PUSH2 0x456 DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x45F DUP2 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x469 DUP4 DUP4 PUSH2 0x807 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x556E617574686F72697365642061636365737300000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420707269636500000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x4E9 PUSH2 0x8F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x557 DUP3 DUP3 PUSH2 0x900 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F63657373206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH32 0xE071082E8835E151107BAEB3781CD9C05E5A89FDA0B31203AB6C4FE9AB6053E DUP2 JUMP JUMPDEST PUSH32 0x828634D95E775031B9FF576B159A8509D3053581A8C9C4D7D86899E0AFCD882F DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2181C3A1E1946525E992F349AAF934D32AC0F996941711C8FEEAD97C89035412 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x32863739B48DF1305798F7FCF52BABBDE2CBCA78A222D5C3CAFC17F2126A0304 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F75726365206E6F7420666F756E640000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x6FE DUP3 PUSH2 0x40A JUMP JUMPDEST PUSH2 0x707 DUP2 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x711 DUP4 DUP4 PUSH2 0x900 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265736F7572636520616C726561647920657869737473000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E76616C696420737472696E67000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x804 DUP2 PUSH2 0x7FF PUSH2 0x8F8 JUMP JUMPDEST PUSH2 0x9F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 DUP4 DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x8ED JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x88A PUSH2 0x8F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90C DUP4 DUP4 PUSH2 0x603 JUMP JUMPDEST ISZERO PUSH2 0x9E7 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x984 PUSH2 0x8F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x9EC JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9FC DUP3 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH2 0xA3F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP3 SWAP2 SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7D DUP2 PUSH2 0xA48 JUMP JUMPDEST DUP2 EQ PUSH2 0xA88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA9A DUP2 PUSH2 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0xAB5 PUSH2 0xA43 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAC4 DUP5 DUP3 DUP6 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE2 DUP2 PUSH2 0xACD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAFD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB16 DUP2 PUSH2 0xB03 JUMP JUMPDEST DUP2 EQ PUSH2 0xB21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB33 DUP2 PUSH2 0xB0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0xA43 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB5D DUP5 DUP3 DUP6 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6F DUP2 PUSH2 0xB03 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBB DUP3 PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBCB DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE8 DUP2 PUSH2 0xBC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC05 JUMPI PUSH2 0xC04 PUSH2 0xA43 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC13 DUP6 DUP3 DUP7 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC24 DUP6 DUP3 DUP7 ADD PUSH2 0xBD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC68 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xC4D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC90 DUP3 PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xC9A DUP2 DUP6 PUSH2 0xC39 JUMP JUMPDEST SWAP4 POP PUSH2 0xCAA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xCB3 DUP2 PUSH2 0xC74 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCD8 DUP2 DUP5 PUSH2 0xC85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD05 PUSH2 0xD00 PUSH2 0xCFB DUP5 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0xB90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD17 DUP3 PUSH2 0xCEA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD29 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD39 DUP2 PUSH2 0xD1E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD54 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD63 DUP2 PUSH2 0xBB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD5A JUMP JUMPDEST PUSH2 0xD8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB66 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP9 SGT DIV PUSH26 0x35C034223AB9024679CE644E7A2D236121DA886E6B11A7C357DA DUP5 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"210:1070:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;421:70:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1012:72:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;743:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1091:30:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;944:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;581:74;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;271:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;341:74:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;497:78:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;877:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;662:75:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;809:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;3810:120::-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;421:70:27:-;463:28;421:70;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1012:72:27:-;;;;;;;;;;;;;;;;;;;:::o;743:60::-;;;;;;;;;;;;;;;;;;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1091:30:27:-;;;;;;;;;;;;;:::o;944:62::-;;;;;;;;;;;;;;;;;;;:::o;581:74::-;625:30;581:74;:::o;271:64::-;310:25;271:64;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;341:74:27:-;385:30;341:74;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;497:78:27:-;543:32;497:78;:::o;877:61::-;;;;;;;;;;;;;;;;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;662:75:27:-;;;;;;;;;;;;;;;;;;;:::o;809:62::-;;;;;;;;;;;;;;;;;;;:::o;763:146:20:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;3432:197::-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:29:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:60::-;4918:3;4939:5;4932:12;;4890:60;;;:::o;4956:142::-;5006:9;5039:53;5057:34;5066:24;5084:5;5066:24;:::i;:::-;5057:34;:::i;:::-;5039:53;:::i;:::-;5026:66;;4956:142;;;:::o;5104:134::-;5162:9;5195:37;5226:5;5195:37;:::i;:::-;5182:50;;5104:134;;;:::o;5244:162::-;5322:9;5355:45;5394:5;5355:45;:::i;:::-;5342:58;;5244:162;;;:::o;5412:187::-;5527:65;5586:5;5527:65;:::i;:::-;5522:3;5515:78;5412:187;;:::o;5605:278::-;5726:4;5764:2;5753:9;5749:18;5741:26;;5777:99;5873:1;5862:9;5858:17;5849:6;5777:99;:::i;:::-;5605:278;;;;:::o;5889:118::-;5976:24;5994:5;5976:24;:::i;:::-;5971:3;5964:37;5889:118;;:::o;6013:332::-;6134:4;6172:2;6161:9;6157:18;6149:26;;6185:71;6253:1;6242:9;6238:17;6229:6;6185:71;:::i;:::-;6266:72;6334:2;6323:9;6319:18;6310:6;6266:72;:::i;:::-;6013:332;;;;;:::o"},"methodIdentifiers":{"CREATOR_ROLE()":"8aeda25a","DEFAULT_ADMIN_ROLE()":"a217fddf","DEXA_CREATOR_ROLE()":"980e3af8","DEXA_FEEDS_ROLE()":"2576bdea","DEXA_MESSENGER_ROLE()":"a720640e","DEXA_STORAGE_ROLE()":"5e0118b6","ERROR_DUPLICATE_RESOURCE()":"f22b9ab6","ERROR_INVALID_PRICE()":"362c3ab8","ERROR_INVALID_STRING()":"fc23413a","ERROR_NOT_FOUND()":"ad4fb5cd","ERROR_PROCESS_FAILED()":"5c107264","ERROR_UNAUTHORISED_ACCESS()":"34b89fb7","dexaCreator()":"3e7a3e3e","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_dexaCreator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_CREATOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_FEEDS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_MESSENGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEXA_STORAGE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_DUPLICATE_RESOURCE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_INVALID_PRICE\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_INVALID_STRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_NOT_FOUND\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_PROCESS_FAILED\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERROR_UNAUTHORISED_ACCESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexaCreator\",\"outputs\":[{\"internalType\":\"contract DexaCreator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DexaMessenger.sol\":\"DexaMessenger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/DexaCreator.sol\":{\"keccak256\":\"0xcd6adb78ad750350703e4efc3a3693f10ef45924e49b7da9c0d21a132632c651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a7f78168eb0b09a581cc096baae4e2da4ba5e276f54d6b66a2f89d3e316c659\",\"dweb:/ipfs/QmdMo3HD3vtkyBLz3tLAGnXjuhvwW1oFXkakHtXXz6LbH8\"]},\"contracts/DexaMessenger.sol\":{\"keccak256\":\"0xadef09abf0bb895ec99cfdb5568486ca944598d52045704f7357e41c949b6c51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6bf2af028de902a6f1557f9f6eb9f719b42d999fb4cb7b189676cc67298e50\",\"dweb:/ipfs/QmZYZeyiAZGhDFDQxGwxLw4iUiae3MaHbxCiTrnZyYMtN8\"]}},\"version\":1}"}},"contracts/FeedsToken.sol":{"FeedsToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1496":{"entryPoint":null,"id":1496,"parameterSlots":1,"returnSlots":0},"@_4001":{"entryPoint":null,"id":4001,"parameterSlots":2,"returnSlots":0},"@_8432":{"entryPoint":null,"id":8432,"parameterSlots":0,"returnSlots":0},"@_860":{"entryPoint":null,"id":860,"parameterSlots":2,"returnSlots":0},"@_buildDomainSeparator_4048":{"entryPoint":618,"id":4048,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":711,"id":256,"parameterSlots":2,"returnSlots":1},"@_msgSender_1675":{"entryPoint":1197,"id":1675,"parameterSlots":0,"returnSlots":1},"@getStringSlot_2131":{"entryPoint":1080,"id":2131,"parameterSlots":1,"returnSlots":1},"@hasRole_80":{"entryPoint":1090,"id":80,"parameterSlots":2,"returnSlots":1},"@toShortStringWithFallback_1971":{"entryPoint":530,"id":1971,"parameterSlots":2,"returnSlots":1},"@toShortString_1873":{"entryPoint":971,"id":1873,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2166,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2080,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2354,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2097,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2183,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2419,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2466,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1363,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2455,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1205,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2276,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1684,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2146,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2070,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1499,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1645,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2505,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1519,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1839,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2293,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1384,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1310,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1809,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1509,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1777,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1263,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1216,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1559,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2482,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1400,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1764,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1617,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1413,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1569,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1612,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8813:29","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:29","statements":[{"nodeType":"YulAssignment","src":"77:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:29"},"nodeType":"YulFunctionCall","src":"87:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:29","type":""}],"src":"7:99:29"},{"body":{"nodeType":"YulBlock","src":"140:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:29"},"nodeType":"YulFunctionCall","src":"150:88:29"},"nodeType":"YulExpressionStatement","src":"150:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:29"},"nodeType":"YulFunctionCall","src":"247:15:29"},"nodeType":"YulExpressionStatement","src":"247:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:29"},"nodeType":"YulFunctionCall","src":"271:15:29"},"nodeType":"YulExpressionStatement","src":"271:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:29"},{"body":{"nodeType":"YulBlock","src":"326:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:29"},"nodeType":"YulFunctionCall","src":"336:88:29"},"nodeType":"YulExpressionStatement","src":"336:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:29"},"nodeType":"YulFunctionCall","src":"433:15:29"},"nodeType":"YulExpressionStatement","src":"433:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:29"},"nodeType":"YulFunctionCall","src":"457:15:29"},"nodeType":"YulExpressionStatement","src":"457:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:29"},{"body":{"nodeType":"YulBlock","src":"535:269:29","statements":[{"nodeType":"YulAssignment","src":"545:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:29"},"nodeType":"YulFunctionCall","src":"555:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:29"},"nodeType":"YulFunctionCall","src":"602:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:29","statements":[{"nodeType":"YulAssignment","src":"667:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:29"},"nodeType":"YulFunctionCall","src":"677:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:29"},"nodeType":"YulFunctionCall","src":"626:26:29"},"nodeType":"YulIf","src":"623:81:29"},{"body":{"nodeType":"YulBlock","src":"756:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:29"},"nodeType":"YulFunctionCall","src":"770:18:29"},"nodeType":"YulExpressionStatement","src":"770:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:29"},"nodeType":"YulFunctionCall","src":"740:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:29"},"nodeType":"YulFunctionCall","src":"717:38:29"},"nodeType":"YulIf","src":"714:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:29","type":""}],"src":"484:320:29"},{"body":{"nodeType":"YulBlock","src":"864:87:29","statements":[{"nodeType":"YulAssignment","src":"874:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:29"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:29","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:29"},"nodeType":"YulFunctionCall","src":"895:14:29"},"nodeType":"YulExpressionStatement","src":"895:14:29"},{"nodeType":"YulAssignment","src":"918:26:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:29"},"nodeType":"YulFunctionCall","src":"926:18:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:29"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:29","type":""}],"src":"810:141:29"},{"body":{"nodeType":"YulBlock","src":"1001:49:29","statements":[{"nodeType":"YulAssignment","src":"1011:33:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:29"},"nodeType":"YulFunctionCall","src":"1025:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:29","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:29"},"nodeType":"YulFunctionCall","src":"1021:23:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:29"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:29","type":""}],"src":"957:93:29"},{"body":{"nodeType":"YulBlock","src":"1109:54:29","statements":[{"nodeType":"YulAssignment","src":"1119:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:29"},"nodeType":"YulFunctionCall","src":"1140:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:29"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:29","type":""}],"src":"1056:107:29"},{"body":{"nodeType":"YulBlock","src":"1245:317:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:29","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:29","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:29"},"nodeType":"YulFunctionCall","src":"1272:18:29"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:29"},"nodeType":"YulFunctionCall","src":"1311:97:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:29","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:29","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:29"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:29"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:29"},"nodeType":"YulFunctionCall","src":"1429:39:29"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:29"}]},{"nodeType":"YulAssignment","src":"1477:30:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:29"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:29"},"nodeType":"YulFunctionCall","src":"1497:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:29"},"nodeType":"YulFunctionCall","src":"1486:21:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:29"}]},{"nodeType":"YulAssignment","src":"1516:40:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:29"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:29"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:29"},"nodeType":"YulFunctionCall","src":"1536:19:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:29"},"nodeType":"YulFunctionCall","src":"1526:30:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:29"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:29","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:29","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:29","type":""}],"src":"1169:393:29"},{"body":{"nodeType":"YulBlock","src":"1613:32:29","statements":[{"nodeType":"YulAssignment","src":"1623:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:29","type":""}],"src":"1568:77:29"},{"body":{"nodeType":"YulBlock","src":"1683:28:29","statements":[{"nodeType":"YulAssignment","src":"1693:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:29"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:29","type":""}],"src":"1651:60:29"},{"body":{"nodeType":"YulBlock","src":"1777:82:29","statements":[{"nodeType":"YulAssignment","src":"1787:66:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:29"},"nodeType":"YulFunctionCall","src":"1827:24:29"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:29"},"nodeType":"YulFunctionCall","src":"1818:34:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:29"},"nodeType":"YulFunctionCall","src":"1800:53:29"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:29"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:29","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:29","type":""}],"src":"1717:142:29"},{"body":{"nodeType":"YulBlock","src":"1912:28:29","statements":[{"nodeType":"YulAssignment","src":"1922:12:29","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:29"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:29","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:29","type":""}],"src":"1865:75:29"},{"body":{"nodeType":"YulBlock","src":"2022:193:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:29","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:29"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:29"},"nodeType":"YulFunctionCall","src":"2056:39:29"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:29"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:29"},"nodeType":"YulFunctionCall","src":"2145:11:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:29"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:29"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:29"},"nodeType":"YulFunctionCall","src":"2166:41:29"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:29"},"nodeType":"YulFunctionCall","src":"2117:91:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:29"},"nodeType":"YulFunctionCall","src":"2104:105:29"},"nodeType":"YulExpressionStatement","src":"2104:105:29"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:29","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:29","type":""}],"src":"1946:269:29"},{"body":{"nodeType":"YulBlock","src":"2270:24:29","statements":[{"nodeType":"YulAssignment","src":"2280:8:29","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:29","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:29"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:29","type":""}],"src":"2221:73:29"},{"body":{"nodeType":"YulBlock","src":"2353:136:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:29","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:29"},"nodeType":"YulFunctionCall","src":"2377:32:29"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:29"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:29"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:29"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:29"},"nodeType":"YulFunctionCall","src":"2418:65:29"},"nodeType":"YulExpressionStatement","src":"2418:65:29"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:29","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:29","type":""}],"src":"2300:189:29"},{"body":{"nodeType":"YulBlock","src":"2545:136:29","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:29","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:29","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:29"},"nodeType":"YulFunctionCall","src":"2626:39:29"},"nodeType":"YulExpressionStatement","src":"2626:39:29"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:29"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:29"},"nodeType":"YulFunctionCall","src":"2562:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:29","statements":[{"nodeType":"YulAssignment","src":"2579:22:29","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:29"},"nodeType":"YulFunctionCall","src":"2588:13:29"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:29"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:29","statements":[]},"src":"2555:120:29"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:29","type":""}],"src":"2495:186:29"},{"body":{"nodeType":"YulBlock","src":"2766:464:29","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:29"},"nodeType":"YulFunctionCall","src":"2822:38:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:29"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:29"},"nodeType":"YulFunctionCall","src":"2906:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:29"},"nodeType":"YulFunctionCall","src":"2892:44:29"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:29","statements":[{"nodeType":"YulAssignment","src":"3095:23:29","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:29"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:29"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:29"},"nodeType":"YulFunctionCall","src":"3074:18:29"},"nodeType":"YulIf","src":"3071:49:29"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:29"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:29"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:29"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:29"},"nodeType":"YulFunctionCall","src":"3189:22:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:29"},"nodeType":"YulFunctionCall","src":"3175:37:29"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:29"},"nodeType":"YulFunctionCall","src":"3133:80:29"},"nodeType":"YulExpressionStatement","src":"3133:80:29"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:29"},"nodeType":"YulFunctionCall","src":"2780:11:29"},"nodeType":"YulIf","src":"2777:446:29"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:29","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:29","type":""}],"src":"2687:543:29"},{"body":{"nodeType":"YulBlock","src":"3299:54:29","statements":[{"nodeType":"YulAssignment","src":"3309:37:29","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:29"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:29"},"nodeType":"YulFunctionCall","src":"3330:16:29"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:29"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:29","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:29","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:29","type":""}],"src":"3236:117:29"},{"body":{"nodeType":"YulBlock","src":"3410:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:29","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:29"},"nodeType":"YulFunctionCall","src":"3465:13:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:29","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:29"},"nodeType":"YulFunctionCall","src":"3480:6:29"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:29"},"nodeType":"YulFunctionCall","src":"3436:51:29"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:29"},"nodeType":"YulFunctionCall","src":"3432:56:29"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:29","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:29"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:29"},"nodeType":"YulFunctionCall","src":"3507:15:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:29"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:29","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:29","type":""}],"src":"3359:169:29"},{"body":{"nodeType":"YulBlock","src":"3614:214:29","statements":[{"nodeType":"YulAssignment","src":"3747:37:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:29"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:29"},"nodeType":"YulFunctionCall","src":"3755:29:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:29"}]},{"nodeType":"YulAssignment","src":"3793:29:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:29","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:29"},"nodeType":"YulFunctionCall","src":"3810:11:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:29"},"nodeType":"YulFunctionCall","src":"3801:21:29"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:29","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:29","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:29","type":""}],"src":"3533:295:29"},{"body":{"nodeType":"YulBlock","src":"3925:1303:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:29","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:29"},"nodeType":"YulFunctionCall","src":"3950:37:29"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:29"},"nodeType":"YulFunctionCall","src":"4074:18:29"},"nodeType":"YulExpressionStatement","src":"4074:18:29"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:29"},"nodeType":"YulFunctionCall","src":"4041:30:29"},"nodeType":"YulIf","src":"4038:56:29"},{"nodeType":"YulVariableDeclaration","src":"4104:52:29","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:29"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:29"},"nodeType":"YulFunctionCall","src":"4144:11:29"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:29"},"nodeType":"YulFunctionCall","src":"4118:38:29"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:29","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:29"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:29"},"nodeType":"YulFunctionCall","src":"4203:67:29"},"nodeType":"YulExpressionStatement","src":"4203:67:29"},{"nodeType":"YulVariableDeclaration","src":"4280:18:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:29","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:29"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:29","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:29","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:29"},"nodeType":"YulFunctionCall","src":"4413:9:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:29"},"nodeType":"YulFunctionCall","src":"4401:22:29"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:29","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:29"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:29"},"nodeType":"YulFunctionCall","src":"4451:37:29"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:29"},"nodeType":"YulFunctionCall","src":"4608:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:29"},"nodeType":"YulFunctionCall","src":"4602:26:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:29"},"nodeType":"YulFunctionCall","src":"4587:42:29"},"nodeType":"YulExpressionStatement","src":"4587:42:29"},{"nodeType":"YulAssignment","src":"4646:24:29","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:29"},"nodeType":"YulFunctionCall","src":"4656:14:29"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:29"}]},{"nodeType":"YulAssignment","src":"4687:31:29","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:29"},"nodeType":"YulFunctionCall","src":"4700:18:29"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:29"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:29"},"nodeType":"YulFunctionCall","src":"4532:14:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:29","statements":[{"nodeType":"YulAssignment","src":"4549:17:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:29"},"nodeType":"YulFunctionCall","src":"4554:12:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:29","statements":[]},"src":"4524:208:29"},{"body":{"nodeType":"YulBlock","src":"4768:156:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:29"},"nodeType":"YulFunctionCall","src":"4809:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:29"},"nodeType":"YulFunctionCall","src":"4803:26:29"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:29"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:29"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:29","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:29"},"nodeType":"YulFunctionCall","src":"4891:17:29"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:29"},"nodeType":"YulFunctionCall","src":"4861:48:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:29"},"nodeType":"YulFunctionCall","src":"4846:64:29"},"nodeType":"YulExpressionStatement","src":"4846:64:29"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:29"},"nodeType":"YulFunctionCall","src":"4748:19:29"},"nodeType":"YulIf","src":"4745:179:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:29"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:29","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:29"},"nodeType":"YulFunctionCall","src":"4954:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:29"},"nodeType":"YulFunctionCall","src":"4950:22:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:29"},"nodeType":"YulFunctionCall","src":"4937:36:29"},"nodeType":"YulExpressionStatement","src":"4937:36:29"}]},"nodeType":"YulCase","src":"4365:618:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:29","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:29","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:29","statements":[{"nodeType":"YulAssignment","src":"5069:35:29","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:29"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:29"},"nodeType":"YulFunctionCall","src":"5084:19:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:29"},"nodeType":"YulFunctionCall","src":"5078:26:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:29"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:29"},"nodeType":"YulIf","src":"5041:77:29"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:29"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:29"},"nodeType":"YulFunctionCall","src":"5144:67:29"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:29"},"nodeType":"YulFunctionCall","src":"5131:81:29"},"nodeType":"YulExpressionStatement","src":"5131:81:29"}]},"nodeType":"YulCase","src":"4992:230:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:29"},"nodeType":"YulFunctionCall","src":"4342:14:29"},"nodeType":"YulSwitch","src":"4335:887:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:29","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:29","type":""}],"src":"3833:1395:29"},{"body":{"nodeType":"YulBlock","src":"5279:32:29","statements":[{"nodeType":"YulAssignment","src":"5289:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5300:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:29","type":""}],"src":"5234:77:29"},{"body":{"nodeType":"YulBlock","src":"5382:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5399:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5422:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5404:17:29"},"nodeType":"YulFunctionCall","src":"5404:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5392:6:29"},"nodeType":"YulFunctionCall","src":"5392:37:29"},"nodeType":"YulExpressionStatement","src":"5392:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5370:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5377:3:29","type":""}],"src":"5317:118:29"},{"body":{"nodeType":"YulBlock","src":"5506:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5523:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5546:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5528:17:29"},"nodeType":"YulFunctionCall","src":"5528:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5516:6:29"},"nodeType":"YulFunctionCall","src":"5516:37:29"},"nodeType":"YulExpressionStatement","src":"5516:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5494:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5501:3:29","type":""}],"src":"5441:118:29"},{"body":{"nodeType":"YulBlock","src":"5610:81:29","statements":[{"nodeType":"YulAssignment","src":"5620:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5635:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"5642:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5631:3:29"},"nodeType":"YulFunctionCall","src":"5631:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5620:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5592:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5602:7:29","type":""}],"src":"5565:126:29"},{"body":{"nodeType":"YulBlock","src":"5742:51:29","statements":[{"nodeType":"YulAssignment","src":"5752:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5781:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5763:17:29"},"nodeType":"YulFunctionCall","src":"5763:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5752:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5734:7:29","type":""}],"src":"5697:96:29"},{"body":{"nodeType":"YulBlock","src":"5864:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5881:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5904:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5886:17:29"},"nodeType":"YulFunctionCall","src":"5886:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5874:6:29"},"nodeType":"YulFunctionCall","src":"5874:37:29"},"nodeType":"YulExpressionStatement","src":"5874:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5852:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5859:3:29","type":""}],"src":"5799:118:29"},{"body":{"nodeType":"YulBlock","src":"6133:454:29","statements":[{"nodeType":"YulAssignment","src":"6143:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6155:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6166:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6151:3:29"},"nodeType":"YulFunctionCall","src":"6151:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6143:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6224:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6237:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6248:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6233:3:29"},"nodeType":"YulFunctionCall","src":"6233:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6180:43:29"},"nodeType":"YulFunctionCall","src":"6180:71:29"},"nodeType":"YulExpressionStatement","src":"6180:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6305:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6318:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6329:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6314:3:29"},"nodeType":"YulFunctionCall","src":"6314:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6261:43:29"},"nodeType":"YulFunctionCall","src":"6261:72:29"},"nodeType":"YulExpressionStatement","src":"6261:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"6387:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6400:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6411:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6396:3:29"},"nodeType":"YulFunctionCall","src":"6396:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6343:43:29"},"nodeType":"YulFunctionCall","src":"6343:72:29"},"nodeType":"YulExpressionStatement","src":"6343:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"6469:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6482:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6493:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6478:3:29"},"nodeType":"YulFunctionCall","src":"6478:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6425:43:29"},"nodeType":"YulFunctionCall","src":"6425:72:29"},"nodeType":"YulExpressionStatement","src":"6425:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"6551:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6564:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6575:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6560:3:29"},"nodeType":"YulFunctionCall","src":"6560:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6507:43:29"},"nodeType":"YulFunctionCall","src":"6507:73:29"},"nodeType":"YulExpressionStatement","src":"6507:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6073:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6085:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6093:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6101:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6109:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6117:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6128:4:29","type":""}],"src":"5923:664:29"},{"body":{"nodeType":"YulBlock","src":"6689:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6706:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6711:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6699:6:29"},"nodeType":"YulFunctionCall","src":"6699:19:29"},"nodeType":"YulExpressionStatement","src":"6699:19:29"},{"nodeType":"YulAssignment","src":"6727:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6746:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"6751:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6742:3:29"},"nodeType":"YulFunctionCall","src":"6742:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6727:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6661:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6666:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6677:11:29","type":""}],"src":"6593:169:29"},{"body":{"nodeType":"YulBlock","src":"6830:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6840:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6849:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6844:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"6909:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6934:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"6939:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:29"},"nodeType":"YulFunctionCall","src":"6930:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6953:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"6958:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6949:3:29"},"nodeType":"YulFunctionCall","src":"6949:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6943:5:29"},"nodeType":"YulFunctionCall","src":"6943:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6923:6:29"},"nodeType":"YulFunctionCall","src":"6923:39:29"},"nodeType":"YulExpressionStatement","src":"6923:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6870:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"6873:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6867:2:29"},"nodeType":"YulFunctionCall","src":"6867:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6881:19:29","statements":[{"nodeType":"YulAssignment","src":"6883:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6892:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"6895:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6888:3:29"},"nodeType":"YulFunctionCall","src":"6888:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6883:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"6863:3:29","statements":[]},"src":"6859:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6992:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"6997:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:29"},"nodeType":"YulFunctionCall","src":"6988:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"7006:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6981:6:29"},"nodeType":"YulFunctionCall","src":"6981:27:29"},"nodeType":"YulExpressionStatement","src":"6981:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6812:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6817:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"6822:6:29","type":""}],"src":"6768:246:29"},{"body":{"nodeType":"YulBlock","src":"7068:54:29","statements":[{"nodeType":"YulAssignment","src":"7078:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7096:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7103:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7092:3:29"},"nodeType":"YulFunctionCall","src":"7092:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7112:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7108:3:29"},"nodeType":"YulFunctionCall","src":"7108:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7088:3:29"},"nodeType":"YulFunctionCall","src":"7088:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7078:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7051:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7061:6:29","type":""}],"src":"7020:102:29"},{"body":{"nodeType":"YulBlock","src":"7220:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7230:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7277:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7244:32:29"},"nodeType":"YulFunctionCall","src":"7244:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7234:6:29","type":""}]},{"nodeType":"YulAssignment","src":"7292:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7358:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7363:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7299:58:29"},"nodeType":"YulFunctionCall","src":"7299:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7292:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7418:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7425:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:29"},"nodeType":"YulFunctionCall","src":"7414:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"7432:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"7437:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7379:34:29"},"nodeType":"YulFunctionCall","src":"7379:65:29"},"nodeType":"YulExpressionStatement","src":"7379:65:29"},{"nodeType":"YulAssignment","src":"7453:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7464:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7491:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7469:21:29"},"nodeType":"YulFunctionCall","src":"7469:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7460:3:29"},"nodeType":"YulFunctionCall","src":"7460:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7453:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7201:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7208:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7216:3:29","type":""}],"src":"7128:377:29"},{"body":{"nodeType":"YulBlock","src":"7629:195:29","statements":[{"nodeType":"YulAssignment","src":"7639:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7651:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7662:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7647:3:29"},"nodeType":"YulFunctionCall","src":"7647:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7639:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7686:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7697:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7682:3:29"},"nodeType":"YulFunctionCall","src":"7682:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7705:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7711:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7701:3:29"},"nodeType":"YulFunctionCall","src":"7701:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7675:6:29"},"nodeType":"YulFunctionCall","src":"7675:47:29"},"nodeType":"YulExpressionStatement","src":"7675:47:29"},{"nodeType":"YulAssignment","src":"7731:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7803:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"7812:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7739:63:29"},"nodeType":"YulFunctionCall","src":"7739:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7731:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7601:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7613:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7624:4:29","type":""}],"src":"7511:313:29"},{"body":{"nodeType":"YulBlock","src":"7888:40:29","statements":[{"nodeType":"YulAssignment","src":"7899:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7915:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7909:5:29"},"nodeType":"YulFunctionCall","src":"7909:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7899:6:29"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7871:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7881:6:29","type":""}],"src":"7830:98:29"},{"body":{"nodeType":"YulBlock","src":"7990:60:29","statements":[{"nodeType":"YulAssignment","src":"8000:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8008:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8000:4:29"}]},{"nodeType":"YulAssignment","src":"8021:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8033:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8038:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8029:3:29"},"nodeType":"YulFunctionCall","src":"8029:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8021:4:29"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7977:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7985:4:29","type":""}],"src":"7934:116:29"},{"body":{"nodeType":"YulBlock","src":"8111:99:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8122:42:29","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8159:3:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8153:5:29"},"nodeType":"YulFunctionCall","src":"8153:10:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8135:17:29"},"nodeType":"YulFunctionCall","src":"8135:29:29"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8126:5:29","type":""}]},{"nodeType":"YulAssignment","src":"8174:29:29","value":{"name":"value","nodeType":"YulIdentifier","src":"8198:5:29"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8174:11:29"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8091:3:29","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"8099:11:29","type":""}],"src":"8056:154:29"},{"body":{"nodeType":"YulBlock","src":"8306:504:29","statements":[{"nodeType":"YulVariableDeclaration","src":"8317:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8363:5:29"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8331:31:29"},"nodeType":"YulFunctionCall","src":"8331:38:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8321:6:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8378:21:29","value":{"name":"array","nodeType":"YulIdentifier","src":"8394:5:29"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8382:8:29","type":""}]},{"nodeType":"YulAssignment","src":"8409:52:29","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8455:5:29"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8421:33:29"},"nodeType":"YulFunctionCall","src":"8421:40:29"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8409:8:29"}]},{"nodeType":"YulAssignment","src":"8471:44:29","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8506:8:29"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"8480:25:29"},"nodeType":"YulFunctionCall","src":"8480:35:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8471:5:29"}]},{"body":{"nodeType":"YulBlock","src":"8543:260:29","statements":[{"nodeType":"YulAssignment","src":"8557:236:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8587:5:29"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8654:1:29","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8661:2:29","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"8665:6:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8657:3:29"},"nodeType":"YulFunctionCall","src":"8657:15:29"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8650:3:29"},"nodeType":"YulFunctionCall","src":"8650:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"8695:66:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"8610:18:29"},"nodeType":"YulFunctionCall","src":"8610:169:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8566:3:29"},"nodeType":"YulFunctionCall","src":"8566:227:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8557:5:29"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8531:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"8539:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8528:2:29"},"nodeType":"YulFunctionCall","src":"8528:14:29"},"nodeType":"YulIf","src":"8525:278:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8290:5:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8300:5:29","type":""}],"src":"8216:594:29"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466565647320546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x466565647320546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4645454453000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x10F SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP POP POP PUSH3 0x128 PUSH1 0x6 DUP4 PUSH3 0x212 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x146 PUSH1 0x7 DUP3 PUSH3 0x212 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x185 PUSH3 0x26A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x1D8 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x20B PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH3 0x2C7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xA39 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x238 JUMPI PUSH3 0x230 DUP4 PUSH3 0x3CB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x264 JUMP JUMPDEST DUP3 PUSH3 0x24A DUP4 PUSH3 0x438 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x25B SWAP2 SWAP1 PUSH3 0x72F JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x2AC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2DB DUP4 DUP4 PUSH3 0x442 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3C0 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x35C PUSH3 0x4AD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x3C5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x41B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x412 SWAP2 SWAP1 PUSH3 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x429 SWAP1 PUSH3 0x9C9 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x537 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x54D JUMPI PUSH3 0x54C PUSH3 0x4EF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x5B7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x578 JUMP JUMPDEST PUSH3 0x5C3 DUP7 DUP4 PUSH3 0x578 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x610 PUSH3 0x60A PUSH3 0x604 DUP5 PUSH3 0x5DB JUMP JUMPDEST PUSH3 0x5E5 JUMP JUMPDEST PUSH3 0x5DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x62C DUP4 PUSH3 0x5EF JUMP JUMPDEST PUSH3 0x644 PUSH3 0x63B DUP3 PUSH3 0x617 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x585 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x65B PUSH3 0x64C JUMP JUMPDEST PUSH3 0x668 DUP2 DUP5 DUP5 PUSH3 0x621 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x690 JUMPI PUSH3 0x684 PUSH1 0x0 DUP3 PUSH3 0x651 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x66E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x6DF JUMPI PUSH3 0x6A9 DUP2 PUSH3 0x553 JUMP JUMPDEST PUSH3 0x6B4 DUP5 PUSH3 0x568 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x6C4 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x6DC PUSH3 0x6D3 DUP6 PUSH3 0x568 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x66D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x704 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x6E4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x71F DUP4 DUP4 PUSH3 0x6F1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x73A DUP3 PUSH3 0x4B5 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x756 JUMPI PUSH3 0x755 PUSH3 0x4C0 JUMP JUMPDEST JUMPDEST PUSH3 0x762 DUP3 SLOAD PUSH3 0x51E JUMP JUMPDEST PUSH3 0x76F DUP3 DUP3 DUP6 PUSH3 0x694 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7A7 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x792 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x79E DUP6 DUP3 PUSH3 0x711 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x80E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x7B7 DUP7 PUSH3 0x553 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x7E1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x7BA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x801 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x7FD PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x6F1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x82B DUP2 PUSH3 0x816 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x83C DUP2 PUSH3 0x5DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x86F DUP3 PUSH3 0x842 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x881 DUP2 PUSH3 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x89E PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8AD PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8BC PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x820 JUMP JUMPDEST PUSH3 0x8CB PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x831 JUMP JUMPDEST PUSH3 0x8DA PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x876 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x915 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8F8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93F DUP3 PUSH3 0x4B5 JUMP JUMPDEST PUSH3 0x94B DUP2 DUP6 PUSH3 0x8E4 JUMP JUMPDEST SWAP4 POP PUSH3 0x95D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8F5 JUMP JUMPDEST PUSH3 0x968 DUP2 PUSH3 0x921 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x98F DUP2 DUP5 PUSH3 0x932 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9C0 DUP3 MLOAD PUSH3 0x816 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9D6 DUP3 PUSH3 0x997 JUMP JUMPDEST DUP3 PUSH3 0x9E2 DUP5 PUSH3 0x9A2 JUMP JUMPDEST SWAP1 POP PUSH3 0x9EF DUP2 PUSH3 0x9B2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xA32 JUMPI PUSH3 0xA2D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x578 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2571 PUSH3 0xA94 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x11FF ADD MSTORE PUSH1 0x0 PUSH2 0x11C4 ADD MSTORE PUSH1 0x0 PUSH2 0x1765 ADD MSTORE PUSH1 0x0 PUSH2 0x1744 ADD MSTORE PUSH1 0x0 PUSH2 0xEC8 ADD MSTORE PUSH1 0x0 PUSH2 0xF1E ADD MSTORE PUSH1 0x0 PUSH2 0xF47 ADD MSTORE PUSH2 0x2571 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x497 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x223D JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x53A JUMPI POP PUSH2 0x539 DUP3 PUSH2 0xBB1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x550 SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57C SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5DE PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP PUSH2 0x5EB DUP2 DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x60B PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP6 DUP3 DUP6 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x623 DUP6 DUP6 DUP6 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x658 DUP3 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x661 DUP2 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x66B DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x691 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FF DUP3 DUP3 PUSH2 0xF7B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x72E DUP2 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x738 DUP4 DUP4 PUSH2 0x106E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74E PUSH2 0x748 PUSH2 0xC1B JUMP JUMPDEST DUP3 PUSH2 0x10F0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP3 PUSH2 0x7A5 PUSH2 0xC1B JUMP JUMPDEST DUP4 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x7B5 DUP3 DUP3 PUSH2 0x10F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 DUP3 PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7DF PUSH2 0x11BB JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x11F6 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x836 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8EF SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91B SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x968 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x968 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x984 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP PUSH2 0x991 DUP2 DUP6 DUP6 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x9E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xA10 DUP13 PUSH2 0x1231 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA26 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xA49 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA59 DUP3 DUP8 DUP8 DUP8 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xACD JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP3 SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD8 DUP11 DUP11 DUP11 PUSH2 0xC23 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xB11 DUP3 PUSH2 0x62F JUMP JUMPDEST PUSH2 0xB1A DUP2 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xB24 DUP4 DUP4 PUSH2 0xF7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC30 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCC4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCB4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDAE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB9 DUP4 DUP4 DUP4 PUSH2 0x14A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xDCA PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDE DUP4 DUP4 PUSH2 0x875 JUMP JUMPDEST PUSH2 0xEB9 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE56 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF40 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xF6D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xF75 PUSH2 0x171F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP4 DUP4 PUSH2 0x875 JUMP JUMPDEST ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1000 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EC PUSH1 0x0 DUP4 DUP4 PUSH2 0x14A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116E DUP3 PUSH1 0x0 DUP4 PUSH2 0x14A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11F1 PUSH1 0x6 PUSH32 0x0 PUSH2 0x17B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x122C PUSH1 0x7 PUSH32 0x0 PUSH2 0x17B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B PUSH2 0x1295 PUSH2 0xEC4 JUMP JUMPDEST DUP4 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x12B4 DUP9 DUP9 DUP9 DUP9 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12C4 DUP3 DUP3 PUSH2 0x199A JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1344 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AD SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14A3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x149A SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1587 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1617 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1664 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16C1 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x16D8 DUP3 DUP3 PUSH2 0x875 JUMP JUMPDEST PUSH2 0x171B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1712 SWAP3 SWAP2 SWAP1 PUSH2 0x244B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x179A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x17D2 JUMPI PUSH2 0x17CB DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP1 POP PUSH2 0x185F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x17DE SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x180A SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x182C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x183A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x18E6 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x190B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x192D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1981 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1990 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1AFA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19DB JUMPI PUSH2 0x19DA PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A91 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A88 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1AA4 JUMPI PUSH2 0x1AA3 PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AB7 JUMPI PUSH2 0x1AB6 PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1AF9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF0 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1B0B DUP4 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2A JUMPI PUSH2 0x1B29 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B5C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFC DUP2 PUSH2 0x1BC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C19 DUP2 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C35 JUMPI PUSH2 0x1C34 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C43 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C61 DUP2 PUSH2 0x1C4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP3 PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x1CEE DUP2 DUP6 PUSH2 0x1C8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1CFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1CC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2C DUP2 DUP5 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5F DUP3 PUSH2 0x1D34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6F DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8C DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA5 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DC2 DUP2 PUSH2 0x1D9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DED DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DFE DUP6 DUP3 DUP7 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E11 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E4B JUMPI PUSH2 0x1E4A PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E59 DUP7 DUP3 DUP8 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E6A DUP7 DUP3 DUP8 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E7B DUP7 DUP3 DUP8 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E98 DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB5 DUP2 PUSH2 0x1E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED1 JUMPI PUSH2 0x1ED0 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EDF DUP5 DUP3 DUP6 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF1 DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F29 JUMPI PUSH2 0x1F28 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F37 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F48 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F68 DUP2 PUSH2 0x1F52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FAD DUP5 DUP3 DUP6 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCC JUMPI PUSH2 0x1FCB PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP5 DUP3 DUP6 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2018 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2027 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2062 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2074 DUP4 DUP4 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2098 DUP3 PUSH2 0x202D JUMP JUMPDEST PUSH2 0x20A2 DUP2 DUP6 PUSH2 0x2038 JUMP JUMPDEST SWAP4 POP PUSH2 0x20AD DUP4 PUSH2 0x2049 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20DE JUMPI DUP2 MLOAD PUSH2 0x20C5 DUP9 DUP3 PUSH2 0x2068 JUMP JUMPDEST SWAP8 POP PUSH2 0x20D0 DUP4 PUSH2 0x2080 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2100 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x200F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2112 DUP2 DUP10 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2126 DUP2 DUP9 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2135 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x2142 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x214F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1EE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2161 DUP2 DUP5 PUSH2 0x208D JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2178 DUP2 PUSH2 0x1F52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2195 DUP2 PUSH2 0x216F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C8 DUP11 DUP3 DUP12 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x21D9 DUP11 DUP3 DUP12 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x21EA DUP11 DUP3 DUP12 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x21FB DUP11 DUP3 DUP12 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x220C DUP11 DUP3 DUP12 ADD PUSH2 0x2186 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x221D DUP11 DUP3 DUP12 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x222E DUP11 DUP3 DUP12 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2262 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2273 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22D7 JUMPI PUSH2 0x22D6 PUSH2 0x227D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2321 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x232E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x233B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x2348 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x2355 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x2362 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2382 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x238F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x23B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x23C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2422 DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x242D DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2445 JUMPI PUSH2 0x2444 PUSH2 0x23E8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2460 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x246D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2489 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x2496 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x24A3 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x24B0 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x24BD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24DC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x24E9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x24F6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x2503 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1EE8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x17F4EEABE00EDE3B8011E0B7908A7FA531314767471BCE6753BB SDIV 0xDB PUSH13 0x7D9C64736F6C63430008140033 ","sourceMap":"322:435:28:-:0;;;469:175;;;;;;;;;;1577:52:8;;;;;;;;;;;;;;;;;1616:4;3428:431:18;;;;;;;;;;;;;;;;;1582:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;3501:45:18;3532:13;3501:4;:30;;;;:45;;;;:::i;:::-;3493:53;;;;;;3567:51;3601:16;3567:7;:33;;;;:51;;;;:::i;:::-;3556:62;;;;;;3658:4;3642:22;;;;;;3628:36;;;;;;3707:7;3691:25;;;;;;3674:42;;;;;;3744:13;3727:30;;;;;;3792:23;:21;;;:23;;:::i;:::-;3767:48;;;;;;3847:4;3825:27;;;;;;;;;;3428:431;;1577:52:8;550:42:28::2;2232:4:0;561:18:28::0;::::2;581:10;550;;;:42;;:::i;:::-;;602:35;438:24;626:10;602;;;:35;;:::i;:::-;;322:435:::0;;2887:340:14;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4213:179:18:-;4268:7;2079:95;4326:11;;4339:14;;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;1708:286:14:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:15:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;7:99:29:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:77::-;5271:7;5300:5;5289:16;;5234:77;;;:::o;5317:118::-;5404:24;5422:5;5404:24;:::i;:::-;5399:3;5392:37;5317:118;;:::o;5441:::-;5528:24;5546:5;5528:24;:::i;:::-;5523:3;5516:37;5441:118;;:::o;5565:126::-;5602:7;5642:42;5635:5;5631:54;5620:65;;5565:126;;;:::o;5697:96::-;5734:7;5763:24;5781:5;5763:24;:::i;:::-;5752:35;;5697:96;;;:::o;5799:118::-;5886:24;5904:5;5886:24;:::i;:::-;5881:3;5874:37;5799:118;;:::o;5923:664::-;6128:4;6166:3;6155:9;6151:19;6143:27;;6180:71;6248:1;6237:9;6233:17;6224:6;6180:71;:::i;:::-;6261:72;6329:2;6318:9;6314:18;6305:6;6261:72;:::i;:::-;6343;6411:2;6400:9;6396:18;6387:6;6343:72;:::i;:::-;6425;6493:2;6482:9;6478:18;6469:6;6425:72;:::i;:::-;6507:73;6575:3;6564:9;6560:19;6551:6;6507:73;:::i;:::-;5923:664;;;;;;;;:::o;6593:169::-;6677:11;6711:6;6706:3;6699:19;6751:4;6746:3;6742:14;6727:29;;6593:169;;;;:::o;6768:246::-;6849:1;6859:113;6873:6;6870:1;6867:13;6859:113;;;6958:1;6953:3;6949:11;6943:18;6939:1;6934:3;6930:11;6923:39;6895:2;6892:1;6888:10;6883:15;;6859:113;;;7006:1;6997:6;6992:3;6988:16;6981:27;6830:184;6768:246;;;:::o;7020:102::-;7061:6;7112:2;7108:7;7103:2;7096:5;7092:14;7088:28;7078:38;;7020:102;;;:::o;7128:377::-;7216:3;7244:39;7277:5;7244:39;:::i;:::-;7299:71;7363:6;7358:3;7299:71;:::i;:::-;7292:78;;7379:65;7437:6;7432:3;7425:4;7418:5;7414:16;7379:65;:::i;:::-;7469:29;7491:6;7469:29;:::i;:::-;7464:3;7460:39;7453:46;;7220:285;7128:377;;;;:::o;7511:313::-;7624:4;7662:2;7651:9;7647:18;7639:26;;7711:9;7705:4;7701:20;7697:1;7686:9;7682:17;7675:47;7739:78;7812:4;7803:6;7739:78;:::i;:::-;7731:86;;7511:313;;;;:::o;7830:98::-;7881:6;7915:5;7909:12;7899:22;;7830:98;;;:::o;7934:116::-;7985:4;8008:3;8000:11;;8038:4;8033:3;8029:14;8021:22;;7934:116;;;:::o;8056:154::-;8099:11;8135:29;8159:3;8153:10;8135:29;:::i;:::-;8198:5;8174:29;;8111:99;8056:154;;;:::o;8216:594::-;8300:5;8331:38;8363:5;8331:38;:::i;:::-;8394:5;8421:40;8455:5;8421:40;:::i;:::-;8409:52;;8480:35;8506:8;8480:35;:::i;:::-;8471:44;;8539:2;8531:6;8528:14;8525:278;;;8610:169;8695:66;8665:6;8661:2;8657:15;8654:1;8650:23;8610:169;:::i;:::-;8587:5;8566:227;8557:236;;8525:278;8306:504;;8216:594;;;:::o;322:435:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_29":{"entryPoint":2418,"id":29,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1600":{"entryPoint":1658,"id":1600,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_8409":{"entryPoint":2788,"id":8409,"parameterSlots":0,"returnSlots":0},"@_EIP712Name_4118":{"entryPoint":4539,"id":4118,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_4130":{"entryPoint":4598,"id":4130,"parameterSlots":0,"returnSlots":1},"@_approve_1214":{"entryPoint":3107,"id":1214,"parameterSlots":3,"returnSlots":0},"@_approve_1274":{"entryPoint":4818,"id":1274,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_4048":{"entryPoint":5919,"id":4048,"parameterSlots":0,"returnSlots":1},"@_burn_1196":{"entryPoint":4336,"id":1196,"parameterSlots":2,"returnSlots":0},"@_checkRole_114":{"entryPoint":5838,"id":114,"parameterSlots":2,"returnSlots":0},"@_checkRole_93":{"entryPoint":3518,"id":93,"parameterSlots":1,"returnSlots":0},"@_domainSeparatorV4_4027":{"entryPoint":3780,"id":4027,"parameterSlots":0,"returnSlots":1},"@_grantRole_256":{"entryPoint":3538,"id":256,"parameterSlots":2,"returnSlots":1},"@_hashTypedDataV4_4064":{"entryPoint":4744,"id":4064,"parameterSlots":1,"returnSlots":1},"@_mint_1163":{"entryPoint":4206,"id":1163,"parameterSlots":2,"returnSlots":0},"@_msgSender_1675":{"entryPoint":3099,"id":1675,"parameterSlots":0,"returnSlots":1},"@_revokeRole_294":{"entryPoint":3963,"id":294,"parameterSlots":2,"returnSlots":1},"@_spendAllowance_1322":{"entryPoint":3125,"id":1322,"parameterSlots":3,"returnSlots":0},"@_throwError_3903":{"entryPoint":6554,"id":3903,"parameterSlots":2,"returnSlots":0},"@_transfer_1053":{"entryPoint":3274,"id":1053,"parameterSlots":3,"returnSlots":0},"@_update_1130":{"entryPoint":5289,"id":1130,"parameterSlots":3,"returnSlots":0},"@_useNonce_1735":{"entryPoint":4657,"id":1735,"parameterSlots":1,"returnSlots":1},"@allowance_950":{"entryPoint":2858,"id":950,"parameterSlots":2,"returnSlots":1},"@approve_974":{"entryPoint":1491,"id":974,"parameterSlots":2,"returnSlots":1},"@balanceOf_909":{"entryPoint":1873,"id":909,"parameterSlots":1,"returnSlots":1},"@burnFrom_1446":{"entryPoint":1945,"id":1446,"parameterSlots":2,"returnSlots":0},"@burn_1425":{"entryPoint":1853,"id":1425,"parameterSlots":1,"returnSlots":0},"@byteLength_1931":{"entryPoint":7026,"id":1931,"parameterSlots":1,"returnSlots":1},"@decimals_887":{"entryPoint":1649,"id":887,"parameterSlots":0,"returnSlots":1},"@eip712Domain_4106":{"entryPoint":1995,"id":4106,"parameterSlots":0,"returnSlots":7},"@getRoleAdmin_128":{"entryPoint":1583,"id":128,"parameterSlots":1,"returnSlots":1},"@grantRole_147":{"entryPoint":1615,"id":147,"parameterSlots":2,"returnSlots":0},"@hasRole_80":{"entryPoint":2165,"id":80,"parameterSlots":2,"returnSlots":1},"@mint_8448":{"entryPoint":1796,"id":8448,"parameterSlots":2,"returnSlots":0},"@name_869":{"entryPoint":1345,"id":869,"parameterSlots":0,"returnSlots":1},"@nonces_1590":{"entryPoint":1977,"id":1590,"parameterSlots":1,"returnSlots":1},"@nonces_1720":{"entryPoint":4466,"id":1720,"parameterSlots":1,"returnSlots":1},"@permit_1573":{"entryPoint":2460,"id":1573,"parameterSlots":7,"returnSlots":0},"@recover_3854":{"entryPoint":4770,"id":3854,"parameterSlots":4,"returnSlots":1},"@renounceRole_189":{"entryPoint":1673,"id":189,"parameterSlots":2,"returnSlots":0},"@revokeRole_166":{"entryPoint":2824,"id":166,"parameterSlots":2,"returnSlots":0},"@supportsInterface_4240":{"entryPoint":2993,"id":4240,"parameterSlots":1,"returnSlots":1},"@supportsInterface_62":{"entryPoint":1223,"id":62,"parameterSlots":1,"returnSlots":1},"@symbol_878":{"entryPoint":2272,"id":878,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_1998":{"entryPoint":6069,"id":1998,"parameterSlots":2,"returnSlots":1},"@toString_1899":{"entryPoint":6910,"id":1899,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_4216":{"entryPoint":6245,"id":4216,"parameterSlots":2,"returnSlots":1},"@totalSupply_896":{"entryPoint":1526,"id":896,"parameterSlots":0,"returnSlots":1},"@transferFrom_1006":{"entryPoint":1536,"id":1006,"parameterSlots":3,"returnSlots":1},"@transfer_933":{"entryPoint":2425,"id":933,"parameterSlots":2,"returnSlots":1},"@tryRecover_3818":{"entryPoint":6310,"id":3818,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":7549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7846,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7603,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":8582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8765,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7730,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":8603,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7624,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":7867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":7954,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7199,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8073,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8222,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7256,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":8207,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7912,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8281,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7688,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8031,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":9069,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":9291,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9110,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8427,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":8972,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":9332,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":9415,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8046,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8265,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8237,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7298,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8320,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8248,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7309,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9239,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7508,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7244,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":8163,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7813,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7476,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7570,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8018,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7326,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8876,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":9192,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9484,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8829,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8925,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7106,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7368,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":7526,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7823,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7155,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7580,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":8559,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17626:29","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:29","statements":[{"nodeType":"YulAssignment","src":"57:19:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:29"},"nodeType":"YulFunctionCall","src":"67:9:29"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:29"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:29","type":""}],"src":"7:75:29"},{"body":{"nodeType":"YulBlock","src":"177:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:29"},"nodeType":"YulFunctionCall","src":"187:12:29"},"nodeType":"YulExpressionStatement","src":"187:12:29"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:29"},{"body":{"nodeType":"YulBlock","src":"300:28:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:29"},"nodeType":"YulFunctionCall","src":"310:12:29"},"nodeType":"YulExpressionStatement","src":"310:12:29"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:29"},{"body":{"nodeType":"YulBlock","src":"378:105:29","statements":[{"nodeType":"YulAssignment","src":"388:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:29","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:29"},"nodeType":"YulFunctionCall","src":"399:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:29"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:29","type":""}],"src":"334:149:29"},{"body":{"nodeType":"YulBlock","src":"531:78:29","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:29"},"nodeType":"YulFunctionCall","src":"589:12:29"},"nodeType":"YulExpressionStatement","src":"589:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:29"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:29"},"nodeType":"YulFunctionCall","src":"561:23:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:29"},"nodeType":"YulFunctionCall","src":"551:34:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:29"},"nodeType":"YulFunctionCall","src":"544:42:29"},"nodeType":"YulIf","src":"541:62:29"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:29","type":""}],"src":"489:120:29"},{"body":{"nodeType":"YulBlock","src":"666:86:29","statements":[{"nodeType":"YulAssignment","src":"676:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:29"},"nodeType":"YulFunctionCall","src":"685:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:29"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:29"},"nodeType":"YulFunctionCall","src":"714:32:29"},"nodeType":"YulExpressionStatement","src":"714:32:29"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:29","type":""}],"src":"615:137:29"},{"body":{"nodeType":"YulBlock","src":"823:262:29","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:29"},"nodeType":"YulFunctionCall","src":"871:79:29"},"nodeType":"YulExpressionStatement","src":"871:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:29"},"nodeType":"YulFunctionCall","src":"840:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:29"},"nodeType":"YulFunctionCall","src":"836:32:29"},"nodeType":"YulIf","src":"833:119:29"},{"nodeType":"YulBlock","src":"962:116:29","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:29","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:29"},"nodeType":"YulFunctionCall","src":"1036:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:29"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:29"},"nodeType":"YulFunctionCall","src":"1016:52:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:29","type":""}],"src":"758:327:29"},{"body":{"nodeType":"YulBlock","src":"1133:48:29","statements":[{"nodeType":"YulAssignment","src":"1143:32:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:29"},"nodeType":"YulFunctionCall","src":"1161:13:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:29"},"nodeType":"YulFunctionCall","src":"1154:21:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:29"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:29","type":""}],"src":"1091:90:29"},{"body":{"nodeType":"YulBlock","src":"1246:50:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:29"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:29"},"nodeType":"YulFunctionCall","src":"1268:21:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:29"},"nodeType":"YulFunctionCall","src":"1256:34:29"},"nodeType":"YulExpressionStatement","src":"1256:34:29"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:29","type":""}],"src":"1187:109:29"},{"body":{"nodeType":"YulBlock","src":"1394:118:29","statements":[{"nodeType":"YulAssignment","src":"1404:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:29"},"nodeType":"YulFunctionCall","src":"1412:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:29"},"nodeType":"YulFunctionCall","src":"1487:17:29"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:29"},"nodeType":"YulFunctionCall","src":"1440:65:29"},"nodeType":"YulExpressionStatement","src":"1440:65:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:29","type":""}],"src":"1302:210:29"},{"body":{"nodeType":"YulBlock","src":"1577:40:29","statements":[{"nodeType":"YulAssignment","src":"1588:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:29"},"nodeType":"YulFunctionCall","src":"1598:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:29"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:29","type":""}],"src":"1518:99:29"},{"body":{"nodeType":"YulBlock","src":"1719:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:29"},"nodeType":"YulFunctionCall","src":"1729:19:29"},"nodeType":"YulExpressionStatement","src":"1729:19:29"},{"nodeType":"YulAssignment","src":"1757:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:29"},"nodeType":"YulFunctionCall","src":"1772:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:29"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:29","type":""}],"src":"1623:169:29"},{"body":{"nodeType":"YulBlock","src":"1860:184:29","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:29"},"nodeType":"YulFunctionCall","src":"1960:11:29"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:29"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:29"},"nodeType":"YulFunctionCall","src":"1979:11:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:29"},"nodeType":"YulFunctionCall","src":"1973:18:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:29"},"nodeType":"YulFunctionCall","src":"1953:39:29"},"nodeType":"YulExpressionStatement","src":"1953:39:29"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:29"},"nodeType":"YulFunctionCall","src":"1897:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:29","statements":[{"nodeType":"YulAssignment","src":"1913:15:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:29"},"nodeType":"YulFunctionCall","src":"1918:10:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:29","statements":[]},"src":"1889:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:29"},"nodeType":"YulFunctionCall","src":"2018:16:29"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:29"},"nodeType":"YulFunctionCall","src":"2011:27:29"},"nodeType":"YulExpressionStatement","src":"2011:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:29","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:29","type":""}],"src":"1798:246:29"},{"body":{"nodeType":"YulBlock","src":"2098:54:29","statements":[{"nodeType":"YulAssignment","src":"2108:38:29","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:29","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:29"},"nodeType":"YulFunctionCall","src":"2122:14:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:29","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:29"},"nodeType":"YulFunctionCall","src":"2138:7:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:29"},"nodeType":"YulFunctionCall","src":"2118:28:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:29"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:29","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:29","type":""}],"src":"2050:102:29"},{"body":{"nodeType":"YulBlock","src":"2250:285:29","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:29"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:29"},"nodeType":"YulFunctionCall","src":"2274:39:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:29","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:29"},"nodeType":"YulFunctionCall","src":"2329:71:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:29"},"nodeType":"YulFunctionCall","src":"2444:16:29"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:29"},"nodeType":"YulFunctionCall","src":"2409:65:29"},"nodeType":"YulExpressionStatement","src":"2409:65:29"},{"nodeType":"YulAssignment","src":"2483:46:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:29"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:29"},"nodeType":"YulFunctionCall","src":"2499:29:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:29"},"nodeType":"YulFunctionCall","src":"2490:39:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:29"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:29","type":""}],"src":"2158:377:29"},{"body":{"nodeType":"YulBlock","src":"2659:195:29","statements":[{"nodeType":"YulAssignment","src":"2669:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:29"},"nodeType":"YulFunctionCall","src":"2677:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:29"},"nodeType":"YulFunctionCall","src":"2712:17:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:29"},"nodeType":"YulFunctionCall","src":"2731:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:29"},"nodeType":"YulFunctionCall","src":"2705:47:29"},"nodeType":"YulExpressionStatement","src":"2705:47:29"},{"nodeType":"YulAssignment","src":"2761:86:29","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:29"},"nodeType":"YulFunctionCall","src":"2769:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:29","type":""}],"src":"2541:313:29"},{"body":{"nodeType":"YulBlock","src":"2905:81:29","statements":[{"nodeType":"YulAssignment","src":"2915:65:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2930:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"2937:42:29","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2926:3:29"},"nodeType":"YulFunctionCall","src":"2926:54:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:29"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:29","type":""}],"src":"2860:126:29"},{"body":{"nodeType":"YulBlock","src":"3037:51:29","statements":[{"nodeType":"YulAssignment","src":"3047:35:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3076:5:29"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3058:17:29"},"nodeType":"YulFunctionCall","src":"3058:24:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3047:7:29"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3019:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3029:7:29","type":""}],"src":"2992:96:29"},{"body":{"nodeType":"YulBlock","src":"3137:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3194:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3203:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3206:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3196:6:29"},"nodeType":"YulFunctionCall","src":"3196:12:29"},"nodeType":"YulExpressionStatement","src":"3196:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3185:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3167:17:29"},"nodeType":"YulFunctionCall","src":"3167:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3157:2:29"},"nodeType":"YulFunctionCall","src":"3157:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3150:6:29"},"nodeType":"YulFunctionCall","src":"3150:43:29"},"nodeType":"YulIf","src":"3147:63:29"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3130:5:29","type":""}],"src":"3094:122:29"},{"body":{"nodeType":"YulBlock","src":"3274:87:29","statements":[{"nodeType":"YulAssignment","src":"3284:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3306:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3293:12:29"},"nodeType":"YulFunctionCall","src":"3293:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3284:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3349:5:29"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3322:26:29"},"nodeType":"YulFunctionCall","src":"3322:33:29"},"nodeType":"YulExpressionStatement","src":"3322:33:29"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3252:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3260:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3268:5:29","type":""}],"src":"3222:139:29"},{"body":{"nodeType":"YulBlock","src":"3412:32:29","statements":[{"nodeType":"YulAssignment","src":"3422:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"3433:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3422:7:29"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3394:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3404:7:29","type":""}],"src":"3367:77:29"},{"body":{"nodeType":"YulBlock","src":"3493:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"3550:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3559:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3562:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3552:6:29"},"nodeType":"YulFunctionCall","src":"3552:12:29"},"nodeType":"YulExpressionStatement","src":"3552:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3516:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3541:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3523:17:29"},"nodeType":"YulFunctionCall","src":"3523:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3513:2:29"},"nodeType":"YulFunctionCall","src":"3513:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3506:6:29"},"nodeType":"YulFunctionCall","src":"3506:43:29"},"nodeType":"YulIf","src":"3503:63:29"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3486:5:29","type":""}],"src":"3450:122:29"},{"body":{"nodeType":"YulBlock","src":"3630:87:29","statements":[{"nodeType":"YulAssignment","src":"3640:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3662:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3649:12:29"},"nodeType":"YulFunctionCall","src":"3649:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3640:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3705:5:29"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3678:26:29"},"nodeType":"YulFunctionCall","src":"3678:33:29"},"nodeType":"YulExpressionStatement","src":"3678:33:29"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3608:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"3616:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3624:5:29","type":""}],"src":"3578:139:29"},{"body":{"nodeType":"YulBlock","src":"3806:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"3852:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3854:77:29"},"nodeType":"YulFunctionCall","src":"3854:79:29"},"nodeType":"YulExpressionStatement","src":"3854:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3827:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"3836:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3823:3:29"},"nodeType":"YulFunctionCall","src":"3823:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"3848:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3819:3:29"},"nodeType":"YulFunctionCall","src":"3819:32:29"},"nodeType":"YulIf","src":"3816:119:29"},{"nodeType":"YulBlock","src":"3945:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"3960:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3964:6:29","type":""}]},{"nodeType":"YulAssignment","src":"3989:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4024:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4035:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4020:3:29"},"nodeType":"YulFunctionCall","src":"4020:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4044:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3999:20:29"},"nodeType":"YulFunctionCall","src":"3999:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3989:6:29"}]}]},{"nodeType":"YulBlock","src":"4072:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4087:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4101:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4091:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4117:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4163:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:29"},"nodeType":"YulFunctionCall","src":"4148:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4172:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4127:20:29"},"nodeType":"YulFunctionCall","src":"4127:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4117:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3768:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3779:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3791:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3799:6:29","type":""}],"src":"3723:474:29"},{"body":{"nodeType":"YulBlock","src":"4268:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4285:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4308:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4290:17:29"},"nodeType":"YulFunctionCall","src":"4290:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4278:6:29"},"nodeType":"YulFunctionCall","src":"4278:37:29"},"nodeType":"YulExpressionStatement","src":"4278:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4256:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4263:3:29","type":""}],"src":"4203:118:29"},{"body":{"nodeType":"YulBlock","src":"4425:124:29","statements":[{"nodeType":"YulAssignment","src":"4435:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4447:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4458:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:29"},"nodeType":"YulFunctionCall","src":"4443:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4435:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4515:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4528:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"4539:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4524:3:29"},"nodeType":"YulFunctionCall","src":"4524:17:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4471:43:29"},"nodeType":"YulFunctionCall","src":"4471:71:29"},"nodeType":"YulExpressionStatement","src":"4471:71:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4397:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4409:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4420:4:29","type":""}],"src":"4327:222:29"},{"body":{"nodeType":"YulBlock","src":"4655:519:29","statements":[{"body":{"nodeType":"YulBlock","src":"4701:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4703:77:29"},"nodeType":"YulFunctionCall","src":"4703:79:29"},"nodeType":"YulExpressionStatement","src":"4703:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4676:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"4685:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4672:3:29"},"nodeType":"YulFunctionCall","src":"4672:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"4697:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4668:3:29"},"nodeType":"YulFunctionCall","src":"4668:32:29"},"nodeType":"YulIf","src":"4665:119:29"},{"nodeType":"YulBlock","src":"4794:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4809:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4823:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4813:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4838:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4873:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"4884:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4869:3:29"},"nodeType":"YulFunctionCall","src":"4869:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4893:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4848:20:29"},"nodeType":"YulFunctionCall","src":"4848:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4838:6:29"}]}]},{"nodeType":"YulBlock","src":"4921:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"4950:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4940:6:29","type":""}]},{"nodeType":"YulAssignment","src":"4966:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5012:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:29"},"nodeType":"YulFunctionCall","src":"4997:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5021:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4976:20:29"},"nodeType":"YulFunctionCall","src":"4976:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4966:6:29"}]}]},{"nodeType":"YulBlock","src":"5049:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5064:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5078:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5068:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5094:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5129:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5140:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5125:3:29"},"nodeType":"YulFunctionCall","src":"5125:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5149:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5104:20:29"},"nodeType":"YulFunctionCall","src":"5104:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5094:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4609:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4620:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4632:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4640:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4648:6:29","type":""}],"src":"4555:619:29"},{"body":{"nodeType":"YulBlock","src":"5225:32:29","statements":[{"nodeType":"YulAssignment","src":"5235:16:29","value":{"name":"value","nodeType":"YulIdentifier","src":"5246:5:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5235:7:29"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5207:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5217:7:29","type":""}],"src":"5180:77:29"},{"body":{"nodeType":"YulBlock","src":"5306:79:29","statements":[{"body":{"nodeType":"YulBlock","src":"5363:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5372:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5375:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5365:6:29"},"nodeType":"YulFunctionCall","src":"5365:12:29"},"nodeType":"YulExpressionStatement","src":"5365:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5329:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5354:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5336:17:29"},"nodeType":"YulFunctionCall","src":"5336:24:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5326:2:29"},"nodeType":"YulFunctionCall","src":"5326:35:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5319:6:29"},"nodeType":"YulFunctionCall","src":"5319:43:29"},"nodeType":"YulIf","src":"5316:63:29"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5299:5:29","type":""}],"src":"5263:122:29"},{"body":{"nodeType":"YulBlock","src":"5443:87:29","statements":[{"nodeType":"YulAssignment","src":"5453:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5462:12:29"},"nodeType":"YulFunctionCall","src":"5462:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5453:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5518:5:29"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5491:26:29"},"nodeType":"YulFunctionCall","src":"5491:33:29"},"nodeType":"YulExpressionStatement","src":"5491:33:29"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5421:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"5429:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5437:5:29","type":""}],"src":"5391:139:29"},{"body":{"nodeType":"YulBlock","src":"5602:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"5648:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5650:77:29"},"nodeType":"YulFunctionCall","src":"5650:79:29"},"nodeType":"YulExpressionStatement","src":"5650:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5623:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"5632:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5619:3:29"},"nodeType":"YulFunctionCall","src":"5619:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"5644:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5615:3:29"},"nodeType":"YulFunctionCall","src":"5615:32:29"},"nodeType":"YulIf","src":"5612:119:29"},{"nodeType":"YulBlock","src":"5741:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"5756:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"5770:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5760:6:29","type":""}]},{"nodeType":"YulAssignment","src":"5785:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5820:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"5831:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5816:3:29"},"nodeType":"YulFunctionCall","src":"5816:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5840:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5795:20:29"},"nodeType":"YulFunctionCall","src":"5795:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5785:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5572:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5583:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5595:6:29","type":""}],"src":"5536:329:29"},{"body":{"nodeType":"YulBlock","src":"5936:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5953:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5976:5:29"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5958:17:29"},"nodeType":"YulFunctionCall","src":"5958:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5946:6:29"},"nodeType":"YulFunctionCall","src":"5946:37:29"},"nodeType":"YulExpressionStatement","src":"5946:37:29"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5924:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5931:3:29","type":""}],"src":"5871:118:29"},{"body":{"nodeType":"YulBlock","src":"6093:124:29","statements":[{"nodeType":"YulAssignment","src":"6103:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6115:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6126:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6111:3:29"},"nodeType":"YulFunctionCall","src":"6111:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6103:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6183:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"6207:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:29"},"nodeType":"YulFunctionCall","src":"6192:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6139:43:29"},"nodeType":"YulFunctionCall","src":"6139:71:29"},"nodeType":"YulExpressionStatement","src":"6139:71:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6065:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6077:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6088:4:29","type":""}],"src":"5995:222:29"},{"body":{"nodeType":"YulBlock","src":"6306:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"6352:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6354:77:29"},"nodeType":"YulFunctionCall","src":"6354:79:29"},"nodeType":"YulExpressionStatement","src":"6354:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6327:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"6336:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6323:3:29"},"nodeType":"YulFunctionCall","src":"6323:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"6348:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6319:3:29"},"nodeType":"YulFunctionCall","src":"6319:32:29"},"nodeType":"YulIf","src":"6316:119:29"},{"nodeType":"YulBlock","src":"6445:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6460:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6474:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6464:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6489:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6524:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6535:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6520:3:29"},"nodeType":"YulFunctionCall","src":"6520:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6544:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6499:20:29"},"nodeType":"YulFunctionCall","src":"6499:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6489:6:29"}]}]},{"nodeType":"YulBlock","src":"6572:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"6587:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"6601:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6591:6:29","type":""}]},{"nodeType":"YulAssignment","src":"6617:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"6663:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6648:3:29"},"nodeType":"YulFunctionCall","src":"6648:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6672:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6627:20:29"},"nodeType":"YulFunctionCall","src":"6627:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6617:6:29"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6268:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6279:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6291:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6299:6:29","type":""}],"src":"6223:474:29"},{"body":{"nodeType":"YulBlock","src":"6746:43:29","statements":[{"nodeType":"YulAssignment","src":"6756:27:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6771:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"6778:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6767:3:29"},"nodeType":"YulFunctionCall","src":"6767:16:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6756:7:29"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6728:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6738:7:29","type":""}],"src":"6703:86:29"},{"body":{"nodeType":"YulBlock","src":"6856:51:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6873:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6894:5:29"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6878:15:29"},"nodeType":"YulFunctionCall","src":"6878:22:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6866:6:29"},"nodeType":"YulFunctionCall","src":"6866:35:29"},"nodeType":"YulExpressionStatement","src":"6866:35:29"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6844:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6851:3:29","type":""}],"src":"6795:112:29"},{"body":{"nodeType":"YulBlock","src":"7007:120:29","statements":[{"nodeType":"YulAssignment","src":"7017:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7029:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7040:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7025:3:29"},"nodeType":"YulFunctionCall","src":"7025:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7017:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7093:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7106:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"7117:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7102:3:29"},"nodeType":"YulFunctionCall","src":"7102:17:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"7053:39:29"},"nodeType":"YulFunctionCall","src":"7053:67:29"},"nodeType":"YulExpressionStatement","src":"7053:67:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6979:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6991:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7002:4:29","type":""}],"src":"6913:214:29"},{"body":{"nodeType":"YulBlock","src":"7199:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"7245:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7247:77:29"},"nodeType":"YulFunctionCall","src":"7247:79:29"},"nodeType":"YulExpressionStatement","src":"7247:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7220:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7229:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7216:3:29"},"nodeType":"YulFunctionCall","src":"7216:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7212:3:29"},"nodeType":"YulFunctionCall","src":"7212:32:29"},"nodeType":"YulIf","src":"7209:119:29"},{"nodeType":"YulBlock","src":"7338:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7353:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7367:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7357:6:29","type":""}]},{"nodeType":"YulAssignment","src":"7382:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7417:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7428:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:29"},"nodeType":"YulFunctionCall","src":"7413:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7437:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7392:20:29"},"nodeType":"YulFunctionCall","src":"7392:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7382:6:29"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7169:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7180:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7192:6:29","type":""}],"src":"7133:329:29"},{"body":{"nodeType":"YulBlock","src":"7534:263:29","statements":[{"body":{"nodeType":"YulBlock","src":"7580:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7582:77:29"},"nodeType":"YulFunctionCall","src":"7582:79:29"},"nodeType":"YulExpressionStatement","src":"7582:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7555:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"7564:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7551:3:29"},"nodeType":"YulFunctionCall","src":"7551:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"7576:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7547:3:29"},"nodeType":"YulFunctionCall","src":"7547:32:29"},"nodeType":"YulIf","src":"7544:119:29"},{"nodeType":"YulBlock","src":"7673:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"7688:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"7702:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7692:6:29","type":""}]},{"nodeType":"YulAssignment","src":"7717:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7752:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"7763:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7748:3:29"},"nodeType":"YulFunctionCall","src":"7748:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7772:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7727:20:29"},"nodeType":"YulFunctionCall","src":"7727:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7717:6:29"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7504:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7515:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7527:6:29","type":""}],"src":"7468:329:29"},{"body":{"nodeType":"YulBlock","src":"7847:105:29","statements":[{"nodeType":"YulAssignment","src":"7857:89:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7872:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"7879:66:29","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7868:3:29"},"nodeType":"YulFunctionCall","src":"7868:78:29"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7857:7:29"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7829:5:29","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7839:7:29","type":""}],"src":"7803:149:29"},{"body":{"nodeType":"YulBlock","src":"8021:52:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8038:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8060:5:29"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"8043:16:29"},"nodeType":"YulFunctionCall","src":"8043:23:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8031:6:29"},"nodeType":"YulFunctionCall","src":"8031:36:29"},"nodeType":"YulExpressionStatement","src":"8031:36:29"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8009:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8016:3:29","type":""}],"src":"7958:115:29"},{"body":{"nodeType":"YulBlock","src":"8144:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8161:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8184:5:29"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8166:17:29"},"nodeType":"YulFunctionCall","src":"8166:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8154:6:29"},"nodeType":"YulFunctionCall","src":"8154:37:29"},"nodeType":"YulExpressionStatement","src":"8154:37:29"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8132:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8139:3:29","type":""}],"src":"8079:118:29"},{"body":{"nodeType":"YulBlock","src":"8277:40:29","statements":[{"nodeType":"YulAssignment","src":"8288:22:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8304:5:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8298:5:29"},"nodeType":"YulFunctionCall","src":"8298:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8288:6:29"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8260:5:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8270:6:29","type":""}],"src":"8203:114:29"},{"body":{"nodeType":"YulBlock","src":"8434:73:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8451:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"8456:6:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8444:6:29"},"nodeType":"YulFunctionCall","src":"8444:19:29"},"nodeType":"YulExpressionStatement","src":"8444:19:29"},{"nodeType":"YulAssignment","src":"8472:29:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8491:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8496:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8487:3:29"},"nodeType":"YulFunctionCall","src":"8487:14:29"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8472:11:29"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8406:3:29","type":""},{"name":"length","nodeType":"YulTypedName","src":"8411:6:29","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8422:11:29","type":""}],"src":"8323:184:29"},{"body":{"nodeType":"YulBlock","src":"8585:60:29","statements":[{"nodeType":"YulAssignment","src":"8595:11:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8603:3:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8595:4:29"}]},{"nodeType":"YulAssignment","src":"8616:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8628:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8633:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8624:3:29"},"nodeType":"YulFunctionCall","src":"8624:14:29"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8616:4:29"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8572:3:29","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8580:4:29","type":""}],"src":"8513:132:29"},{"body":{"nodeType":"YulBlock","src":"8706:53:29","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8723:3:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8746:5:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8728:17:29"},"nodeType":"YulFunctionCall","src":"8728:24:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8716:6:29"},"nodeType":"YulFunctionCall","src":"8716:37:29"},"nodeType":"YulExpressionStatement","src":"8716:37:29"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8694:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8701:3:29","type":""}],"src":"8651:108:29"},{"body":{"nodeType":"YulBlock","src":"8845:99:29","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8889:6:29"},{"name":"pos","nodeType":"YulIdentifier","src":"8897:3:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8855:33:29"},"nodeType":"YulFunctionCall","src":"8855:46:29"},"nodeType":"YulExpressionStatement","src":"8855:46:29"},{"nodeType":"YulAssignment","src":"8910:28:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8928:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"8933:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8924:3:29"},"nodeType":"YulFunctionCall","src":"8924:14:29"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"8910:10:29"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"8818:6:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8826:3:29","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"8834:10:29","type":""}],"src":"8765:179:29"},{"body":{"nodeType":"YulBlock","src":"9025:38:29","statements":[{"nodeType":"YulAssignment","src":"9035:22:29","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9047:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"9052:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9043:3:29"},"nodeType":"YulFunctionCall","src":"9043:14:29"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9035:4:29"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9012:3:29","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9020:4:29","type":""}],"src":"8950:113:29"},{"body":{"nodeType":"YulBlock","src":"9223:608:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9233:68:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9295:5:29"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9247:47:29"},"nodeType":"YulFunctionCall","src":"9247:54:29"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9237:6:29","type":""}]},{"nodeType":"YulAssignment","src":"9310:93:29","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9391:3:29"},{"name":"length","nodeType":"YulIdentifier","src":"9396:6:29"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9317:73:29"},"nodeType":"YulFunctionCall","src":"9317:86:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9310:3:29"}]},{"nodeType":"YulVariableDeclaration","src":"9412:71:29","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9477:5:29"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9427:49:29"},"nodeType":"YulFunctionCall","src":"9427:56:29"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9416:7:29","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9492:21:29","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9506:7:29"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9496:6:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"9582:224:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9596:34:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9623:6:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9617:5:29"},"nodeType":"YulFunctionCall","src":"9617:13:29"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9600:13:29","type":""}]},{"nodeType":"YulAssignment","src":"9643:70:29","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9694:13:29"},{"name":"pos","nodeType":"YulIdentifier","src":"9709:3:29"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9650:43:29"},"nodeType":"YulFunctionCall","src":"9650:63:29"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9643:3:29"}]},{"nodeType":"YulAssignment","src":"9726:70:29","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9789:6:29"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9736:52:29"},"nodeType":"YulFunctionCall","src":"9736:60:29"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9726:6:29"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9544:1:29"},{"name":"length","nodeType":"YulIdentifier","src":"9547:6:29"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9541:2:29"},"nodeType":"YulFunctionCall","src":"9541:13:29"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9555:18:29","statements":[{"nodeType":"YulAssignment","src":"9557:14:29","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9566:1:29"},{"kind":"number","nodeType":"YulLiteral","src":"9569:1:29","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9562:3:29"},"nodeType":"YulFunctionCall","src":"9562:9:29"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9557:1:29"}]}]},"pre":{"nodeType":"YulBlock","src":"9526:14:29","statements":[{"nodeType":"YulVariableDeclaration","src":"9528:10:29","value":{"kind":"number","nodeType":"YulLiteral","src":"9537:1:29","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9532:1:29","type":""}]}]},"src":"9522:284:29"},{"nodeType":"YulAssignment","src":"9815:10:29","value":{"name":"pos","nodeType":"YulIdentifier","src":"9822:3:29"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9815:3:29"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9202:5:29","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9209:3:29","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9218:3:29","type":""}],"src":"9099:732:29"},{"body":{"nodeType":"YulBlock","src":"10191:861:29","statements":[{"nodeType":"YulAssignment","src":"10201:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10213:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10224:3:29","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10209:3:29"},"nodeType":"YulFunctionCall","src":"10209:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10201:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10280:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10293:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10304:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10289:3:29"},"nodeType":"YulFunctionCall","src":"10289:17:29"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"10238:41:29"},"nodeType":"YulFunctionCall","src":"10238:69:29"},"nodeType":"YulExpressionStatement","src":"10238:69:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10328:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10339:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10324:3:29"},"nodeType":"YulFunctionCall","src":"10324:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10348:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10354:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10344:3:29"},"nodeType":"YulFunctionCall","src":"10344:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10317:6:29"},"nodeType":"YulFunctionCall","src":"10317:48:29"},"nodeType":"YulExpressionStatement","src":"10317:48:29"},{"nodeType":"YulAssignment","src":"10374:86:29","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10446:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"10455:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10382:63:29"},"nodeType":"YulFunctionCall","src":"10382:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10374:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10481:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10492:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10477:3:29"},"nodeType":"YulFunctionCall","src":"10477:18:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10501:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10507:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10497:3:29"},"nodeType":"YulFunctionCall","src":"10497:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10470:6:29"},"nodeType":"YulFunctionCall","src":"10470:48:29"},"nodeType":"YulExpressionStatement","src":"10470:48:29"},{"nodeType":"YulAssignment","src":"10527:86:29","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10599:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"10608:4:29"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10535:63:29"},"nodeType":"YulFunctionCall","src":"10535:78:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10527:4:29"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10667:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10680:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10691:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10676:3:29"},"nodeType":"YulFunctionCall","src":"10676:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10623:43:29"},"nodeType":"YulFunctionCall","src":"10623:72:29"},"nodeType":"YulExpressionStatement","src":"10623:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"10749:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10762:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10773:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10758:3:29"},"nodeType":"YulFunctionCall","src":"10758:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10705:43:29"},"nodeType":"YulFunctionCall","src":"10705:73:29"},"nodeType":"YulExpressionStatement","src":"10705:73:29"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10832:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10845:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10856:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10841:3:29"},"nodeType":"YulFunctionCall","src":"10841:19:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"10788:43:29"},"nodeType":"YulFunctionCall","src":"10788:73:29"},"nodeType":"YulExpressionStatement","src":"10788:73:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10882:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"10893:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10878:3:29"},"nodeType":"YulFunctionCall","src":"10878:19:29"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10903:4:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"10909:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10899:3:29"},"nodeType":"YulFunctionCall","src":"10899:20:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10871:6:29"},"nodeType":"YulFunctionCall","src":"10871:49:29"},"nodeType":"YulExpressionStatement","src":"10871:49:29"},{"nodeType":"YulAssignment","src":"10929:116:29","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"11031:6:29"},{"name":"tail","nodeType":"YulIdentifier","src":"11040:4:29"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10937:93:29"},"nodeType":"YulFunctionCall","src":"10937:108:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10929:4:29"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10115:9:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"10127:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10135:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10143:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10151:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10159:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10167:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10175:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10186:4:29","type":""}],"src":"9837:1215:29"},{"body":{"nodeType":"YulBlock","src":"11099:77:29","statements":[{"body":{"nodeType":"YulBlock","src":"11154:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11163:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11166:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11156:6:29"},"nodeType":"YulFunctionCall","src":"11156:12:29"},"nodeType":"YulExpressionStatement","src":"11156:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11122:5:29"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11145:5:29"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"11129:15:29"},"nodeType":"YulFunctionCall","src":"11129:22:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11119:2:29"},"nodeType":"YulFunctionCall","src":"11119:33:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11112:6:29"},"nodeType":"YulFunctionCall","src":"11112:41:29"},"nodeType":"YulIf","src":"11109:61:29"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11092:5:29","type":""}],"src":"11058:118:29"},{"body":{"nodeType":"YulBlock","src":"11232:85:29","statements":[{"nodeType":"YulAssignment","src":"11242:29:29","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11264:6:29"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11251:12:29"},"nodeType":"YulFunctionCall","src":"11251:20:29"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11242:5:29"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11305:5:29"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"11280:24:29"},"nodeType":"YulFunctionCall","src":"11280:31:29"},"nodeType":"YulExpressionStatement","src":"11280:31:29"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11210:6:29","type":""},{"name":"end","nodeType":"YulTypedName","src":"11218:3:29","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11226:5:29","type":""}],"src":"11182:135:29"},{"body":{"nodeType":"YulBlock","src":"11489:1033:29","statements":[{"body":{"nodeType":"YulBlock","src":"11536:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11538:77:29"},"nodeType":"YulFunctionCall","src":"11538:79:29"},"nodeType":"YulExpressionStatement","src":"11538:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11510:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"11519:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11506:3:29"},"nodeType":"YulFunctionCall","src":"11506:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"11531:3:29","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11502:3:29"},"nodeType":"YulFunctionCall","src":"11502:33:29"},"nodeType":"YulIf","src":"11499:120:29"},{"nodeType":"YulBlock","src":"11629:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11644:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11658:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11648:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11673:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11708:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11719:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11704:3:29"},"nodeType":"YulFunctionCall","src":"11704:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11728:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11683:20:29"},"nodeType":"YulFunctionCall","src":"11683:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11673:6:29"}]}]},{"nodeType":"YulBlock","src":"11756:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11771:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11785:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11775:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11801:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11836:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11847:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11832:3:29"},"nodeType":"YulFunctionCall","src":"11832:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11856:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11811:20:29"},"nodeType":"YulFunctionCall","src":"11811:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11801:6:29"}]}]},{"nodeType":"YulBlock","src":"11884:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"11899:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"11913:2:29","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11903:6:29","type":""}]},{"nodeType":"YulAssignment","src":"11929:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11964:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"11975:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11960:3:29"},"nodeType":"YulFunctionCall","src":"11960:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11984:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11939:20:29"},"nodeType":"YulFunctionCall","src":"11939:53:29"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11929:6:29"}]}]},{"nodeType":"YulBlock","src":"12012:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12027:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12041:2:29","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12031:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12057:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12092:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12103:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12088:3:29"},"nodeType":"YulFunctionCall","src":"12088:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12112:7:29"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12067:20:29"},"nodeType":"YulFunctionCall","src":"12067:53:29"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12057:6:29"}]}]},{"nodeType":"YulBlock","src":"12140:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12155:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12169:3:29","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12159:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12186:61:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12219:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12230:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12215:3:29"},"nodeType":"YulFunctionCall","src":"12215:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12239:7:29"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"12196:18:29"},"nodeType":"YulFunctionCall","src":"12196:51:29"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12186:6:29"}]}]},{"nodeType":"YulBlock","src":"12267:119:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12282:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12296:3:29","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12286:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12313:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12348:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12359:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12344:3:29"},"nodeType":"YulFunctionCall","src":"12344:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12368:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12323:20:29"},"nodeType":"YulFunctionCall","src":"12323:53:29"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"12313:6:29"}]}]},{"nodeType":"YulBlock","src":"12396:119:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12411:17:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12425:3:29","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12415:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12442:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12488:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:29"},"nodeType":"YulFunctionCall","src":"12473:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12497:7:29"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12452:20:29"},"nodeType":"YulFunctionCall","src":"12452:53:29"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"12442:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11411:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11422:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11434:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11442:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11450:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11458:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11466:6:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11474:6:29","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11482:6:29","type":""}],"src":"11323:1199:29"},{"body":{"nodeType":"YulBlock","src":"12611:391:29","statements":[{"body":{"nodeType":"YulBlock","src":"12657:83:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12659:77:29"},"nodeType":"YulFunctionCall","src":"12659:79:29"},"nodeType":"YulExpressionStatement","src":"12659:79:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12632:7:29"},{"name":"headStart","nodeType":"YulIdentifier","src":"12641:9:29"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12628:3:29"},"nodeType":"YulFunctionCall","src":"12628:23:29"},{"kind":"number","nodeType":"YulLiteral","src":"12653:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12624:3:29"},"nodeType":"YulFunctionCall","src":"12624:32:29"},"nodeType":"YulIf","src":"12621:119:29"},{"nodeType":"YulBlock","src":"12750:117:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12765:15:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12779:1:29","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12769:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12794:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12829:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12840:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12825:3:29"},"nodeType":"YulFunctionCall","src":"12825:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12849:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12804:20:29"},"nodeType":"YulFunctionCall","src":"12804:53:29"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12794:6:29"}]}]},{"nodeType":"YulBlock","src":"12877:118:29","statements":[{"nodeType":"YulVariableDeclaration","src":"12892:16:29","value":{"kind":"number","nodeType":"YulLiteral","src":"12906:2:29","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12896:6:29","type":""}]},{"nodeType":"YulAssignment","src":"12922:63:29","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12957:9:29"},{"name":"offset","nodeType":"YulIdentifier","src":"12968:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12953:3:29"},"nodeType":"YulFunctionCall","src":"12953:22:29"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12977:7:29"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12932:20:29"},"nodeType":"YulFunctionCall","src":"12932:53:29"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12922:6:29"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12573:9:29","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12584:7:29","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12596:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12604:6:29","type":""}],"src":"12528:474:29"},{"body":{"nodeType":"YulBlock","src":"13036:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13053:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13056:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13046:6:29"},"nodeType":"YulFunctionCall","src":"13046:88:29"},"nodeType":"YulExpressionStatement","src":"13046:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13150:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13153:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13143:6:29"},"nodeType":"YulFunctionCall","src":"13143:15:29"},"nodeType":"YulExpressionStatement","src":"13143:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13174:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13177:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13167:6:29"},"nodeType":"YulFunctionCall","src":"13167:15:29"},"nodeType":"YulExpressionStatement","src":"13167:15:29"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13008:180:29"},{"body":{"nodeType":"YulBlock","src":"13245:269:29","statements":[{"nodeType":"YulAssignment","src":"13255:22:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13269:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"13275:1:29","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13265:3:29"},"nodeType":"YulFunctionCall","src":"13265:12:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13255:6:29"}]},{"nodeType":"YulVariableDeclaration","src":"13286:38:29","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13316:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"13322:1:29","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13312:3:29"},"nodeType":"YulFunctionCall","src":"13312:12:29"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13290:18:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"13363:51:29","statements":[{"nodeType":"YulAssignment","src":"13377:27:29","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13391:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13399:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13387:3:29"},"nodeType":"YulFunctionCall","src":"13387:17:29"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13377:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13343:18:29"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13336:6:29"},"nodeType":"YulFunctionCall","src":"13336:26:29"},"nodeType":"YulIf","src":"13333:81:29"},{"body":{"nodeType":"YulBlock","src":"13466:42:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13480:16:29"},"nodeType":"YulFunctionCall","src":"13480:18:29"},"nodeType":"YulExpressionStatement","src":"13480:18:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13430:18:29"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13453:6:29"},{"kind":"number","nodeType":"YulLiteral","src":"13461:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13450:2:29"},"nodeType":"YulFunctionCall","src":"13450:14:29"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13427:2:29"},"nodeType":"YulFunctionCall","src":"13427:38:29"},"nodeType":"YulIf","src":"13424:84:29"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13229:4:29","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13238:6:29","type":""}],"src":"13194:320:29"},{"body":{"nodeType":"YulBlock","src":"13548:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13565:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13568:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13558:6:29"},"nodeType":"YulFunctionCall","src":"13558:88:29"},"nodeType":"YulExpressionStatement","src":"13558:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13662:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13665:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13655:6:29"},"nodeType":"YulFunctionCall","src":"13655:15:29"},"nodeType":"YulExpressionStatement","src":"13655:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13686:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13689:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13679:6:29"},"nodeType":"YulFunctionCall","src":"13679:15:29"},"nodeType":"YulExpressionStatement","src":"13679:15:29"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13520:180:29"},{"body":{"nodeType":"YulBlock","src":"13944:537:29","statements":[{"nodeType":"YulAssignment","src":"13954:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13966:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"13977:3:29","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13962:3:29"},"nodeType":"YulFunctionCall","src":"13962:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13954:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14035:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14048:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14059:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14044:3:29"},"nodeType":"YulFunctionCall","src":"14044:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"13991:43:29"},"nodeType":"YulFunctionCall","src":"13991:71:29"},"nodeType":"YulExpressionStatement","src":"13991:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14116:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14129:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14140:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14125:3:29"},"nodeType":"YulFunctionCall","src":"14125:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14072:43:29"},"nodeType":"YulFunctionCall","src":"14072:72:29"},"nodeType":"YulExpressionStatement","src":"14072:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14198:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14211:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14222:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14207:3:29"},"nodeType":"YulFunctionCall","src":"14207:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14154:43:29"},"nodeType":"YulFunctionCall","src":"14154:72:29"},"nodeType":"YulExpressionStatement","src":"14154:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14280:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14293:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14304:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14289:3:29"},"nodeType":"YulFunctionCall","src":"14289:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14236:43:29"},"nodeType":"YulFunctionCall","src":"14236:72:29"},"nodeType":"YulExpressionStatement","src":"14236:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"14362:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14375:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14386:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14371:3:29"},"nodeType":"YulFunctionCall","src":"14371:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14318:43:29"},"nodeType":"YulFunctionCall","src":"14318:73:29"},"nodeType":"YulExpressionStatement","src":"14318:73:29"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"14445:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14458:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14469:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14454:3:29"},"nodeType":"YulFunctionCall","src":"14454:19:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14401:43:29"},"nodeType":"YulFunctionCall","src":"14401:73:29"},"nodeType":"YulExpressionStatement","src":"14401:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13876:9:29","type":""},{"name":"value5","nodeType":"YulTypedName","src":"13888:6:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13896:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13904:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13912:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13920:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13928:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13939:4:29","type":""}],"src":"13706:775:29"},{"body":{"nodeType":"YulBlock","src":"14613:206:29","statements":[{"nodeType":"YulAssignment","src":"14623:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14635:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14646:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14631:3:29"},"nodeType":"YulFunctionCall","src":"14631:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14623:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14703:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14716:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14727:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14712:3:29"},"nodeType":"YulFunctionCall","src":"14712:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14659:43:29"},"nodeType":"YulFunctionCall","src":"14659:71:29"},"nodeType":"YulExpressionStatement","src":"14659:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14784:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14797:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"14808:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14793:3:29"},"nodeType":"YulFunctionCall","src":"14793:18:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14740:43:29"},"nodeType":"YulFunctionCall","src":"14740:72:29"},"nodeType":"YulExpressionStatement","src":"14740:72:29"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14577:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14589:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14597:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14608:4:29","type":""}],"src":"14487:332:29"},{"body":{"nodeType":"YulBlock","src":"14979:288:29","statements":[{"nodeType":"YulAssignment","src":"14989:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15001:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15012:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14997:3:29"},"nodeType":"YulFunctionCall","src":"14997:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14989:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15069:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15082:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15093:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15078:3:29"},"nodeType":"YulFunctionCall","src":"15078:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15025:43:29"},"nodeType":"YulFunctionCall","src":"15025:71:29"},"nodeType":"YulExpressionStatement","src":"15025:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15150:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15163:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15174:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15159:3:29"},"nodeType":"YulFunctionCall","src":"15159:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15106:43:29"},"nodeType":"YulFunctionCall","src":"15106:72:29"},"nodeType":"YulExpressionStatement","src":"15106:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15232:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15245:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15256:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15241:3:29"},"nodeType":"YulFunctionCall","src":"15241:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15188:43:29"},"nodeType":"YulFunctionCall","src":"15188:72:29"},"nodeType":"YulExpressionStatement","src":"15188:72:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14935:9:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14947:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14955:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14963:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14974:4:29","type":""}],"src":"14825:442:29"},{"body":{"nodeType":"YulBlock","src":"15371:124:29","statements":[{"nodeType":"YulAssignment","src":"15381:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15393:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15404:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15389:3:29"},"nodeType":"YulFunctionCall","src":"15389:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15381:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15461:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15474:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"15485:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15470:3:29"},"nodeType":"YulFunctionCall","src":"15470:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15417:43:29"},"nodeType":"YulFunctionCall","src":"15417:71:29"},"nodeType":"YulExpressionStatement","src":"15417:71:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15343:9:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15355:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15366:4:29","type":""}],"src":"15273:222:29"},{"body":{"nodeType":"YulBlock","src":"15529:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15546:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15549:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15539:6:29"},"nodeType":"YulFunctionCall","src":"15539:88:29"},"nodeType":"YulExpressionStatement","src":"15539:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15643:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15646:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15636:6:29"},"nodeType":"YulFunctionCall","src":"15636:15:29"},"nodeType":"YulExpressionStatement","src":"15636:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15667:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15670:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15660:6:29"},"nodeType":"YulFunctionCall","src":"15660:15:29"},"nodeType":"YulExpressionStatement","src":"15660:15:29"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15501:180:29"},{"body":{"nodeType":"YulBlock","src":"15731:147:29","statements":[{"nodeType":"YulAssignment","src":"15741:25:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15764:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15746:17:29"},"nodeType":"YulFunctionCall","src":"15746:20:29"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15741:1:29"}]},{"nodeType":"YulAssignment","src":"15775:25:29","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"15798:1:29"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15780:17:29"},"nodeType":"YulFunctionCall","src":"15780:20:29"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"15775:1:29"}]},{"nodeType":"YulAssignment","src":"15809:16:29","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15820:1:29"},{"name":"y","nodeType":"YulIdentifier","src":"15823:1:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15816:3:29"},"nodeType":"YulFunctionCall","src":"15816:9:29"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"15809:3:29"}]},{"body":{"nodeType":"YulBlock","src":"15849:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"15851:16:29"},"nodeType":"YulFunctionCall","src":"15851:18:29"},"nodeType":"YulExpressionStatement","src":"15851:18:29"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15841:1:29"},{"name":"sum","nodeType":"YulIdentifier","src":"15844:3:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15838:2:29"},"nodeType":"YulFunctionCall","src":"15838:10:29"},"nodeType":"YulIf","src":"15835:36:29"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15718:1:29","type":""},{"name":"y","nodeType":"YulTypedName","src":"15721:1:29","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15727:3:29","type":""}],"src":"15687:191:29"},{"body":{"nodeType":"YulBlock","src":"16010:206:29","statements":[{"nodeType":"YulAssignment","src":"16020:26:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16032:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16043:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16028:3:29"},"nodeType":"YulFunctionCall","src":"16028:18:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16020:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16100:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16113:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16124:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16109:3:29"},"nodeType":"YulFunctionCall","src":"16109:17:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16056:43:29"},"nodeType":"YulFunctionCall","src":"16056:71:29"},"nodeType":"YulExpressionStatement","src":"16056:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16181:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16194:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16205:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16190:3:29"},"nodeType":"YulFunctionCall","src":"16190:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16137:43:29"},"nodeType":"YulFunctionCall","src":"16137:72:29"},"nodeType":"YulExpressionStatement","src":"16137:72:29"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15974:9:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15986:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15994:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16005:4:29","type":""}],"src":"15884:332:29"},{"body":{"nodeType":"YulBlock","src":"16432:454:29","statements":[{"nodeType":"YulAssignment","src":"16442:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16454:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16465:3:29","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16450:3:29"},"nodeType":"YulFunctionCall","src":"16450:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16442:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16523:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16536:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16547:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16532:3:29"},"nodeType":"YulFunctionCall","src":"16532:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16479:43:29"},"nodeType":"YulFunctionCall","src":"16479:71:29"},"nodeType":"YulExpressionStatement","src":"16479:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16604:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16617:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16628:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16613:3:29"},"nodeType":"YulFunctionCall","src":"16613:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16560:43:29"},"nodeType":"YulFunctionCall","src":"16560:72:29"},"nodeType":"YulExpressionStatement","src":"16560:72:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16686:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16699:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16710:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16695:3:29"},"nodeType":"YulFunctionCall","src":"16695:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16642:43:29"},"nodeType":"YulFunctionCall","src":"16642:72:29"},"nodeType":"YulExpressionStatement","src":"16642:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16768:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16781:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16792:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16777:3:29"},"nodeType":"YulFunctionCall","src":"16777:18:29"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16724:43:29"},"nodeType":"YulFunctionCall","src":"16724:72:29"},"nodeType":"YulExpressionStatement","src":"16724:72:29"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16850:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16863:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"16874:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16859:3:29"},"nodeType":"YulFunctionCall","src":"16859:19:29"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16806:43:29"},"nodeType":"YulFunctionCall","src":"16806:73:29"},"nodeType":"YulExpressionStatement","src":"16806:73:29"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16372:9:29","type":""},{"name":"value4","nodeType":"YulTypedName","src":"16384:6:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"16392:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16400:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16408:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16416:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16427:4:29","type":""}],"src":"16222:664:29"},{"body":{"nodeType":"YulBlock","src":"17070:367:29","statements":[{"nodeType":"YulAssignment","src":"17080:27:29","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17092:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17103:3:29","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17088:3:29"},"nodeType":"YulFunctionCall","src":"17088:19:29"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17080:4:29"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17161:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17174:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17185:1:29","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17170:3:29"},"nodeType":"YulFunctionCall","src":"17170:17:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17117:43:29"},"nodeType":"YulFunctionCall","src":"17117:71:29"},"nodeType":"YulExpressionStatement","src":"17117:71:29"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17238:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17251:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17262:2:29","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:29"},"nodeType":"YulFunctionCall","src":"17247:18:29"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"17198:39:29"},"nodeType":"YulFunctionCall","src":"17198:68:29"},"nodeType":"YulExpressionStatement","src":"17198:68:29"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17320:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17333:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17344:2:29","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17329:3:29"},"nodeType":"YulFunctionCall","src":"17329:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17276:43:29"},"nodeType":"YulFunctionCall","src":"17276:72:29"},"nodeType":"YulExpressionStatement","src":"17276:72:29"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17402:6:29"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17415:9:29"},{"kind":"number","nodeType":"YulLiteral","src":"17426:2:29","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17411:3:29"},"nodeType":"YulFunctionCall","src":"17411:18:29"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17358:43:29"},"nodeType":"YulFunctionCall","src":"17358:72:29"},"nodeType":"YulExpressionStatement","src":"17358:72:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17018:9:29","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17030:6:29","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17038:6:29","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17046:6:29","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17054:6:29","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17065:4:29","type":""}],"src":"16892:545:29"},{"body":{"nodeType":"YulBlock","src":"17471:152:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17488:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17491:77:29","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17481:6:29"},"nodeType":"YulFunctionCall","src":"17481:88:29"},"nodeType":"YulExpressionStatement","src":"17481:88:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17585:1:29","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17588:4:29","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17578:6:29"},"nodeType":"YulFunctionCall","src":"17578:15:29"},"nodeType":"YulExpressionStatement","src":"17578:15:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17609:1:29","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17612:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17602:6:29"},"nodeType":"YulFunctionCall","src":"17602:15:29"},"nodeType":"YulExpressionStatement","src":"17602:15:29"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"17443:180:29"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3925":[{"length":32,"start":3911}],"3927":[{"length":32,"start":3870}],"3929":[{"length":32,"start":3784}],"3931":[{"length":32,"start":5956}],"3933":[{"length":32,"start":5989}],"3936":[{"length":32,"start":4548}],"3939":[{"length":32,"start":4607}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063a217fddf1161007c578063a217fddf146103f3578063a9059cbb14610411578063d505accf14610441578063d53913931461045d578063d547741f1461047b578063dd62ed3e1461049757610158565b806370a082311461030557806379cc6790146103355780637ecebe001461035157806384b0196e1461038157806391d14854146103a557806395d89b41146103d557610158565b80632f2ff15d116101155780632f2ff15d14610259578063313ce567146102755780633644e5151461029357806336568abe146102b157806340c10f19146102cd57806342966c68146102e957610158565b806301ffc9a71461015d57806306fdde031461018d578063095ea7b3146101ab57806318160ddd146101db57806323b872dd146101f9578063248a9ca314610229575b600080fd5b61017760048036038101906101729190611c1f565b6104c7565b6040516101849190611c67565b60405180910390f35b610195610541565b6040516101a29190611d12565b60405180910390f35b6101c560048036038101906101c09190611dc8565b6105d3565b6040516101d29190611c67565b60405180910390f35b6101e36105f6565b6040516101f09190611e17565b60405180910390f35b610213600480360381019061020e9190611e32565b610600565b6040516102209190611c67565b60405180910390f35b610243600480360381019061023e9190611ebb565b61062f565b6040516102509190611ef7565b60405180910390f35b610273600480360381019061026e9190611f12565b61064f565b005b61027d610671565b60405161028a9190611f6e565b60405180910390f35b61029b61067a565b6040516102a89190611ef7565b60405180910390f35b6102cb60048036038101906102c69190611f12565b610689565b005b6102e760048036038101906102e29190611dc8565b610704565b005b61030360048036038101906102fe9190611f89565b61073d565b005b61031f600480360381019061031a9190611fb6565b610751565b60405161032c9190611e17565b60405180910390f35b61034f600480360381019061034a9190611dc8565b610799565b005b61036b60048036038101906103669190611fb6565b6107b9565b6040516103789190611e17565b60405180910390f35b6103896107cb565b60405161039c97969594939291906120eb565b60405180910390f35b6103bf60048036038101906103ba9190611f12565b610875565b6040516103cc9190611c67565b60405180910390f35b6103dd6108e0565b6040516103ea9190611d12565b60405180910390f35b6103fb610972565b6040516104089190611ef7565b60405180910390f35b61042b60048036038101906104269190611dc8565b610979565b6040516104389190611c67565b60405180910390f35b61045b6004803603810190610456919061219b565b61099c565b005b610465610ae4565b6040516104729190611ef7565b60405180910390f35b61049560048036038101906104909190611f12565b610b08565b005b6104b160048036038101906104ac919061223d565b610b2a565b6040516104be9190611e17565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061053a575061053982610bb1565b5b9050919050565b606060038054610550906122ac565b80601f016020809104026020016040519081016040528092919081815260200182805461057c906122ac565b80156105c95780601f1061059e576101008083540402835291602001916105c9565b820191906000526020600020905b8154815290600101906020018083116105ac57829003601f168201915b5050505050905090565b6000806105de610c1b565b90506105eb818585610c23565b600191505092915050565b6000600254905090565b60008061060b610c1b565b9050610618858285610c35565b610623858585610cca565b60019150509392505050565b600060056000838152602001908152602001600020600101549050919050565b6106588261062f565b61066181610dbe565b61066b8383610dd2565b50505050565b60006012905090565b6000610684610ec4565b905090565b610691610c1b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106f5576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106ff8282610f7b565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661072e81610dbe565b610738838361106e565b505050565b61074e610748610c1b565b826110f0565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107ab826107a5610c1b565b83610c35565b6107b582826110f0565b5050565b60006107c482611172565b9050919050565b6000606080600080600060606107df6111bb565b6107e76111f6565b46306000801b600067ffffffffffffffff811115610808576108076122dd565b5b6040519080825280602002602001820160405280156108365781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60006005600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600480546108ef906122ac565b80601f016020809104026020016040519081016040528092919081815260200182805461091b906122ac565b80156109685780601f1061093d57610100808354040283529160200191610968565b820191906000526020600020905b81548152906001019060200180831161094b57829003601f168201915b5050505050905090565b6000801b81565b600080610984610c1b565b9050610991818585610cca565b600191505092915050565b834211156109e157836040517f627913020000000000000000000000000000000000000000000000000000000081526004016109d89190611e17565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610a108c611231565b89604051602001610a269695949392919061230c565b6040516020818303038152906040528051906020012090506000610a4982611288565b90506000610a59828787876112a2565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610acd57808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610ac492919061236d565b60405180910390fd5b610ad88a8a8a610c23565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610b118261062f565b610b1a81610dbe565b610b248383610f7b565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610c3083838360016112d2565b505050565b6000610c418484610b2a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cc45781811015610cb4578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cab93929190612396565b60405180910390fd5b610cc3848484840360006112d2565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3c5760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d3391906123cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dae5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610da591906123cd565b60405180910390fd5b610db98383836114a9565b505050565b610dcf81610dca610c1b565b6116ce565b50565b6000610dde8383610875565b610eb95760016005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e56610c1b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ebe565b600090505b92915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610f4057507f000000000000000000000000000000000000000000000000000000000000000046145b15610f6d577f00000000000000000000000000000000000000000000000000000000000000009050610f78565b610f7561171f565b90505b90565b6000610f878383610875565b156110635760006005600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611000610c1b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611068565b600090505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110e05760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016110d791906123cd565b60405180910390fd5b6110ec600083836114a9565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111625760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161115991906123cd565b60405180910390fd5b61116e826000836114a9565b5050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606111f160067f00000000000000000000000000000000000000000000000000000000000000006117b590919063ffffffff16565b905090565b606061122c60077f00000000000000000000000000000000000000000000000000000000000000006117b590919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b600061129b611295610ec4565b83611865565b9050919050565b6000806000806112b4888888886118a6565b9250925092506112c4828261199a565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113445760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161133b91906123cd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113b65760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016113ad91906123cd565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156114a3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161149a9190611e17565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114fb5780600260008282546114ef9190612417565b925050819055506115ce565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611587578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161157e93929190612396565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116175780600260008282540392505081905550611664565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116c19190611e17565b60405180910390a3505050565b6116d88282610875565b61171b5780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161171292919061244b565b60405180910390fd5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161179a959493929190612474565b60405160208183030381529060405280519060200120905090565b606060ff60001b83146117d2576117cb83611afe565b905061185f565b8180546117de906122ac565b80601f016020809104026020016040519081016040528092919081815260200182805461180a906122ac565b80156118575780601f1061182c57610100808354040283529160200191611857565b820191906000526020600020905b81548152906001019060200180831161183a57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156118e6576000600385925092509250611990565b60006001888888886040516000815260200160405260405161190b94939291906124c7565b6020604051602081039080840390855afa15801561192d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361198157600060016000801b93509350935050611990565b8060008060001b935093509350505b9450945094915050565b600060038111156119ae576119ad61250c565b5b8260038111156119c1576119c061250c565b5b0315611afa57600160038111156119db576119da61250c565b5b8260038111156119ee576119ed61250c565b5b03611a25576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115611a3957611a3861250c565b5b826003811115611a4c57611a4b61250c565b5b03611a91578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611a889190611e17565b60405180910390fd5b600380811115611aa457611aa361250c565b5b826003811115611ab757611ab661250c565b5b03611af957806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611af09190611ef7565b60405180910390fd5b5b5050565b60606000611b0b83611b72565b90506000602067ffffffffffffffff811115611b2a57611b296122dd565b5b6040519080825280601f01601f191660200182016040528015611b5c5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f811115611bb9576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bfc81611bc7565b8114611c0757600080fd5b50565b600081359050611c1981611bf3565b92915050565b600060208284031215611c3557611c34611bc2565b5b6000611c4384828501611c0a565b91505092915050565b60008115159050919050565b611c6181611c4c565b82525050565b6000602082019050611c7c6000830184611c58565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cbc578082015181840152602081019050611ca1565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ce482611c82565b611cee8185611c8d565b9350611cfe818560208601611c9e565b611d0781611cc8565b840191505092915050565b60006020820190508181036000830152611d2c8184611cd9565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d5f82611d34565b9050919050565b611d6f81611d54565b8114611d7a57600080fd5b50565b600081359050611d8c81611d66565b92915050565b6000819050919050565b611da581611d92565b8114611db057600080fd5b50565b600081359050611dc281611d9c565b92915050565b60008060408385031215611ddf57611dde611bc2565b5b6000611ded85828601611d7d565b9250506020611dfe85828601611db3565b9150509250929050565b611e1181611d92565b82525050565b6000602082019050611e2c6000830184611e08565b92915050565b600080600060608486031215611e4b57611e4a611bc2565b5b6000611e5986828701611d7d565b9350506020611e6a86828701611d7d565b9250506040611e7b86828701611db3565b9150509250925092565b6000819050919050565b611e9881611e85565b8114611ea357600080fd5b50565b600081359050611eb581611e8f565b92915050565b600060208284031215611ed157611ed0611bc2565b5b6000611edf84828501611ea6565b91505092915050565b611ef181611e85565b82525050565b6000602082019050611f0c6000830184611ee8565b92915050565b60008060408385031215611f2957611f28611bc2565b5b6000611f3785828601611ea6565b9250506020611f4885828601611d7d565b9150509250929050565b600060ff82169050919050565b611f6881611f52565b82525050565b6000602082019050611f836000830184611f5f565b92915050565b600060208284031215611f9f57611f9e611bc2565b5b6000611fad84828501611db3565b91505092915050565b600060208284031215611fcc57611fcb611bc2565b5b6000611fda84828501611d7d565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b61201881611fe3565b82525050565b61202781611d54565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61206281611d92565b82525050565b60006120748383612059565b60208301905092915050565b6000602082019050919050565b60006120988261202d565b6120a28185612038565b93506120ad83612049565b8060005b838110156120de5781516120c58882612068565b97506120d083612080565b9250506001810190506120b1565b5085935050505092915050565b600060e082019050612100600083018a61200f565b81810360208301526121128189611cd9565b905081810360408301526121268188611cd9565b90506121356060830187611e08565b612142608083018661201e565b61214f60a0830185611ee8565b81810360c0830152612161818461208d565b905098975050505050505050565b61217881611f52565b811461218357600080fd5b50565b6000813590506121958161216f565b92915050565b600080600080600080600060e0888a0312156121ba576121b9611bc2565b5b60006121c88a828b01611d7d565b97505060206121d98a828b01611d7d565b96505060406121ea8a828b01611db3565b95505060606121fb8a828b01611db3565b945050608061220c8a828b01612186565b93505060a061221d8a828b01611ea6565b92505060c061222e8a828b01611ea6565b91505092959891949750929550565b6000806040838503121561225457612253611bc2565b5b600061226285828601611d7d565b925050602061227385828601611d7d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806122c457607f821691505b6020821081036122d7576122d661227d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c0820190506123216000830189611ee8565b61232e602083018861201e565b61233b604083018761201e565b6123486060830186611e08565b6123556080830185611e08565b61236260a0830184611e08565b979650505050505050565b6000604082019050612382600083018561201e565b61238f602083018461201e565b9392505050565b60006060820190506123ab600083018661201e565b6123b86020830185611e08565b6123c56040830184611e08565b949350505050565b60006020820190506123e2600083018461201e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061242282611d92565b915061242d83611d92565b9250828201905080821115612445576124446123e8565b5b92915050565b6000604082019050612460600083018561201e565b61246d6020830184611ee8565b9392505050565b600060a0820190506124896000830188611ee8565b6124966020830187611ee8565b6124a36040830186611ee8565b6124b06060830185611e08565b6124bd608083018461201e565b9695505050505050565b60006080820190506124dc6000830187611ee8565b6124e96020830186611f5f565b6124f66040830185611ee8565b6125036060830184611ee8565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212207917f4eeabe00ede3b8011e0b7908a7fa531314767471bce6753bb05db6c7d9c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x441 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x497 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x3D5 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x2E9 JUMPI PUSH2 0x158 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x229 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x195 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x5D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1EBB JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27D PUSH2 0x671 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1F6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x689 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x704 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH2 0x7CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DD PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1D12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH2 0x972 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH2 0x979 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x438 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x456 SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x465 PUSH2 0xAE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x472 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x495 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x1F12 JUMP JUMPDEST PUSH2 0xB08 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x223D JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x53A JUMPI POP PUSH2 0x539 DUP3 PUSH2 0xBB1 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x550 SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57C SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5DE PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP PUSH2 0x5EB DUP2 DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x60B PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP6 DUP3 DUP6 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x623 DUP6 DUP6 DUP6 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x658 DUP3 PUSH2 0x62F JUMP JUMPDEST PUSH2 0x661 DUP2 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x66B DUP4 DUP4 PUSH2 0xDD2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0xEC4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x691 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6FF DUP3 DUP3 PUSH2 0xF7B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x72E DUP2 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x738 DUP4 DUP4 PUSH2 0x106E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x74E PUSH2 0x748 PUSH2 0xC1B JUMP JUMPDEST DUP3 PUSH2 0x10F0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AB DUP3 PUSH2 0x7A5 PUSH2 0xC1B JUMP JUMPDEST DUP4 PUSH2 0xC35 JUMP JUMPDEST PUSH2 0x7B5 DUP3 DUP3 PUSH2 0x10F0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C4 DUP3 PUSH2 0x1172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x7DF PUSH2 0x11BB JUMP JUMPDEST PUSH2 0x7E7 PUSH2 0x11F6 JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x808 JUMPI PUSH2 0x807 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x836 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8EF SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91B SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x968 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x968 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x984 PUSH2 0xC1B JUMP JUMPDEST SWAP1 POP PUSH2 0x991 DUP2 DUP6 DUP6 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x9E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xA10 DUP13 PUSH2 0x1231 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA26 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xA49 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA59 DUP3 DUP8 DUP8 DUP8 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xACD JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP3 SWAP2 SWAP1 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD8 DUP11 DUP11 DUP11 PUSH2 0xC23 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xB11 DUP3 PUSH2 0x62F JUMP JUMPDEST PUSH2 0xB1A DUP2 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0xB24 DUP4 DUP4 PUSH2 0xF7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC30 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x12D2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC41 DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCC4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCB4 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC3 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x12D2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDAE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA5 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDB9 DUP4 DUP4 DUP4 PUSH2 0x14A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0xDCA PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x16CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDE DUP4 DUP4 PUSH2 0x875 JUMP JUMPDEST PUSH2 0xEB9 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE56 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xF40 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xF6D JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xF75 PUSH2 0x171F JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 DUP4 DUP4 PUSH2 0x875 JUMP JUMPDEST ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1000 PUSH2 0xC1B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10E0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D7 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10EC PUSH1 0x0 DUP4 DUP4 PUSH2 0x14A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1162 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1159 SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x116E DUP3 PUSH1 0x0 DUP4 PUSH2 0x14A9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11F1 PUSH1 0x6 PUSH32 0x0 PUSH2 0x17B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x122C PUSH1 0x7 PUSH32 0x0 PUSH2 0x17B5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129B PUSH2 0x1295 PUSH2 0xEC4 JUMP JUMPDEST DUP4 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x12B4 DUP9 DUP9 DUP9 DUP9 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12C4 DUP3 DUP3 PUSH2 0x199A JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1344 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133B SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13B6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AD SWAP2 SWAP1 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x14A3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x149A SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14FB JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14EF SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1587 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1617 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1664 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x16C1 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x16D8 DUP3 DUP3 PUSH2 0x875 JUMP JUMPDEST PUSH2 0x171B JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1712 SWAP3 SWAP2 SWAP1 PUSH2 0x244B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x179A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2474 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x17D2 JUMPI PUSH2 0x17CB DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP1 POP PUSH2 0x185F JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x17DE SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x180A SWAP1 PUSH2 0x22AC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1857 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x182C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1857 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x183A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x18E6 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x190B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x192D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1981 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1990 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19AE JUMPI PUSH2 0x19AD PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1AFA JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19DB JUMPI PUSH2 0x19DA PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19EE JUMPI PUSH2 0x19ED PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A25 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A39 JUMPI PUSH2 0x1A38 PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4B PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A91 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A88 SWAP2 SWAP1 PUSH2 0x1E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1AA4 JUMPI PUSH2 0x1AA3 PUSH2 0x250C JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1AB7 JUMPI PUSH2 0x1AB6 PUSH2 0x250C JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1AF9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF0 SWAP2 SWAP1 PUSH2 0x1EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1B0B DUP4 PUSH2 0x1B72 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2A JUMPI PUSH2 0x1B29 PUSH2 0x22DD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B5C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BFC DUP2 PUSH2 0x1BC7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C19 DUP2 PUSH2 0x1BF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C35 JUMPI PUSH2 0x1C34 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C43 DUP5 DUP3 DUP6 ADD PUSH2 0x1C0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C61 DUP2 PUSH2 0x1C4C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C7C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CBC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CA1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE4 DUP3 PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x1CEE DUP2 DUP6 PUSH2 0x1C8D JUMP JUMPDEST SWAP4 POP PUSH2 0x1CFE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C9E JUMP JUMPDEST PUSH2 0x1D07 DUP2 PUSH2 0x1CC8 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D2C DUP2 DUP5 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5F DUP3 PUSH2 0x1D34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6F DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D8C DUP2 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA5 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DC2 DUP2 PUSH2 0x1D9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DDF JUMPI PUSH2 0x1DDE PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DED DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DFE DUP6 DUP3 DUP7 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E11 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E2C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E4B JUMPI PUSH2 0x1E4A PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E59 DUP7 DUP3 DUP8 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E6A DUP7 DUP3 DUP8 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E7B DUP7 DUP3 DUP8 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E98 DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EB5 DUP2 PUSH2 0x1E8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED1 JUMPI PUSH2 0x1ED0 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EDF DUP5 DUP3 DUP6 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF1 DUP2 PUSH2 0x1E85 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F29 JUMPI PUSH2 0x1F28 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F37 DUP6 DUP3 DUP7 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F48 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F68 DUP2 PUSH2 0x1F52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F83 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FAD DUP5 DUP3 DUP6 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FCC JUMPI PUSH2 0x1FCB PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FDA DUP5 DUP3 DUP6 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2018 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2027 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2062 DUP2 PUSH2 0x1D92 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2074 DUP4 DUP4 PUSH2 0x2059 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2098 DUP3 PUSH2 0x202D JUMP JUMPDEST PUSH2 0x20A2 DUP2 DUP6 PUSH2 0x2038 JUMP JUMPDEST SWAP4 POP PUSH2 0x20AD DUP4 PUSH2 0x2049 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20DE JUMPI DUP2 MLOAD PUSH2 0x20C5 DUP9 DUP3 PUSH2 0x2068 JUMP JUMPDEST SWAP8 POP PUSH2 0x20D0 DUP4 PUSH2 0x2080 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x20B1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2100 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x200F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2112 DUP2 DUP10 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2126 DUP2 DUP9 PUSH2 0x1CD9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2135 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x2142 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x214F PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1EE8 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x2161 DUP2 DUP5 PUSH2 0x208D JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2178 DUP2 PUSH2 0x1F52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2195 DUP2 PUSH2 0x216F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C8 DUP11 DUP3 DUP12 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x21D9 DUP11 DUP3 DUP12 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x21EA DUP11 DUP3 DUP12 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x21FB DUP11 DUP3 DUP12 ADD PUSH2 0x1DB3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x220C DUP11 DUP3 DUP12 ADD PUSH2 0x2186 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x221D DUP11 DUP3 DUP12 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x222E DUP11 DUP3 DUP12 ADD PUSH2 0x1EA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2254 JUMPI PUSH2 0x2253 PUSH2 0x1BC2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2262 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2273 DUP6 DUP3 DUP7 ADD PUSH2 0x1D7D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x22C4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x22D7 JUMPI PUSH2 0x22D6 PUSH2 0x227D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2321 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x232E PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x233B PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x2348 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x2355 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x2362 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2382 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x238F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23AB PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x23B8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x23C5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E08 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2422 DUP3 PUSH2 0x1D92 JUMP JUMPDEST SWAP2 POP PUSH2 0x242D DUP4 PUSH2 0x1D92 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2445 JUMPI PUSH2 0x2444 PUSH2 0x23E8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2460 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x201E JUMP JUMPDEST PUSH2 0x246D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2489 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x2496 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x24A3 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x24B0 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1E08 JUMP JUMPDEST PUSH2 0x24BD PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x201E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24DC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x24E9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1F5F JUMP JUMPDEST PUSH2 0x24F6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EE8 JUMP JUMPDEST PUSH2 0x2503 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1EE8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x17F4EEABE00EDE3B8011E0B7908A7FA531314767471BCE6753BB SDIV 0xDB PUSH13 0x7D9C64736F6C63430008140033 ","sourceMap":"322:435:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1760:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2688:82:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2659:112:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;650:105:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;618:87:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:158:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2409:143:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5243:557:18;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1683:672:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;400:62:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3532:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1760:89:5:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2688:82:5:-;2737:5;2761:2;2754:9;;2688:82;:::o;2659:112:8:-;2718:7;2744:20;:18;:20::i;:::-;2737:27;;2659:112;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;650:105:28:-;438:24;2464:16:0;2475:4;2464:10;:16::i;:::-;731:17:28::1;737:2;741:6;731:5;:17::i;:::-;650:105:::0;;;:::o;618:87:7:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2985:116:5:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;1021:158:7:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;2409:143:8:-;2500:7;2526:19;2539:5;2526:12;:19::i;:::-;2519:26;;2409:143;;;:::o;5243:557:18:-;5341:13;5368:18;5400:21;5435:15;5464:25;5503:12;5529:27;5632:13;:11;:13::i;:::-;5659:16;:14;:16::i;:::-;5689:13;5724:4;5751:1;5743:10;;5781:1;5767:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:212;;;;;;;;;;;;;;;;;;;;;5243:557;;;;;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1962:93:5:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3296:178:5:-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;1683:672:8:-;1904:8;1886:15;:26;1882:97;;;1959:8;1935:33;;;;;;;;;;;:::i;:::-;;;;;;;;1882:97;1989:18;1024:95;2048:5;2055:7;2064:5;2071:16;2081:5;2071:9;:16::i;:::-;2089:8;2020:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2010:89;;;;;;1989:110;;2110:12;2125:28;2142:10;2125:16;:28::i;:::-;2110:43;;2164:14;2181:28;2195:4;2201:1;2204;2207;2181:13;:28::i;:::-;2164:45;;2233:5;2223:15;;:6;:15;;;2219:88;;2282:6;2290:5;2261:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2219:88;2317:31;2326:5;2333:7;2342:5;2317:8;:31::i;:::-;1872:483;;;1683:672;;;;;;;:::o;400:62:28:-;438:24;400:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3532:140:5:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;763:146:20:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;8707:128:5:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3945:262:18:-;3998:7;4038:11;4021:28;;4029:4;4021:28;;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;4107:22;4100:29;;;;4017:184;4167:23;:21;:23::i;:::-;4160:30;;3945:262;;:::o;6732:317:0:-;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:6;:12;6875:4;6868:12;;;;;;;;;;;:20;;:29;6889:7;6868:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6951:12;:10;:12::i;:::-;6924:40;;6942:7;6924:40;;6936:4;6924:40;;;;;;;;;;6985:4;6978:11;;;;6826:217;7027:5;7020:12;;6732:317;;;;;:::o;7439:208:5:-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;538:107:12:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6120:126:18:-;6166:13;6198:41;6225:13;6198:5;:26;;:41;;;;:::i;:::-;6191:48;;6120:126;:::o;6572:135::-;6621:13;6653:47;6683:16;6653:8;:29;;:47;;;;:::i;:::-;6646:54;;6572:135;:::o;759:395:12:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;5017:176:18:-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;5120:32;:66::i;:::-;5113:73;;5017:176;;;:::o;6887:260:17:-;6972:7;6992:17;7011:18;7031:16;7051:25;7062:4;7068:1;7071;7074;7051:10;:25::i;:::-;6991:85;;;;;;7086:28;7098:5;7105:8;7086:11;:28::i;:::-;7131:9;7124:16;;;;;6887:260;;;;;;:::o;9682:432:5:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;4213:179:18:-;4268:7;2079:95;4326:11;4339:14;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;3368:267:14:-;3462:13;1390:66;3520:17;;3510:5;3491:46;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:267;;;;;:::o;3874:374:19:-;3967:14;4049:4;4043:11;4079:10;4074:3;4067:23;4126:15;4119:4;4114:3;4110:14;4103:39;4178:10;4171:4;4166:3;4162:14;4155:34;4227:4;4222:3;4212:20;4202:30;;4018:224;3874:374;;;;:::o;5203:1551:17:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;2078:378:14:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2528:245::-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;88:117:29:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:::-;7527:6;7576:2;7564:9;7555:7;7551:23;7547:32;7544:119;;;7582:79;;:::i;:::-;7544:119;7702:1;7727:53;7772:7;7763:6;7752:9;7748:22;7727:53;:::i;:::-;7717:63;;7673:117;7468:329;;;;:::o;7803:149::-;7839:7;7879:66;7872:5;7868:78;7857:89;;7803:149;;;:::o;7958:115::-;8043:23;8060:5;8043:23;:::i;:::-;8038:3;8031:36;7958:115;;:::o;8079:118::-;8166:24;8184:5;8166:24;:::i;:::-;8161:3;8154:37;8079:118;;:::o;8203:114::-;8270:6;8304:5;8298:12;8288:22;;8203:114;;;:::o;8323:184::-;8422:11;8456:6;8451:3;8444:19;8496:4;8491:3;8487:14;8472:29;;8323:184;;;;:::o;8513:132::-;8580:4;8603:3;8595:11;;8633:4;8628:3;8624:14;8616:22;;8513:132;;;:::o;8651:108::-;8728:24;8746:5;8728:24;:::i;:::-;8723:3;8716:37;8651:108;;:::o;8765:179::-;8834:10;8855:46;8897:3;8889:6;8855:46;:::i;:::-;8933:4;8928:3;8924:14;8910:28;;8765:179;;;;:::o;8950:113::-;9020:4;9052;9047:3;9043:14;9035:22;;8950:113;;;:::o;9099:732::-;9218:3;9247:54;9295:5;9247:54;:::i;:::-;9317:86;9396:6;9391:3;9317:86;:::i;:::-;9310:93;;9427:56;9477:5;9427:56;:::i;:::-;9506:7;9537:1;9522:284;9547:6;9544:1;9541:13;9522:284;;;9623:6;9617:13;9650:63;9709:3;9694:13;9650:63;:::i;:::-;9643:70;;9736:60;9789:6;9736:60;:::i;:::-;9726:70;;9582:224;9569:1;9566;9562:9;9557:14;;9522:284;;;9526:14;9822:3;9815:10;;9223:608;;;9099:732;;;;:::o;9837:1215::-;10186:4;10224:3;10213:9;10209:19;10201:27;;10238:69;10304:1;10293:9;10289:17;10280:6;10238:69;:::i;:::-;10354:9;10348:4;10344:20;10339:2;10328:9;10324:18;10317:48;10382:78;10455:4;10446:6;10382:78;:::i;:::-;10374:86;;10507:9;10501:4;10497:20;10492:2;10481:9;10477:18;10470:48;10535:78;10608:4;10599:6;10535:78;:::i;:::-;10527:86;;10623:72;10691:2;10680:9;10676:18;10667:6;10623:72;:::i;:::-;10705:73;10773:3;10762:9;10758:19;10749:6;10705:73;:::i;:::-;10788;10856:3;10845:9;10841:19;10832:6;10788:73;:::i;:::-;10909:9;10903:4;10899:20;10893:3;10882:9;10878:19;10871:49;10937:108;11040:4;11031:6;10937:108;:::i;:::-;10929:116;;9837:1215;;;;;;;;;;:::o;11058:118::-;11129:22;11145:5;11129:22;:::i;:::-;11122:5;11119:33;11109:61;;11166:1;11163;11156:12;11109:61;11058:118;:::o;11182:135::-;11226:5;11264:6;11251:20;11242:29;;11280:31;11305:5;11280:31;:::i;:::-;11182:135;;;;:::o;11323:1199::-;11434:6;11442;11450;11458;11466;11474;11482;11531:3;11519:9;11510:7;11506:23;11502:33;11499:120;;;11538:79;;:::i;:::-;11499:120;11658:1;11683:53;11728:7;11719:6;11708:9;11704:22;11683:53;:::i;:::-;11673:63;;11629:117;11785:2;11811:53;11856:7;11847:6;11836:9;11832:22;11811:53;:::i;:::-;11801:63;;11756:118;11913:2;11939:53;11984:7;11975:6;11964:9;11960:22;11939:53;:::i;:::-;11929:63;;11884:118;12041:2;12067:53;12112:7;12103:6;12092:9;12088:22;12067:53;:::i;:::-;12057:63;;12012:118;12169:3;12196:51;12239:7;12230:6;12219:9;12215:22;12196:51;:::i;:::-;12186:61;;12140:117;12296:3;12323:53;12368:7;12359:6;12348:9;12344:22;12323:53;:::i;:::-;12313:63;;12267:119;12425:3;12452:53;12497:7;12488:6;12477:9;12473:22;12452:53;:::i;:::-;12442:63;;12396:119;11323:1199;;;;;;;;;;:::o;12528:474::-;12596:6;12604;12653:2;12641:9;12632:7;12628:23;12624:32;12621:119;;;12659:79;;:::i;:::-;12621:119;12779:1;12804:53;12849:7;12840:6;12829:9;12825:22;12804:53;:::i;:::-;12794:63;;12750:117;12906:2;12932:53;12977:7;12968:6;12957:9;12953:22;12932:53;:::i;:::-;12922:63;;12877:118;12528:474;;;;;:::o;13008:180::-;13056:77;13053:1;13046:88;13153:4;13150:1;13143:15;13177:4;13174:1;13167:15;13194:320;13238:6;13275:1;13269:4;13265:12;13255:22;;13322:1;13316:4;13312:12;13343:18;13333:81;;13399:4;13391:6;13387:17;13377:27;;13333:81;13461:2;13453:6;13450:14;13430:18;13427:38;13424:84;;13480:18;;:::i;:::-;13424:84;13245:269;13194:320;;;:::o;13520:180::-;13568:77;13565:1;13558:88;13665:4;13662:1;13655:15;13689:4;13686:1;13679:15;13706:775;13939:4;13977:3;13966:9;13962:19;13954:27;;13991:71;14059:1;14048:9;14044:17;14035:6;13991:71;:::i;:::-;14072:72;14140:2;14129:9;14125:18;14116:6;14072:72;:::i;:::-;14154;14222:2;14211:9;14207:18;14198:6;14154:72;:::i;:::-;14236;14304:2;14293:9;14289:18;14280:6;14236:72;:::i;:::-;14318:73;14386:3;14375:9;14371:19;14362:6;14318:73;:::i;:::-;14401;14469:3;14458:9;14454:19;14445:6;14401:73;:::i;:::-;13706:775;;;;;;;;;:::o;14487:332::-;14608:4;14646:2;14635:9;14631:18;14623:26;;14659:71;14727:1;14716:9;14712:17;14703:6;14659:71;:::i;:::-;14740:72;14808:2;14797:9;14793:18;14784:6;14740:72;:::i;:::-;14487:332;;;;;:::o;14825:442::-;14974:4;15012:2;15001:9;14997:18;14989:26;;15025:71;15093:1;15082:9;15078:17;15069:6;15025:71;:::i;:::-;15106:72;15174:2;15163:9;15159:18;15150:6;15106:72;:::i;:::-;15188;15256:2;15245:9;15241:18;15232:6;15188:72;:::i;:::-;14825:442;;;;;;:::o;15273:222::-;15366:4;15404:2;15393:9;15389:18;15381:26;;15417:71;15485:1;15474:9;15470:17;15461:6;15417:71;:::i;:::-;15273:222;;;;:::o;15501:180::-;15549:77;15546:1;15539:88;15646:4;15643:1;15636:15;15670:4;15667:1;15660:15;15687:191;15727:3;15746:20;15764:1;15746:20;:::i;:::-;15741:25;;15780:20;15798:1;15780:20;:::i;:::-;15775:25;;15823:1;15820;15816:9;15809:16;;15844:3;15841:1;15838:10;15835:36;;;15851:18;;:::i;:::-;15835:36;15687:191;;;;:::o;15884:332::-;16005:4;16043:2;16032:9;16028:18;16020:26;;16056:71;16124:1;16113:9;16109:17;16100:6;16056:71;:::i;:::-;16137:72;16205:2;16194:9;16190:18;16181:6;16137:72;:::i;:::-;15884:332;;;;;:::o;16222:664::-;16427:4;16465:3;16454:9;16450:19;16442:27;;16479:71;16547:1;16536:9;16532:17;16523:6;16479:71;:::i;:::-;16560:72;16628:2;16617:9;16613:18;16604:6;16560:72;:::i;:::-;16642;16710:2;16699:9;16695:18;16686:6;16642:72;:::i;:::-;16724;16792:2;16781:9;16777:18;16768:6;16724:72;:::i;:::-;16806:73;16874:3;16863:9;16859:19;16850:6;16806:73;:::i;:::-;16222:664;;;;;;;;:::o;16892:545::-;17065:4;17103:3;17092:9;17088:19;17080:27;;17117:71;17185:1;17174:9;17170:17;17161:6;17117:71;:::i;:::-;17198:68;17262:2;17251:9;17247:18;17238:6;17198:68;:::i;:::-;17276:72;17344:2;17333:9;17329:18;17320:6;17276:72;:::i;:::-;17358;17426:2;17415:9;17411:18;17402:6;17358:72;:::i;:::-;16892:545;;;;;;;:::o;17443:180::-;17491:77;17488:1;17481:88;17588:4;17585:1;17578:15;17612:4;17609:1;17602:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","eip712Domain()":"84b0196e","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FeedsToken.sol\":\"FeedsToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xaa7f0646f49ebe2606eeca169f85c56451bbaeeeb06265fa076a03369a25d1d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee931d4e832385765967efe6366dcc6d00d6a2d794f9c66ee38283c03882de9c\",\"dweb:/ipfs/QmR6SkuJGYxpQeLz38rBdghqaWqEPfzUsL9kBoXgEXKtbD\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/FeedsToken.sol\":{\"keccak256\":\"0xf2bd790b234bd258305b3354fad7e309089c48605c95c5e654041223f85ae6ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91dc2c85a0e825d77ceda3d804e33b40c26837068fd9c3b233ec0463042d3749\",\"dweb:/ipfs/QmbX3oc64s9HFpjA98Nk1QJz57qVdnaGXHHHcKKfXK7259\"]}},\"version\":1}"}}}}}